{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport { item } from \"react-native-web/dist/index\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ChatScreen = function (_Component) {\n  _inherits(ChatScreen, _Component);\n  var _super = _createSuper(ChatScreen);\n  function ChatScreen(props) {\n    var _this;\n    _classCallCheck(this, ChatScreen);\n    _this = _super.call(this, props);\n    _this.state = {\n      chats: [],\n      chatDetails: null,\n      messages: [],\n      error: null,\n      submitted: false,\n      newChatUserId: '',\n      newMessage: ''\n    };\n    return _this;\n  }\n  _createClass(ChatScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.viewChats();\n    }\n  }, {\n    key: \"viewChats\",\n    value: function () {\n      var _viewChats = _asyncToGenerator(function* () {\n        try {\n          var response = yield fetch('http://localhost:3333/api/1.0.0/chat', {\n            method: 'GET',\n            headers: {\n              'X-Authorization': yield AsyncStorage.getItem('whatsthat_session_token'),\n              'Content-Type': 'application/json'\n            }\n          });\n          if (response.status === 200) {\n            var chats = yield response.json();\n            console.log('Chats fetched from server: ', chats);\n            this.setState({\n              chats: chats\n            });\n          } else if (response.status === 401) {\n            console.log('Unauthorised');\n            yield AsyncStorage.removeItem('whatsthat_session_token');\n            yield AsyncStorage.removeItem('whatsthat_user_id');\n            this.props.navigation.navigate('Login');\n          } else {\n            throw 'Server Error';\n          }\n        } catch (error) {\n          this.setState({\n            error: error\n          });\n        }\n      });\n      function viewChats() {\n        return _viewChats.apply(this, arguments);\n      }\n      return viewChats;\n    }()\n  }, {\n    key: \"viewChatDetails\",\n    value: function () {\n      var _viewChatDetails = _asyncToGenerator(function* (chatId) {\n        console.log(\"View details for chat with ID: \", chatId);\n        try {\n          var response = yield fetch(\"http://localhost:3333/api/1.0.0/chat/\", {\n            method: 'GET',\n            headers: {\n              'X-Authorization': yield AsyncStorage.getItem('whatsthat_session_token'),\n              'Content-Type': 'application/json'\n            }\n          });\n          if (response.status === 200) {\n            var chatDetails = yield response.json();\n            console.log(chatDetails);\n          } else if (response.status === 401) {\n            console.log('Unauthorised');\n            yield AsyncStorage.removeItem('whatsthat_session_token');\n            yield AsyncStorage.removeItem('whatsthat_user_id');\n            this.props.navigation.navigate('Login');\n          } else {\n            throw 'Server Error';\n          }\n        } catch (error) {\n          console.error('Error in viewChatDetails:', error);\n        }\n      });\n      function viewChatDetails(_x) {\n        return _viewChatDetails.apply(this, arguments);\n      }\n      return viewChatDetails;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var chats = this.state.chats;\n      return _jsxs(View, {\n        children: [_jsx(Text, {\n          children: \"HELLO THIS IS MY CHAT\"\n        }), _jsxs(Text, {\n          children: [\"Chat ID: \", item.chat_id]\n        }), _jsx(Button, {\n          title: \"View Chat Details\",\n          onPress: function onPress() {\n            return _this2.viewChatDetails(item.chat_id);\n          }\n        }), _jsx(FlatList, {\n          data: chats,\n          renderItem: this.renderItem,\n          keyExtractor: function keyExtractor(item) {\n            return item.chat_id.toString();\n          }\n        })]\n      });\n    }\n  }]);\n  return ChatScreen;\n}(Component);\nexport default ChatScreen;","map":{"version":3,"names":["React","Component","Text","View","TextInput","Button","FlatList","AsyncStorage","item","jsx","_jsx","jsxs","_jsxs","ChatScreen","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","chats","chatDetails","messages","error","submitted","newChatUserId","newMessage","_createClass","key","value","componentDidMount","viewChats","_viewChats","_asyncToGenerator","response","fetch","method","headers","getItem","status","json","console","log","setState","removeItem","navigation","navigate","apply","arguments","_viewChatDetails","chatId","viewChatDetails","_x","render","_this2","children","chat_id","title","onPress","data","renderItem","keyExtractor","toString"],"sources":["C:/Users/44773/Desktop/Assingment/components/Chat.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Text, View, TextInput, Button, FlatList, AsyncStorage, item } from 'react-native';\r\n\r\nclass ChatScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      chats: [],\r\n      chatDetails: null,\r\n      messages: [],\r\n      error: null,\r\n      submitted: false,\r\n      newChatUserId: '',\r\n      newMessage: '',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.viewChats();\r\n  }\r\n\r\n  async viewChats() {\r\n    try {\r\n      const response = await fetch('http://localhost:3333/api/1.0.0/chat', {\r\n        method: 'GET',\r\n        headers: {\r\n          'X-Authorization': await AsyncStorage.getItem('whatsthat_session_token'),\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n  \r\n      if (response.status === 200) {\r\n        const chats = await response.json();\r\n        console.log('Chats fetched from server: ', chats); // <-- added this line\r\n        this.setState({ chats: chats });\r\n      } else if (response.status === 401) {\r\n        console.log('Unauthorised');\r\n        await AsyncStorage.removeItem('whatsthat_session_token');\r\n        await AsyncStorage.removeItem('whatsthat_user_id');\r\n        this.props.navigation.navigate('Login');\r\n      } else {\r\n        throw 'Server Error';\r\n      }\r\n    } catch (error) {\r\n      this.setState({ error: error });\r\n    }\r\n  }\r\n  \r\n\r\n  // viewChatDetails = (chatId) => {\r\n  //   console.log(\"View details for chat with ID: \", chatId);\r\n  //   // Implement your logic for handling chat detail view\r\n  // }\r\n\r\n  async viewChatDetails(chatId) {\r\n    console.log(\"View details for chat with ID: \", chatId);\r\n\r\n    try {\r\n      const response = await fetch(`http://localhost:3333/api/1.0.0/chat/`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'X-Authorization': await AsyncStorage.getItem('whatsthat_session_token'),\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        const chatDetails = await response.json();\r\n        console.log(chatDetails);\r\n      } else if (response.status === 401) {\r\n        console.log('Unauthorised');\r\n        await AsyncStorage.removeItem('whatsthat_session_token');\r\n        await AsyncStorage.removeItem('whatsthat_user_id');\r\n        this.props.navigation.navigate('Login');\r\n      } else {\r\n        throw 'Server Error';\r\n      }\r\n    } catch (error) {\r\n      console.error('Error in viewChatDetails:', error);\r\n    }\r\n  }\r\n\r\n\r\n  // renderItem = ({ item }) => {\r\n  //   return (\r\n  //     <View>\r\n  //       <Text>Chat ID: {item.chat_id}</Text>\r\n  //       {/* You can render other chat details here */}\r\n  //       <Button\r\n  //         title=\"View Chat Details\"\r\n  //         onPress={() => this.viewChatDetails(item.chat_id)}\r\n  //       />\r\n  //     </View>\r\n  //   );\r\n  // };\r\n\r\n\r\n  render() {\r\n    const { chats } = this.state;\r\n  \r\n    return (\r\n      <View>\r\n        <Text>HELLO THIS IS MY CHAT</Text>\r\n\r\n        <Text>Chat ID: {item.chat_id}</Text>\r\n        {/* You can render other chat details here */}\r\n        <Button\r\n          title=\"View Chat Details\"\r\n          onPress={() => this.viewChatDetails(item.chat_id)}\r\n        />\r\n\r\n\r\n\r\n        <FlatList\r\n          data={chats}\r\n          renderItem={this.renderItem}\r\n          keyExtractor={(item) => item.chat_id.toString()}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default ChatScreen;\r\n"],"mappings":";;;;;;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,QAAA;AAAA,SACSC,YAAY;AAAA,SAAEC,IAAI;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,IAE9DC,UAAU,aAAAC,UAAA;EAAAC,SAAA,CAAAF,UAAA,EAAAC,UAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,UAAA;EACd,SAAAA,WAAYK,KAAK,EAAE;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAP,UAAA;IACjBM,KAAA,GAAAH,MAAA,CAAAK,IAAA,OAAMH,KAAK;IACXC,KAAA,CAAKG,KAAK,GAAG;MACXC,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE,IAAI;MACjBC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,IAAI;MACXC,SAAS,EAAE,KAAK;MAChBC,aAAa,EAAE,EAAE;MACjBC,UAAU,EAAE;IACd,CAAC;IAAC,OAAAV,KAAA;EACJ;EAACW,YAAA,CAAAjB,UAAA;IAAAkB,GAAA;IAAAC,KAAA,EAED,SAAAC,kBAAA,EAAoB;MAClB,IAAI,CAACC,SAAS,EAAE;IAClB;EAAC;IAAAH,GAAA;IAAAC,KAAA;MAAA,IAAAG,UAAA,GAAAC,iBAAA,CAED,aAAkB;QAChB,IAAI;UACF,IAAMC,QAAQ,SAASC,KAAK,CAAC,sCAAsC,EAAE;YACnEC,MAAM,EAAE,KAAK;YACbC,OAAO,EAAE;cACP,iBAAiB,QAAQjC,YAAY,CAACkC,OAAO,CAAC,yBAAyB,CAAC;cACxE,cAAc,EAAE;YAClB;UACF,CAAC,CAAC;UAEF,IAAIJ,QAAQ,CAACK,MAAM,KAAK,GAAG,EAAE;YAC3B,IAAMnB,KAAK,SAASc,QAAQ,CAACM,IAAI,EAAE;YACnCC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEtB,KAAK,CAAC;YACjD,IAAI,CAACuB,QAAQ,CAAC;cAAEvB,KAAK,EAAEA;YAAM,CAAC,CAAC;UACjC,CAAC,MAAM,IAAIc,QAAQ,CAACK,MAAM,KAAK,GAAG,EAAE;YAClCE,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;YAC3B,MAAMtC,YAAY,CAACwC,UAAU,CAAC,yBAAyB,CAAC;YACxD,MAAMxC,YAAY,CAACwC,UAAU,CAAC,mBAAmB,CAAC;YAClD,IAAI,CAAC7B,KAAK,CAAC8B,UAAU,CAACC,QAAQ,CAAC,OAAO,CAAC;UACzC,CAAC,MAAM;YACL,MAAM,cAAc;UACtB;QACF,CAAC,CAAC,OAAOvB,KAAK,EAAE;UACd,IAAI,CAACoB,QAAQ,CAAC;YAAEpB,KAAK,EAAEA;UAAM,CAAC,CAAC;QACjC;MACF,CAAC;MAAA,SAAAQ,UAAA;QAAA,OAAAC,UAAA,CAAAe,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAjB,SAAA;IAAA;EAAA;IAAAH,GAAA;IAAAC,KAAA;MAAA,IAAAoB,gBAAA,GAAAhB,iBAAA,CAQD,WAAsBiB,MAAM,EAAE;QAC5BT,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEQ,MAAM,CAAC;QAEtD,IAAI;UACF,IAAMhB,QAAQ,SAASC,KAAK,0CAA0C;YACpEC,MAAM,EAAE,KAAK;YACbC,OAAO,EAAE;cACP,iBAAiB,QAAQjC,YAAY,CAACkC,OAAO,CAAC,yBAAyB,CAAC;cACxE,cAAc,EAAE;YAClB;UACF,CAAC,CAAC;UAEF,IAAIJ,QAAQ,CAACK,MAAM,KAAK,GAAG,EAAE;YAC3B,IAAMlB,WAAW,SAASa,QAAQ,CAACM,IAAI,EAAE;YACzCC,OAAO,CAACC,GAAG,CAACrB,WAAW,CAAC;UAC1B,CAAC,MAAM,IAAIa,QAAQ,CAACK,MAAM,KAAK,GAAG,EAAE;YAClCE,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;YAC3B,MAAMtC,YAAY,CAACwC,UAAU,CAAC,yBAAyB,CAAC;YACxD,MAAMxC,YAAY,CAACwC,UAAU,CAAC,mBAAmB,CAAC;YAClD,IAAI,CAAC7B,KAAK,CAAC8B,UAAU,CAACC,QAAQ,CAAC,OAAO,CAAC;UACzC,CAAC,MAAM;YACL,MAAM,cAAc;UACtB;QACF,CAAC,CAAC,OAAOvB,KAAK,EAAE;UACdkB,OAAO,CAAClB,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACnD;MACF,CAAC;MAAA,SAAA4B,gBAAAC,EAAA;QAAA,OAAAH,gBAAA,CAAAF,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAG,eAAA;IAAA;EAAA;IAAAvB,GAAA;IAAAC,KAAA,EAiBD,SAAAwB,OAAA,EAAS;MAAA,IAAAC,MAAA;MACP,IAAQlC,KAAK,GAAK,IAAI,CAACD,KAAK,CAApBC,KAAK;MAEb,OACEX,KAAA,CAACT,IAAI;QAAAuD,QAAA,GACHhD,IAAA,CAACR,IAAI;UAAAwD,QAAA,EAAC;QAAqB,EAAO,EAElC9C,KAAA,CAACV,IAAI;UAAAwD,QAAA,GAAC,WAAS,EAAClD,IAAI,CAACmD,OAAO;QAAA,EAAQ,EAEpCjD,IAAA,CAACL,MAAM;UACLuD,KAAK,EAAC,mBAAmB;UACzBC,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAMJ,MAAI,CAACH,eAAe,CAAC9C,IAAI,CAACmD,OAAO,CAAC;UAAA;QAAC,EAClD,EAIFjD,IAAA,CAACJ,QAAQ;UACPwD,IAAI,EAAEvC,KAAM;UACZwC,UAAU,EAAE,IAAI,CAACA,UAAW;UAC5BC,YAAY,EAAE,SAAAA,aAACxD,IAAI;YAAA,OAAKA,IAAI,CAACmD,OAAO,CAACM,QAAQ,EAAE;UAAA;QAAC,EAChD;MAAA,EACG;IAEX;EAAC;EAAA,OAAApD,UAAA;AAAA,EArHsBZ,SAAS;AAyHlC,eAAeY,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}