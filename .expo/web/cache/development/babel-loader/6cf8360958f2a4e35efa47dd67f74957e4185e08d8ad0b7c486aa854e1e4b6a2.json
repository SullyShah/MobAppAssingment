{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ContactScreen = function (_Component) {\n  _inherits(ContactScreen, _Component);\n  var _super = _createSuper(ContactScreen);\n  function ContactScreen(props) {\n    var _this;\n    _classCallCheck(this, ContactScreen);\n    _this = _super.call(this, props);\n    _this.state = {\n      contacts: []\n    };\n    return _this;\n  }\n  _createClass(ContactScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchContacts();\n    }\n  }, {\n    key: \"fetchContacts\",\n    value: function () {\n      var _fetchContacts = _asyncToGenerator(function* () {\n        try {\n          var response = yield this.GetContacts();\n          this.setState({\n            contacts: response\n          });\n        } catch (error) {\n          console.error(error);\n        }\n      });\n      function fetchContacts() {\n        return _fetchContacts.apply(this, arguments);\n      }\n      return fetchContacts;\n    }()\n  }, {\n    key: \"GetContacts\",\n    value: function () {\n      var _GetContacts = _asyncToGenerator(function* () {\n        return fetch('http://localhost:3333/api/1.0.0//contacts', {\n          method: 'GET',\n          headers: {\n            'X-Authorization': yield AsyncStorage.getItem('whatsthat_session_token')\n          }\n        }).then(function (response) {\n          if (response.status === 200) {\n            return response.json();\n          } else if (response.status === 401) {\n            throw 'Unauthorised';\n          } else {\n            throw 'Server Error';\n          }\n        });\n      });\n      function GetContacts() {\n        return _GetContacts.apply(this, arguments);\n      }\n      return GetContacts;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      return _jsxs(View, {\n        children: [_jsx(Text, {\n          children: \"Contact Screen\"\n        }), _jsx(Button, {\n          title: \"Add Contact\",\n          onPress: function onPress() {\n            return _this2.props.navigation.navigate('AddContact');\n          }\n        }), _jsx(Button, {\n          title: \"Delete Contact\",\n          onPress: function onPress() {\n            return _this2.props.navigation.navigate('DeleteContact');\n          }\n        }), _jsx(FlatList, {\n          data: this.state.contacts,\n          keyExtractor: function keyExtractor(item) {\n            return item.user_id.toString();\n          },\n          renderItem: function renderItem(_ref) {\n            var item = _ref.item;\n            return _jsxs(View, {\n              children: [_jsxs(Text, {\n                children: [item.first_name, \" \", item.last_name]\n              }), _jsx(Text, {\n                children: item.email\n              }), _jsx(Text, {\n                children: item.user_id\n              })]\n            });\n          }\n        })]\n      });\n    }\n  }]);\n  return ContactScreen;\n}(Component);\nContactScreen.navigationOptions = {\n  header: null\n};\nexport default ContactScreen;","map":{"version":3,"names":["AsyncStorage","React","Component","Text","View","Button","FlatList","jsx","_jsx","jsxs","_jsxs","ContactScreen","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","contacts","_createClass","key","value","componentDidMount","fetchContacts","_fetchContacts","_asyncToGenerator","response","GetContacts","setState","error","console","apply","arguments","_GetContacts","fetch","method","headers","getItem","then","status","json","render","_this2","children","title","onPress","navigation","navigate","data","keyExtractor","item","user_id","toString","renderItem","_ref","first_name","last_name","email","navigationOptions","header"],"sources":["C:/Users/44773/Desktop/Assingment/components/Contacts.js"],"sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport React, { Component } from 'react';\r\nimport { Text, View, Button, FlatList } from 'react-native';\r\n\r\nclass ContactScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      contacts: [],\r\n    };\r\n  }\r\n\r\n  static navigationOptions = {\r\n    header: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchContacts();\r\n  }\r\n\r\n  async fetchContacts() {\r\n    try {\r\n      const response = await this.GetContacts();\r\n      this.setState({ contacts: response });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  async GetContacts() {\r\n    return fetch('http://localhost:3333/api/1.0.0//contacts', {\r\n      method: 'GET',\r\n      headers: {\r\n        'X-Authorization': await AsyncStorage.getItem('whatsthat_session_token'),\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          return response.json();\r\n        } else if (response.status === 401) {\r\n          throw 'Unauthorised';\r\n        } else {\r\n          throw 'Server Error';\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View>\r\n        <Text>Contact Screen</Text>\r\n\r\n        <Button title=\"Add Contact\" onPress={() => this.props.navigation.navigate('AddContact')} />\r\n\r\n        <Button title=\"Delete Contact\" onPress={() => this.props.navigation.navigate('DeleteContact')} />\r\n\r\n        <FlatList\r\n          data={this.state.contacts}\r\n          keyExtractor={(item) => item.user_id.toString()}\r\n          renderItem={({ item }) => (\r\n          <View>\r\n          <Text>{item.first_name} {item.last_name}</Text>\r\n          <Text>{item.email}</Text>\r\n          <Text>{item.user_id}</Text>\r\n          </View>\r\n\r\n          )}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}