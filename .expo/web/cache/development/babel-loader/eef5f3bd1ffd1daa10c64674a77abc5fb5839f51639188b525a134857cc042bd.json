{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function (_Component) {\n  _inherits(LoginScreen, _Component);\n  var _super = _createSuper(LoginScreen);\n  function LoginScreen(props) {\n    var _this;\n    _classCallCheck(this, LoginScreen);\n    _this = _super.call(this, props);\n    _this.state = {\n      user_id: '',\n      first_name: '',\n      last_name: '',\n      email: '',\n      password: '',\n      isLoading: true\n    };\n    return _this;\n  }\n  _createClass(LoginScreen, [{\n    key: \"Login\",\n    value: function Login() {\n      var _this2 = this;\n      if (!this.state.email || !this.state.password) {\n        this.setState({\n          error: \"Please enter both email and password.\"\n        });\n        return;\n      }\n      if (!isValidEmail(this.state.email)) {\n        this.setState({\n          error: \"Please enter a valid email address.\"\n        });\n        return;\n      }\n      if (!isValidPassword(this.state.password)) {\n        this.setState({\n          error: \"Password must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, and one number.\"\n        });\n        return;\n      }\n      return fetch(\"http://localhost:3333/api/1.0.0/login\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"email\": this.state.email,\n          \"password\": this.state.password\n        })\n      }).then(function (response) {\n        if (response.status === 201) {\n          return response.json();\n        } else if (response.status === 400) {\n          throw \"Invalid Email Or Password Entered\";\n        } else {\n          throw \"Server Error\";\n        }\n      }).then(function (rJson) {\n        console.log(rJson);\n        _this2.setState({\n          \"error\": \"User Added Successfully\"\n        });\n        _this2.setState({\n          \"Submitted\": false\n        });\n        _this2.props.navigation.navigate(\"Login\");\n      }).catch(function (error) {\n        _this2.setState({\n          \"error\": error\n        });\n        _this2.setState({\n          \"Submitted\": false\n        });\n      }).then(function () {\n        var _ref = _asyncToGenerator(function* (rJson) {\n          console.log(rJson);\n          try {\n            yield AsyncStorage.setItem(\"whatsthat_user_id\", rJson.id);\n            yield AsyncStorage.setItem(\"whatsthat_session_token\", rJson.token);\n            _this2.setState({\n              \"Submitted\": false\n            });\n            _this2.props.navigate(\"MainScreen\");\n          } catch (_unused) {\n            throw \"Server Error\";\n          }\n        });\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    }\n  }, {\n    key: \"isValidEmail\",\n    value: function isValidEmail(email) {\n      var re = /\\S+@\\S+\\.\\S+/;\n      return re.test(email);\n    }\n  }, {\n    key: \"isValidPassword\",\n    value: function isValidPassword(password) {\n      var re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9]{8,}$/;\n      return re.test(password);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      var navigation = this.props.navigation;\n      return _jsxs(View, {\n        style: {\n          flex: 1\n        },\n        children: [_jsx(Text, {\n          style: {\n            fontSize: 20,\n            padding: 10\n          },\n          children: \"Please sign in to continue.\"\n        }), _jsx(TextInput, {\n          type: \"text\",\n          placeholder: \"Enter Email:\",\n          name: \"Email\",\n          required: true,\n          style: {\n            padding: 10,\n            borderWidth: 2,\n            borderRadius: 5,\n            margin: 10\n          }\n        }), _jsx(TextInput, {\n          secureTextEntry: true,\n          placeholder: \"Enter Password\",\n          name: \"Password\",\n          required: true,\n          style: {\n            padding: 10,\n            borderWidth: 2,\n            borderRadius: 5,\n            margin: 10\n          },\n          LockIcon: _jsx(Icon, {\n            name: \"lock\",\n            size: 30,\n            color: \"black\"\n          })\n        }), _jsx(Button, {\n          title: \"Log In\",\n          onPress: function onPress() {\n            return _this3.Login();\n          }\n        }), _jsx(Button, {\n          title: \"Sign Up\",\n          onPress: function onPress() {\n            return _this3.props.navigation.navigate('Signup');\n          }\n        })]\n      });\n    }\n  }]);\n  return LoginScreen;\n}(Component);\nLoginScreen.navigationOptions = {\n  header: null\n};\nexport default LoginScreen;","map":{"version":3,"names":["React","Component","Text","View","Button","TextInput","Icon","jsx","_jsx","jsxs","_jsxs","LoginScreen","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","user_id","first_name","last_name","email","password","isLoading","_createClass","key","value","Login","_this2","setState","error","isValidEmail","isValidPassword","fetch","method","headers","body","JSON","stringify","then","response","status","json","rJson","console","log","navigation","navigate","catch","_ref","_asyncToGenerator","AsyncStorage","setItem","id","token","_unused","_x","apply","arguments","re","test","render","_this3","style","flex","children","fontSize","padding","type","placeholder","name","required","borderWidth","borderRadius","margin","secureTextEntry","LockIcon","size","color","title","onPress","navigationOptions","header"],"sources":["C:/Users/44773/Desktop/Assingment/components/Login.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Text, View, Button, TextInput } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\n\r\n\r\n\r\n\r\nclass LoginScreen extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user_id: '',\r\n      first_name: '',\r\n      last_name: '',\r\n      email: '',\r\n      password: '',\r\n      isLoading: true,\r\n    };\r\n\r\n  }\r\n  \r\n    static navigationOptions = {\r\n      header: null\r\n      }\r\n\r\n      Login() {\r\n\r\n        if (!this.state.email || !this.state.password) {\r\n          this.setState({ error: \"Please enter both email and password.\" });\r\n          return;\r\n        }\r\n        if (!isValidEmail(this.state.email)) {\r\n          this.setState({ error: \"Please enter a valid email address.\" });\r\n          return;\r\n        }\r\n        if (!isValidPassword(this.state.password)) {\r\n          this.setState({ error: \"Password must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, and one number.\" });\r\n          return;\r\n        }\r\n      \r\n     \r\n        return fetch(\"http://localhost:3333/api/1.0.0/login\", {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({\r\n            \"email\": this.state.email,\r\n            \"password\": this.state.password\r\n          })\r\n        })\r\n          .then((response) => {\r\n            if (response.status === 201) {\r\n              return response.json();\r\n            } else if (response.status === 400) {\r\n              throw \"Invalid Email Or Password Entered\"\r\n            } else {\r\n              throw \"Server Error\"\r\n            }\r\n          })\r\n      \r\n          .then((rJson) => {\r\n            console.log(rJson)\r\n            this.setState({ \"error\": \"User Added Successfully\" })\r\n            this.setState({ \"Submitted\": false });\r\n            this.props.navigation.navigate(\"Login\")\r\n          })\r\n      \r\n          .catch((error) => {\r\n            this.setState({ \"error\": error })\r\n            this.setState({ \"Submitted\": false });\r\n          })\r\n          .then(async (rJson) => {\r\n            console.log(rJson)\r\n            try {\r\n              await AsyncStorage.setItem(\"whatsthat_user_id\", rJson.id)\r\n              await AsyncStorage.setItem(\"whatsthat_session_token\", rJson.token)\r\n      \r\n              this.setState({ \"Submitted\": false });\r\n      \r\n              this.props.navigate(\"MainScreen\")\r\n            } catch {\r\n              throw \"Server Error\"\r\n            }\r\n          })\r\n      }\r\n      \r\n      // Helper function to check if email is valid\r\n       isValidEmail(email) {\r\n        const re = /\\S+@\\S+\\.\\S+/;\r\n        return re.test(email);\r\n      }\r\n      \r\n      // Helper function to check if password is valid\r\n       isValidPassword(password) {\r\n        const re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9]{8,}$/;\r\n        return re.test(password);\r\n      }\r\n      \r\n\r\n\r\n\r\n  render(){\r\n\r\n    const navigation = this.props.navigation;\r\n    return(\r\n      \r\n        <View style={{ flex: 1}}>\r\n          <Text \r\n          style={{fontSize: 20, padding:10}}>\r\n            Please sign in to continue.\r\n          </Text>\r\n\r\n\r\n      <TextInput \r\n\r\n    type=\"text\" placeholder=\"Enter Email:\" name=\"Email\" required \r\n    style={{padding:10, borderWidth:2, borderRadius: 5, margin:10}}\r\n\r\n  // UnlockIcon={<Icon name='unlock' size={30} color='black' />}\r\n/>\r\n\r\n\r\n  <TextInput\r\n  secureTextEntry={true} placeholder=\"Enter Password\" name=\"Password\" required \r\n  style={{padding:10, borderWidth:2, borderRadius: 5, margin:10}}\r\n\r\n\r\n    LockIcon={<Icon name='lock' size={30} color='black' />}\r\n\r\n  />\r\n\r\n{/* MAKE THE BUTTONS SMALLER AND ADD COLOUR */}\r\n      \r\n    <Button\r\n      title=\"Log In\"\r\n      onPress={() => this.Login()} \r\n      \r\n    />\r\n\r\n    <Button\r\n      title=\"Sign Up\"\r\n      onPress={() => this.props.navigation.navigate('Signup')}\r\n    />\r\n\r\n</View>\r\n\r\n\r\n    );\r\n  }\r\n\r\n  \r\n\r\n}\r\n\r\nexport default LoginScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}