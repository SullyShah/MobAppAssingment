{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar BlockedScreen = function (_Component) {\n  _inherits(BlockedScreen, _Component);\n  var _super = _createSuper(BlockedScreen);\n  function BlockedScreen() {\n    var _this;\n    _classCallCheck(this, BlockedScreen);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      user_id: ''\n    };\n    return _this;\n  }\n  _createClass(BlockedScreen, [{\n    key: \"getBlockedList\",\n    value: function () {\n      var _getBlockedList = _asyncToGenerator(function* () {\n        try {\n          var response = yield fetch(\"http://localhost:3333/api/1.0.0/blocked\", {\n            method: \"GET\",\n            headers: {\n              'Content-Type': 'application/json',\n              \"X-Authorization\": yield AsyncStorage.getItem(\"whatsthat_session_token\")\n            }\n          });\n          if (response.status === 200) {\n            var data = yield response.json();\n            Alert.alert(\"Blocked List\", JSON.stringify(data));\n          } else if (response.status === 401) {\n            throw \"Unauthorised\";\n          } else {\n            throw \"Server Error\";\n          }\n        } catch (error) {\n          Alert.alert(\"Error\", error.toString());\n        }\n      });\n      function getBlockedList() {\n        return _getBlockedList.apply(this, arguments);\n      }\n      return getBlockedList;\n    }()\n  }, {\n    key: \"blockUser\",\n    value: function () {\n      var _blockUser = _asyncToGenerator(function* () {\n        try {\n          var response = yield fetch(\"http://localhost:3333/api/1.0.0/user/\" + user_id + \"/block\", {\n            method: \"POST\",\n            headers: {\n              'Content-Type': 'application/json',\n              \"X-Authorization\": yield AsyncStorage.getItem(\"whatsthat_session_token\")\n            },\n            body: JSON.stringify({\n              \"user_id\": this.state.user_id\n            })\n          });\n          if (response.status === 200) {\n            Alert.alert(\"Success\", \"User blocked successfully\");\n            this.props.navigation.navigate('Contacts');\n          } else if (response.status === 400) {\n            throw \"You can't block yourself\";\n          } else if (response.status === 401) {\n            throw \"Unauthorised\";\n          } else if (response.status === 404) {\n            throw \"Not Found\";\n          } else {\n            throw \"Server Error\";\n          }\n        } catch (error) {\n          Alert.alert(\"Error\", error.toString());\n        }\n      });\n      function blockUser() {\n        return _blockUser.apply(this, arguments);\n      }\n      return blockUser;\n    }()\n  }, {\n    key: \"unblockUser\",\n    value: function () {\n      var _unblockUser = _asyncToGenerator(function* () {\n        try {\n          var response = yield fetch(\"http://localhost:3333/api/1.0.0/user/\" + user_id + \"/block\", {\n            method: \"DELETE\",\n            headers: {\n              'Content-Type': 'application/json',\n              \"X-Authorization\": yield AsyncStorage.getItem(\"whatsthat_session_token\")\n            },\n            body: JSON.stringify({\n              \"user_id\": this.state.user_id\n            })\n          });\n          if (response.status === 200) {\n            Alert.alert(\"Success\", \"User unblocked successfully\");\n            this.props.navigation.navigate('Contacts');\n          } else if (response.status === 400) {\n            throw \"You can't unblock yourself\";\n          } else if (response.status === 401) {\n            throw \"Unauthorised\";\n          } else if (response.status === 404) {\n            throw \"Not Found\";\n          } else {\n            throw \"Server Error\";\n          }\n        } catch (error) {\n          Alert.alert(\"Error\", error.toString());\n        }\n      });\n      function unblockUser() {\n        return _unblockUser.apply(this, arguments);\n      }\n      return unblockUser;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      return _jsxs(View, {\n        children: [_jsx(TextInput, {\n          value: this.state.user_id,\n          onChangeText: function onChangeText(user_id) {\n            return _this2.setState({\n              user_id: user_id\n            });\n          },\n          placeholder: 'Enter User ID',\n          style: {\n            padding: 10,\n            borderWidth: 2,\n            borderRadius: 5,\n            margin: 10\n          }\n        }), _jsx(Button, {\n          title: \"Block User\",\n          onPress: function onPress() {\n            return _this2.blockUser();\n          }\n        }), _jsx(Button, {\n          title: \"Unblock User\",\n          onPress: function onPress() {\n            return _this2.unblockUser();\n          }\n        }), _jsx(Button, {\n          title: \"Get Blocked List\",\n          onPress: function onPress() {\n            return _this2.getBlockedList();\n          }\n        })]\n      });\n    }\n  }]);\n  return BlockedScreen;\n}(Component);\nexport default BlockedScreen;","map":{"version":3,"names":["React","Component","Text","View","Button","TextInput","Alert","AsyncStorage","jsx","_jsx","jsxs","_jsxs","BlockedScreen","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","user_id","_createClass","key","value","_getBlockedList","_asyncToGenerator","response","fetch","method","headers","getItem","status","data","json","alert","JSON","stringify","error","toString","getBlockedList","_blockUser","body","props","navigation","navigate","blockUser","_unblockUser","unblockUser","render","_this2","children","onChangeText","setState","placeholder","style","padding","borderWidth","borderRadius","margin","title","onPress"],"sources":["C:/Users/44773/Desktop/Assingment/components/Block.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Text, View, Button, TextInput, Alert } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nclass BlockedScreen extends Component {\r\n  state = {\r\n    user_id: ''\r\n  };\r\n\r\n  async getBlockedList() {\r\n    try {\r\n      const response = await fetch(\"http://localhost:3333/api/1.0.0/blocked\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          \"X-Authorization\": await AsyncStorage.getItem(\"whatsthat_session_token\")\r\n        }\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        const data = await response.json();\r\n        Alert.alert(\"Blocked List\", JSON.stringify(data));\r\n      } else if (response.status === 401) {\r\n        throw \"Unauthorised\";\r\n      } else {\r\n        throw \"Server Error\";\r\n      }\r\n    } catch (error) {\r\n      Alert.alert(\"Error\", error.toString());\r\n    }\r\n  }\r\n\r\n  async blockUser() {\r\n    try {\r\n      const response = await fetch(`http://localhost:3333/api/1.0.0/user/${user_id}/block`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          \"X-Authorization\": await AsyncStorage.getItem(\"whatsthat_session_token\"),\r\n        },\r\n        body: JSON.stringify({\r\n          \"user_id\": this.state.user_id\r\n        })\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        Alert.alert(\"Success\", \"User blocked successfully\");\r\n        this.props.navigation.navigate('Contacts');\r\n      } else if (response.status === 400) {\r\n        throw \"You can't block yourself\";\r\n      } else if (response.status === 401) {\r\n        throw \"Unauthorised\";\r\n      } else if (response.status === 404) {\r\n        throw \"Not Found\";\r\n      } else {\r\n        throw \"Server Error\";\r\n      }\r\n    } catch (error) {\r\n      Alert.alert(\"Error\", error.toString());\r\n    }\r\n  }\r\n\r\n  async unblockUser() {\r\n    try {\r\n      const response = await fetch(`http://localhost:3333/api/1.0.0/user/${user_id}/block`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          \"X-Authorization\": await AsyncStorage.getItem(\"whatsthat_session_token\"),\r\n        },\r\n        body: JSON.stringify({\r\n          \"user_id\": this.state.user_id\r\n        })\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        Alert.alert(\"Success\", \"User unblocked successfully\");\r\n        this.props.navigation.navigate('Contacts');\r\n      } else if (response.status === 400) {\r\n        throw \"You can't unblock yourself\";\r\n      } else if (response.status === 401) {\r\n        throw \"Unauthorised\";\r\n      } else if (response.status === 404) {\r\n        throw \"Not Found\";\r\n      } else {\r\n        throw \"Server Error\";\r\n      }\r\n    } catch (error) {\r\n      Alert.alert(\"Error\", error.toString());\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View>\r\n     \r\n        <TextInput\r\n          value={this.state.user_id}\r\n          onChangeText={user_id => this.setState({ user_id })}\r\n          placeholder={'Enter User ID'}\r\n          style={{\r\n            padding: 10,\r\n            borderWidth: 2,\r\n            borderRadius: 5,\r\n            margin: 10,\r\n          }}\r\n        />\r\n\r\n          <Button\r\n            title=\"Block User\"\r\n            onPress={() => this.blockUser()}\r\n          />\r\n    \r\n          <Button\r\n            title=\"Unblock User\"\r\n            onPress={() => this.unblockUser()}\r\n\r\n          />\r\n\r\n\r\n\r\n\r\n<Button\r\n          title=\"Get Blocked List\"\r\n          onPress={() => this.getBlockedList()}\r\n        />\r\n\r\n        </View>\r\n      );\r\n    }\r\n}\r\n    \r\n\r\nexport default BlockedScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}