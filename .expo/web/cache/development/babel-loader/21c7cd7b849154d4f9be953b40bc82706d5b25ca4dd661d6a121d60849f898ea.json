{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ChatScreen = function (_Component) {\n  _inherits(ChatScreen, _Component);\n  var _super = _createSuper(ChatScreen);\n  function ChatScreen(props) {\n    var _this;\n    _classCallCheck(this, ChatScreen);\n    _this = _super.call(this, props);\n    _this.state = {\n      chats: [],\n      chatDetails: null,\n      messages: [],\n      error: null,\n      submitted: false,\n      newChatUserId: '',\n      newMessage: ''\n    };\n    return _this;\n  }\n  _createClass(ChatScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.viewChats();\n    }\n  }, {\n    key: \"startConversation\",\n    value: function () {\n      var _startConversation = _asyncToGenerator(function* (userIds) {\n        try {\n          var response = yield fetch('http://localhost:3333/api/1.0.0/chats', {\n            method: 'POST',\n            headers: {\n              'X-Authorisation': yield AsyncStorage.getItem('whatsthat_session_token'),\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              users: userIds\n            })\n          });\n          if (response.status === 201) {\n            var chatDetails = yield response.json();\n            this.setState({\n              chatDetails: chatDetails\n            });\n            this.props.navigation.navigate('ChatDetails');\n          } else if (response.status === 400) {\n            throw 'Bad Request';\n          } else if (response.status === 401) {\n            throw 'Unathorised';\n          } else {\n            throw 'Server Error';\n          }\n        } catch (error) {\n          this.setState({\n            error: error\n          });\n        }\n      });\n      function startConversation(_x) {\n        return _startConversation.apply(this, arguments);\n      }\n      return startConversation;\n    }()\n  }, {\n    key: \"viewChatDetails\",\n    value: function () {\n      var _viewChatDetails = _asyncToGenerator(function* (chatId) {\n        try {\n          var response = yield fetch('http://localhost:3333/api/1.0.0/chats/${chatId}', {\n            method: 'GET',\n            headers: {\n              'X-Authorisation': yield AsyncStorage.getItem('whatsthat_session_token'),\n              'Content-Type': 'application/json'\n            }\n          });\n          if (response.status === 200) {\n            var chatDetails = yield response.json();\n            this.setState({\n              chatDetails: chatDetails\n            });\n          } else if (response.status === 401) {\n            console.log('Unathorised');\n            yield AsyncStorage.removeItem('whatsthat_session_token');\n            yield AsyncStorage.removeItem('whatsthat_user_id');\n            this.props.navigation.navigate('Login');\n          } else if (response.status === 403) {\n            console.log('Forbidden');\n          } else if (response.status === 404) {\n            console.log('Not Found');\n          } else {\n            throw 'Something Went Wrong';\n          }\n        } catch (error) {\n          this.setState({\n            error: error\n          });\n        }\n      });\n      function viewChatDetails(_x2) {\n        return _viewChatDetails.apply(this, arguments);\n      }\n      return viewChatDetails;\n    }()\n  }, {\n    key: \"UpdateChatInformation\",\n    value: function () {\n      var _UpdateChatInformation = _asyncToGenerator(function* (chatId, chatData) {\n        try {\n          var response = yield fetch('http://localhost:3333/api/1.0.0/chats/${chatId}', {\n            method: 'PATCH',\n            headers: {\n              'Content-Type': 'application/json',\n              'X-Authorisation': yield AsyncStorage.getItem('whatsthat_session_token')\n            },\n            body: JSON.stringify(chatData)\n          });\n          if (response.status === 200) {\n            var chatDetails = yield response.json();\n            this.setState({\n              chatDetails: chatDetails\n            });\n          } else if (response.status === 400) {\n            console.log('Bad Request');\n          } else if (response.status === 401) {\n            console.log('Unathorised');\n            yield AsyncStorage.removeItem('whatsthat_session_token');\n            yield AsyncStorage.removeItem('whatsthat_user_id');\n            this.props.navigation.navigate('Login');\n          } else if (response.status === 403) {\n            console.log('Forbidden');\n          } else if (response.status === 404) {\n            console.log('Not Found');\n          } else {\n            throw 'Something Went Wrong';\n          }\n        } catch (error) {\n          this.setState({\n            error: error\n          });\n        }\n      });\n      function UpdateChatInformation(_x3, _x4) {\n        return _UpdateChatInformation.apply(this, arguments);\n      }\n      return UpdateChatInformation;\n    }()\n  }, {\n    key: \"AddUserToChat\",\n    value: function () {\n      var _AddUserToChat = _asyncToGenerator(function* (chatId, userId) {\n        try {\n          var response = yield fetch('http://localhost:3333/api/1.0.0/chats/${chatId}/users/${userId}', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'X-Authorisation': yield AsyncStorage.getItem('whatsthat_session_token')\n            }\n          });\n          if (response.status === 200) {\n            var chatDetails = yield response.json();\n            this.setState({\n              chatDetails: chatDetails\n            });\n          } else if (response.status === 400) {\n            console.log('Bad Request');\n          } else if (response.status === 401) {\n            console.log('Unathorised');\n            yield AsyncStorage.removeItem('whatsthat_session_token');\n            yield AsyncStorage.removeItem('whatsthat_user_id');\n            this.props.navigation.navigate('Login');\n          } else if (response.status === 403) {\n            console.log('Forbidden');\n          } else if (response.status === 404) {\n            console.log('Not Found');\n          } else {\n            throw 'Server Error';\n          }\n        } catch (error) {\n          this.setState({\n            error: error\n          });\n        }\n      });\n      function AddUserToChat(_x5, _x6) {\n        return _AddUserToChat.apply(this, arguments);\n      }\n      return AddUserToChat;\n    }()\n  }, {\n    key: \"RemoveUserFromChat\",\n    value: function () {\n      var _RemoveUserFromChat = _asyncToGenerator(function* (chatId, userId) {\n        try {\n          var response = yield fetch('http://localhost:3333/api/1.0.0/chats/${chatId}/users/${userId}', {\n            method: 'DELETE',\n            headers: {\n              'Content-Type': 'application/json',\n              'X-Authorisation': yield AsyncStorage.getItem('whatsthat_session_token')\n            }\n          });\n          if (response.status === 200) {\n            var chatDetails = yield response.json();\n            this.setState({\n              chatDetails: chatDetails\n            });\n          } else if (response.status === 401) {\n            console.log('Unathorised');\n            yield AsyncStorage.removeItem('whatsthat_session_token');\n            yield AsyncStorage.removeItem('whatsthat_user_id');\n            this.props.navigation.navigate('Login');\n          } else if (response.status === 403) {\n            console.log('Forbidden');\n          } else if (response.status === 404) {\n            console.log('Not Found');\n          } else {\n            throw 'Server Error';\n          }\n        } catch (error) {\n          this.setState({\n            error: error\n          });\n        }\n      });\n      function RemoveUserFromChat(_x7, _x8) {\n        return _RemoveUserFromChat.apply(this, arguments);\n      }\n      return RemoveUserFromChat;\n    }()\n  }, {\n    key: \"SendMessage\",\n    value: function () {\n      var _SendMessage = _asyncToGenerator(function* (chatId, message) {\n        try {\n          var response = yield fetch('http://localhost:3333/api/1.0.0/chats/${chatId}/messages', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'X-Authorisation': yield AsyncStorage.getItem('whatsthat_session_token')\n            },\n            body: JSON.stringify({\n              message: message\n            })\n          });\n          if (response.status === 200) {\n            var chatDetails = yield response.json();\n            this.setState({\n              chatDetails: chatDetails\n            });\n          } else if (response.status === 400) {\n            console.log('Bad Request');\n          } else if (response.status === 401) {\n            console.log('Unathorised');\n            yield AsyncStorage.removeItem('whatsthat_session_token');\n            yield AsyncStorage.removeItem('whatsthat_user_id');\n            this.props.navigation.navigate('Login');\n          } else if (response.status === 403) {\n            console.log('Forbidden');\n          } else if (response.status === 404) {\n            console.log('Not Found');\n          } else {\n            throw 'Server Error';\n          }\n        } catch (error) {\n          this.setState({\n            error: error\n          });\n        }\n      });\n      function SendMessage(_x9, _x10) {\n        return _SendMessage.apply(this, arguments);\n      }\n      return SendMessage;\n    }()\n  }, {\n    key: \"UpdateMessage\",\n    value: function () {\n      var _UpdateMessage = _asyncToGenerator(function* (chatId, messageId, message) {\n        try {\n          var response = yield fetch('http://localhost:3333/api/1.0.0/chats/${chatId}/messages/${messageId}', {\n            method: 'PATCH',\n            headers: {\n              'Content-Type': 'application/json',\n              'X-Authorisation': yield AsyncStorage.getItem('whatsthat_session_token')\n            },\n            body: JSON.stringify({\n              message: message\n            })\n          });\n          if (response.status === 200) {\n            var chatDetails = yield response.json();\n            this.setState({\n              chatDetails: chatDetails\n            });\n          } else if (response.status === 400) {\n            console.log('Bad Request');\n          } else if (response.status === 401) {\n            console.log('Unathorised');\n            yield AsyncStorage.removeItem('whatsthat_session_token');\n            yield AsyncStorage.removeItem('whatsthat_user_id');\n            this.props.navigation.navigate('Login');\n          } else if (response.status === 403) {\n            console.log('Forbidden');\n          } else if (response.status === 404) {\n            console.log('Not Found');\n          } else {\n            throw 'Server Error';\n          }\n        } catch (error) {\n          this.setState({\n            error: error\n          });\n        }\n      });\n      function UpdateMessage(_x11, _x12, _x13) {\n        return _UpdateMessage.apply(this, arguments);\n      }\n      return UpdateMessage;\n    }()\n  }, {\n    key: \"DeleteMessage\",\n    value: function () {\n      var _DeleteMessage = _asyncToGenerator(function* (chatId, messageId) {\n        try {\n          var response = yield fetch('http://localhost:3333/api/1.0.0/chats/${chatId}/messages/${messageId}', {\n            method: 'DELETE',\n            headers: {\n              'Content-Type': 'application/json',\n              'X-Authorisation': yield AsyncStorage.getItem('whatsthat_session_token')\n            }\n          });\n          if (response.status === 200) {\n            var chatDetails = yield response.json();\n            this.setState({\n              chatDetails: chatDetails\n            });\n          } else if (response.status === 401) {\n            console.log('Unathorised');\n            yield AsyncStorage.removeItem('whatsthat_session_token');\n            yield AsyncStorage.removeItem('whatsthat_user_id');\n            this.props.navigation.navigate('Login');\n          } else if (response.status === 403) {\n            console.log('Forbidden');\n          } else if (response.status === 404) {\n            console.log('Not Found');\n          } else {\n            throw 'Server Error';\n          }\n        } catch (error) {\n          this.setState({\n            error: error\n          });\n        }\n      });\n      function DeleteMessage(_x14, _x15) {\n        return _DeleteMessage.apply(this, arguments);\n      }\n      return DeleteMessage;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var _this$state = this.state,\n        chats = _this$state.chats,\n        newChatUserId = _this$state.newChatUserId,\n        newMessage = _this$state.newMessage;\n      return _jsxs(View, {\n        children: [_jsx(Text, {\n          children: \"Create a new chat:\"\n        }), _jsx(TextInput, {\n          placeholder: \"Enter user ID\",\n          onChangeText: function onChangeText(newChatUserId) {\n            return _this2.setState({\n              newChatUserId: newChatUserId\n            });\n          },\n          value: newChatUserId\n        }), _jsx(Button, {\n          title: \"Create chat\",\n          onPress: function onPress() {\n            return _this2.startConversation([newChatUserId]);\n          }\n        }), _jsx(Text, {\n          children: \"Current chats:\"\n        }), _jsx(FlatList, {\n          data: chats,\n          renderItem: this.renderChat,\n          keyExtractor: function keyExtractor(item) {\n            return item.chat_id.toString();\n          }\n        }), _jsx(Text, {\n          children: \"Send a message:\"\n        }), _jsx(TextInput, {\n          placeholder: \"Enter your message\",\n          onChangeText: function onChangeText(newMessage) {\n            return _this2.setState({\n              newMessage: newMessage\n            });\n          },\n          value: newMessage\n        }), _jsx(Button, {\n          title: \"Send message\",\n          onPress: function onPress() {\n            return _this2.SendMessage(_this2.state.chatDetails.chat_id, newMessage);\n          }\n        })]\n      });\n    }\n  }]);\n  return ChatScreen;\n}(Component);\nexport default ChatScreen;","map":{"version":3,"names":["React","Component","Text","View","TextInput","Button","FlatList","AsyncStorage","jsx","_jsx","jsxs","_jsxs","ChatScreen","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","chats","chatDetails","messages","error","submitted","newChatUserId","newMessage","_createClass","key","value","componentDidMount","viewChats","_startConversation","_asyncToGenerator","userIds","response","fetch","method","headers","getItem","body","JSON","stringify","users","status","json","setState","navigation","navigate","startConversation","_x","apply","arguments","_viewChatDetails","chatId","console","log","removeItem","viewChatDetails","_x2","_UpdateChatInformation","chatData","UpdateChatInformation","_x3","_x4","_AddUserToChat","userId","AddUserToChat","_x5","_x6","_RemoveUserFromChat","RemoveUserFromChat","_x7","_x8","_SendMessage","message","SendMessage","_x9","_x10","_UpdateMessage","messageId","UpdateMessage","_x11","_x12","_x13","_DeleteMessage","DeleteMessage","_x14","_x15","render","_this2","_this$state","children","placeholder","onChangeText","title","onPress","data","renderItem","renderChat","keyExtractor","item","chat_id","toString"],"sources":["C:/Users/44773/Desktop/Assingment/components/Chat.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Text, View, TextInput, Button, FlatList, AsyncStorage } from 'react-native';\r\n\r\nclass ChatScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      chats: [],\r\n      chatDetails: null,\r\n      messages: [],\r\n      error: null,\r\n      submitted: false,\r\n      newChatUserId: '',\r\n      newMessage: '',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.viewChats();\r\n  }\r\n\r\n\r\n  \r\n  async startConversation(userIds) {\r\n    try {\r\n      const response = await fetch('http://localhost:3333/api/1.0.0/chats', {\r\n        method: 'POST',\r\n        headers: {\r\n          'X-Authorisation': await AsyncStorage.getItem('whatsthat_session_token'),\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ users: userIds }),\r\n      });\r\n\r\n      if (response.status === 201) {\r\n        const chatDetails = await response.json();\r\n        this.setState({ chatDetails: chatDetails });\r\n        this.props.navigation.navigate('ChatDetails');\r\n      } else if (response.status === 400) {\r\n        throw 'Bad Request';\r\n    } else if (response.status === 401) {\r\n        throw 'Unathorised';\r\n      } else {\r\n        throw 'Server Error';\r\n      }\r\n    } catch (error) {\r\n      this.setState({ error: error });\r\n    }\r\n  }\r\n\r\n  async viewChatDetails(chatId) {\r\n    try {\r\n      const response = await fetch('http://localhost:3333/api/1.0.0/chats/${chatId}', {\r\n        method: 'GET',\r\n        headers: {\r\n          'X-Authorisation': await AsyncStorage.getItem('whatsthat_session_token'),\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        const chatDetails = await response.json();\r\n        this.setState({ chatDetails: chatDetails });\r\n      } else if (response.status === 401) {\r\n        console.log('Unathorised');\r\n        await AsyncStorage.removeItem('whatsthat_session_token');\r\n        await AsyncStorage.removeItem('whatsthat_user_id');\r\n        this.props.navigation.navigate('Login');\r\n    } else if (response.status === 403) {\r\n        console.log('Forbidden');\r\n    } else if (response.status === 404) {\r\n        console.log('Not Found');\r\n      } else {\r\n        throw 'Something Went Wrong';\r\n      }\r\n    } catch (error) {\r\n      this.setState({ error: error });\r\n    }\r\n  }\r\n\r\n\r\n  async UpdateChatInformation(chatId, chatData) {\r\n    try {\r\n      const response = await fetch('http://localhost:3333/api/1.0.0/chats/${chatId}', {\r\n        method: 'PATCH',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-Authorisation': await AsyncStorage.getItem('whatsthat_session_token'),\r\n        },\r\n        body: JSON.stringify(chatData),\r\n      });\r\n  \r\n      if (response.status === 200) {\r\n        const chatDetails = await response.json();\r\n        this.setState({ chatDetails: chatDetails });\r\n    } else if (response.status === 400) {\r\n        console.log('Bad Request');\r\n      } else if (response.status === 401) {\r\n        console.log('Unathorised');\r\n        await AsyncStorage.removeItem('whatsthat_session_token');\r\n        await AsyncStorage.removeItem('whatsthat_user_id');\r\n        this.props.navigation.navigate('Login');\r\n      } else if (response.status === 403) {\r\n        console.log('Forbidden');\r\n      } else if (response.status === 404) {\r\n        console.log('Not Found');\r\n      } else {\r\n        throw 'Something Went Wrong';\r\n      }\r\n    } catch (error) {\r\n      this.setState({ error: error });\r\n    }\r\n  }\r\n  \r\n  \r\nasync AddUserToChat(chatId, userId) {\r\n  try {\r\n    const response = await fetch('http://localhost:3333/api/1.0.0/chats/${chatId}/users/${userId}', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'X-Authorisation': await AsyncStorage.getItem('whatsthat_session_token'),\r\n      },\r\n    });\r\n    \r\n    if (response.status === 200) {\r\n        const chatDetails = await response.json();\r\n        this.setState({ chatDetails: chatDetails });\r\n    } else if (response.status === 400) {\r\n        console.log('Bad Request');\r\n    } else if (response.status === 401) {\r\n        console.log('Unathorised');\r\n        await AsyncStorage.removeItem('whatsthat_session_token');\r\n        await AsyncStorage.removeItem('whatsthat_user_id');\r\n        this.props.navigation.navigate('Login');\r\n    } else if (response.status === 403) {\r\n        console.log('Forbidden');\r\n    } else if (response.status === 404) {\r\n        console.log('Not Found');\r\n    } else {\r\n        throw 'Server Error';\r\n    }\r\n  } catch (error) {\r\n    this.setState({ error: error });\r\n  }\r\n}\r\n\r\nasync RemoveUserFromChat(chatId, userId) {\r\n  try {\r\n    const response = await fetch('http://localhost:3333/api/1.0.0/chats/${chatId}/users/${userId}', {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'X-Authorisation': await AsyncStorage.getItem('whatsthat_session_token'),\r\n      },\r\n    });\r\n\r\n    if (response.status === 200) {\r\n        const chatDetails = await response.json();\r\n        this.setState({ chatDetails: chatDetails });\r\n    } else if (response.status === 401) {\r\n        console.log('Unathorised');\r\n        await AsyncStorage.removeItem('whatsthat_session_token');\r\n        await AsyncStorage.removeItem('whatsthat_user_id');\r\n        this.props.navigation.navigate('Login');\r\n    } else if (response.status === 403) {\r\n        console.log('Forbidden');\r\n    } else if (response.status === 404) {\r\n        console.log('Not Found');\r\n    } else {\r\n        throw 'Server Error';\r\n    }\r\n  } catch (error) {\r\n    this.setState({ error: error });\r\n  }\r\n}\r\n\r\n\r\n    \r\n\r\nasync SendMessage(chatId, message) {\r\n  try {\r\n    const response = await fetch('http://localhost:3333/api/1.0.0/chats/${chatId}/messages', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'X-Authorisation': await AsyncStorage.getItem('whatsthat_session_token'),\r\n      },\r\n      body: JSON.stringify({\r\n        message: message,\r\n      }),\r\n    });\r\n\r\n    if (response.status === 200) {\r\n      const chatDetails = await response.json();\r\n      this.setState({ chatDetails: chatDetails });\r\n    } else if (response.status === 400) {\r\n      console.log('Bad Request');\r\n    } else if (response.status === 401) {\r\n      console.log('Unathorised');\r\n      await AsyncStorage.removeItem('whatsthat_session_token');\r\n      await AsyncStorage.removeItem('whatsthat_user_id');\r\n      this.props.navigation.navigate('Login');\r\n    } else if (response.status === 403) {\r\n      console.log('Forbidden');\r\n    } else if (response.status === 404) {\r\n      console.log('Not Found');\r\n    } else {\r\n      throw 'Server Error';\r\n    }\r\n  } catch (error) {\r\n    this.setState({ error: error });\r\n  }\r\n}\r\n\r\nasync UpdateMessage(chatId, messageId, message) {\r\n  try {\r\n    const response = await fetch('http://localhost:3333/api/1.0.0/chats/${chatId}/messages/${messageId}', {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'X-Authorisation': await AsyncStorage.getItem('whatsthat_session_token'),\r\n      },\r\n      body: JSON.stringify({\r\n        message: message,\r\n      }),\r\n    });\r\n\r\n    if (response.status === 200) {\r\n      const chatDetails = await response.json();\r\n      this.setState({ chatDetails: chatDetails });\r\n    } else if (response.status === 400) {\r\n      console.log('Bad Request');\r\n    } else if (response.status === 401) {\r\n      console.log('Unathorised');\r\n      await AsyncStorage.removeItem('whatsthat_session_token');\r\n      await AsyncStorage.removeItem('whatsthat_user_id');\r\n      this.props.navigation.navigate('Login');\r\n    } else if (response.status === 403) {\r\n      console.log('Forbidden');\r\n    } else if (response.status === 404) {\r\n      console.log('Not Found');\r\n    } else {\r\n      throw 'Server Error';\r\n    }\r\n  } catch (error) {\r\n    this.setState({ error: error });\r\n  }\r\n}\r\n\r\nasync DeleteMessage(chatId, messageId) {\r\n  try {\r\n    const response = await fetch('http://localhost:3333/api/1.0.0/chats/${chatId}/messages/${messageId}', {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'X-Authorisation': await AsyncStorage.getItem('whatsthat_session_token'),\r\n      },\r\n    });\r\n\r\n    if (response.status === 200) {\r\n      const chatDetails = await response.json();\r\n      this.setState({ chatDetails: chatDetails });\r\n    } else if (response.status === 401) {\r\n      console.log('Unathorised');\r\n      await AsyncStorage.removeItem('whatsthat_session_token');\r\n      await AsyncStorage.removeItem('whatsthat_user_id');\r\n      this.props.navigation.navigate('Login');\r\n    } else if (response.status === 403) {\r\n      console.log('Forbidden');\r\n    } else if (response.status === 404) {\r\n      console.log('Not Found');\r\n    } else {\r\n      throw 'Server Error';\r\n    }\r\n  } catch (error) {\r\n    this.setState({ error: error });\r\n  }\r\n}\r\n\r\n\r\nrender() {\r\n  const { chats, newChatUserId, newMessage } = this.state;\r\n\r\n  return (\r\n    <View>\r\n      <Text>Create a new chat:</Text>\r\n      <TextInput\r\n        placeholder=\"Enter user ID\"\r\n        onChangeText={(newChatUserId) => this.setState({ newChatUserId })}\r\n        value={newChatUserId}\r\n      />\r\n      <Button title=\"Create chat\" onPress={() => this.startConversation([newChatUserId])} />\r\n\r\n      <Text>Current chats:</Text>\r\n      <FlatList\r\n        data={chats}\r\n        renderItem={this.renderChat}\r\n        keyExtractor={(item) => item.chat_id.toString()}\r\n      />\r\n\r\n      <Text>Send a message:</Text>\r\n      <TextInput\r\n        placeholder=\"Enter your message\"\r\n        onChangeText={(newMessage) => this.setState({ newMessage })}\r\n        value={newMessage}\r\n      />\r\n      <Button title=\"Send message\" onPress={() => this.SendMessage(this.state.chatDetails.chat_id, newMessage)} />\r\n    </View>\r\n  );\r\n}\r\n}\r\n\r\nexport default ChatScreen;\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}