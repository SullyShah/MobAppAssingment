{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport moment from 'moment';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SingleChatScreen = function (_Component) {\n  _inherits(SingleChatScreen, _Component);\n  var _super = _createSuper(SingleChatScreen);\n  function SingleChatScreen(props) {\n    var _this;\n    _classCallCheck(this, SingleChatScreen);\n    _this = _super.call(this, props);\n    _this.handleMessageInputChange = function (text) {\n      _this.setState({\n        newMessage: text\n      });\n    };\n    _this.sendMessage = _asyncToGenerator(function* () {\n      if (_this.state.newMessage && _this.state.currentchat_id) {\n        try {\n          yield _this.SendMessage(_this.state.currentchat_id, _this.state.newMessage);\n          _this.setState({\n            newMessage: ''\n          });\n          Alert.alert('Success', 'Message sent successfully');\n          _this.viewSingleChat(_this.state.currentchat_id);\n        } catch (error) {\n          Alert.alert('Error', error.toString());\n        }\n      }\n    });\n    _this.updateMessage = _asyncToGenerator(function* () {\n      if (_this.state.newMessage && _this.state.currentchat_id && _this.state.currentmessage_id) {\n        try {\n          yield _this.UpdateMessage(_this.state.currentchat_id, _this.state.currentmessage_id, _this.state.newMessage);\n          _this.setState({\n            newMessage: '',\n            editingMessage: false,\n            currentmessage_id: null\n          });\n          Alert.alert('Success', 'Message updated successfully');\n        } catch (error) {\n          Alert.alert('Error', error.toString());\n        }\n      }\n    });\n    _this.state = {\n      singleChat: null,\n      error: null,\n      newMessage: '',\n      messages: []\n    };\n    return _this;\n  }\n  _createClass(SingleChatScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n        route = _this$props.route,\n        navigation = _this$props.navigation;\n      var chat_id = route.params.chat_id;\n      this.viewSingleChat(chat_id);\n      this.setState({\n        currentchat_id: chat_id\n      });\n      navigation.setOptions({\n        title: chat_id,\n        headerRight: function headerRight() {\n          return _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return navigation.navigate('UpdateChat', {\n                chat_id: chat_id\n              });\n            },\n            children: _jsx(Text, {\n              style: {\n                color: 'blue',\n                marginRight: 10,\n                fontWeight: 'bold',\n                textDecorationLine: 'underline',\n                fontSize: 15\n              },\n              children: \"Edit Chat\"\n            })\n          });\n        }\n      });\n    }\n  }, {\n    key: \"viewSingleChat\",\n    value: function () {\n      var _viewSingleChat = _asyncToGenerator(function* (chat_id) {\n        try {\n          var response = yield fetch(\"http://localhost:3333/api/1.0.0/chat/\" + chat_id, {\n            method: 'GET',\n            headers: {\n              'X-Authorization': yield AsyncStorage.getItem('whatsthat_session_token'),\n              'Content-Type': 'application/json'\n            }\n          });\n          if (response.status === 200) {\n            var chat = yield response.json();\n            this.setState({\n              singleChat: chat,\n              messages: chat.messages || []\n            });\n            this.props.navigation.setOptions({\n              title: chat.name\n            });\n          } else if (response.status === 401) {\n            console.log('Unauthorised');\n            yield AsyncStorage.removeItem('whatsthat_session_token');\n            yield AsyncStorage.removeItem('whatsthat_user_id');\n            this.props.navigation.navigate('Login');\n          } else if (response.status === 403) {\n            console.log('Forbidden');\n          } else if (response.status === 404) {\n            console.log('Not Found');\n          } else {\n            throw 'Server Error';\n          }\n        } catch (error) {\n          this.setState({\n            error: error\n          });\n        }\n      });\n      function viewSingleChat(_x) {\n        return _viewSingleChat.apply(this, arguments);\n      }\n      return viewSingleChat;\n    }()\n  }, {\n    key: \"SendMessage\",\n    value: function () {\n      var _SendMessage = _asyncToGenerator(function* (chat_id, message) {\n        try {\n          var response = yield fetch(\"http://localhost:3333/api/1.0.0/chat/\" + chat_id + \"/message\", {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'X-Authorization': yield AsyncStorage.getItem('whatsthat_session_token')\n            },\n            body: JSON.stringify({\n              message: message\n            })\n          });\n          if (response.status === 200) {\n            var chatDetails = yield response.json();\n            this.setState({\n              chatDetails: chatDetails,\n              messages: chatDetails.messages || []\n            });\n          } else if (response.status === 400) {\n            console.log('Bad Request');\n          } else if (response.status === 401) {\n            console.log('Unathorised');\n            yield AsyncStorage.removeItem('whatsthat_session_token');\n            yield AsyncStorage.removeItem('whatsthat_user_id');\n            this.props.navigation.navigate('Login');\n          } else if (response.status === 403) {\n            console.log('Forbidden');\n          } else if (response.status === 404) {\n            console.log('Not Found');\n          } else {\n            throw 'Server Error';\n          }\n        } catch (error) {\n          this.setState({\n            error: error\n          });\n        }\n      });\n      function SendMessage(_x2, _x3) {\n        return _SendMessage.apply(this, arguments);\n      }\n      return SendMessage;\n    }()\n  }, {\n    key: \"UpdateMessage\",\n    value: function () {\n      var _UpdateMessage = _asyncToGenerator(function* (chat_id, message_id, message) {\n        try {\n          var response = yield fetch(\"http://localhost:3333/api/1.0.0/chat/\" + chat_id + \"/message/\" + message_id, {\n            method: 'PATCH',\n            headers: {\n              'Content-Type': 'application/json',\n              'X-Authorization': yield AsyncStorage.getItem('whatsthat_session_token')\n            },\n            body: JSON.stringify({\n              message: message\n            })\n          });\n          if (response.status === 200) {\n            var chatDetails = yield response.json();\n            this.setState({\n              chatDetails: chatDetails\n            });\n          } else if (response.status === 400) {\n            console.log('Bad Request');\n          } else if (response.status === 401) {\n            console.log('Unathorised');\n            yield AsyncStorage.removeItem('whatsthat_session_token');\n            yield AsyncStorage.removeItem('whatsthat_user_id');\n            this.props.navigation.navigate('Login');\n          } else if (response.status === 403) {\n            console.log('Forbidden');\n          } else if (response.status === 404) {\n            console.log('Not Found');\n          } else {\n            throw 'Server Error';\n          }\n        } catch (error) {\n          this.setState({\n            error: error\n          });\n        }\n      });\n      function UpdateMessage(_x4, _x5, _x6) {\n        return _UpdateMessage.apply(this, arguments);\n      }\n      return UpdateMessage;\n    }()\n  }, {\n    key: \"DeleteMessage\",\n    value: function () {\n      var _DeleteMessage = _asyncToGenerator(function* (chat_id, message_id) {\n        try {\n          var response = yield fetch(\"http://localhost:3333/api/1.0.0/chat/\" + chat_id + \"/message/\" + message_id, {\n            method: 'DELETE',\n            headers: {\n              'Content-Type': 'application/json',\n              'X-Authorization': yield AsyncStorage.getItem('whatsthat_session_token')\n            }\n          });\n          if (response.status === 200) {\n            var chatDetails = yield response.json();\n            this.setState({\n              chatDetails: chatDetails\n            });\n          } else if (response.status === 401) {\n            console.log('Unathorised');\n            yield AsyncStorage.removeItem('whatsthat_session_token');\n            yield AsyncStorage.removeItem('whatsthat_user_id');\n            this.props.navigation.navigate('Login');\n          } else if (response.status === 403) {\n            console.log('Forbidden');\n          } else if (response.status === 404) {\n            console.log('Not Found');\n          } else {\n            throw 'Server Error';\n          }\n        } catch (error) {\n          this.setState({\n            error: error\n          });\n        }\n      });\n      function DeleteMessage(_x7, _x8) {\n        return _DeleteMessage.apply(this, arguments);\n      }\n      return DeleteMessage;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var _this$state = this.state,\n        singleChat = _this$state.singleChat,\n        messages = _this$state.messages;\n      if (!singleChat) {\n        return _jsx(Text, {\n          children: \"Loading...\"\n        });\n      }\n      var reversedMessages = _toConsumableArray(messages).reverse();\n      return _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(ScrollView, {\n          style: styles.messagesContainer,\n          children: reversedMessages.map(function (msg, index) {\n            return _jsxs(View, {\n              style: [styles.messageBox, msg.author.name === _this2.state.currentUser ? styles.rightAlign : styles.leftAlign],\n              children: [_jsx(Text, {\n                style: styles.messageSender,\n                children: msg.author.name\n              }), _jsx(Text, {\n                style: styles.messageText,\n                children: msg.message\n              }), _jsx(Text, {\n                style: styles.messageTime,\n                children: moment(msg.timestamp).format('MMMM Do YYYY, h:mm a')\n              })]\n            }, msg.message_id);\n          })\n        }), _jsxs(View, {\n          style: styles.inputContainer,\n          children: [_jsx(TextInput, {\n            style: styles.input,\n            placeholder: \"Type your message here...\",\n            value: this.state.newMessage,\n            onChangeText: this.handleMessageInputChange\n          }), _jsx(Button, {\n            title: \"Send\",\n            onPress: this.sendMessage\n          })]\n        })]\n      });\n    }\n  }]);\n  return SingleChatScreen;\n}(Component);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  messagesContainer: {\n    flex: 1,\n    padding: 10\n  },\n  messageBox: {\n    marginVertical: 10,\n    padding: 10,\n    borderRadius: 5,\n    borderColor: '#ccc',\n    borderWidth: 1\n  },\n  rightAlign: {\n    alignSelf: 'flex-end',\n    backgroundColor: '#dcf8c6'\n  },\n  leftAlign: {\n    alignSelf: 'flex-start',\n    backgroundColor: '#fff'\n  },\n  messageSender: {\n    fontWeight: 'bold',\n    marginBottom: 5\n  },\n  messageText: {\n    fontSize: 16\n  },\n  messageTime: {\n    fontSize: 12,\n    color: 'gray',\n    textAlign: 'right'\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 10,\n    borderTopColor: '#ccc',\n    borderTopWidth: 1\n  },\n  input: {\n    flex: 1,\n    marginRight: 10,\n    height: 40,\n    borderColor: '#ccc',\n    borderWidth: 1,\n    borderRadius: 5,\n    padding: 5\n  }\n});\nexport default SingleChatScreen;","map":{"version":3,"names":["React","Component","ScrollView","TextInput","Button","View","Text","StyleSheet","Alert","TouchableOpacity","AsyncStorage","moment","jsx","_jsx","jsxs","_jsxs","SingleChatScreen","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","handleMessageInputChange","text","setState","newMessage","sendMessage","_asyncToGenerator","state","currentchat_id","SendMessage","alert","viewSingleChat","error","toString","updateMessage","currentmessage_id","UpdateMessage","editingMessage","singleChat","messages","_createClass","key","value","componentDidMount","_this$props","route","navigation","chat_id","params","setOptions","title","headerRight","onPress","navigate","children","style","color","marginRight","fontWeight","textDecorationLine","fontSize","_viewSingleChat","response","fetch","method","headers","getItem","status","chat","json","name","console","log","removeItem","_x","apply","arguments","_SendMessage","message","body","JSON","stringify","chatDetails","_x2","_x3","_UpdateMessage","message_id","_x4","_x5","_x6","_DeleteMessage","DeleteMessage","_x7","_x8","render","_this2","_this$state","reversedMessages","_toConsumableArray","reverse","styles","container","messagesContainer","map","msg","index","messageBox","author","currentUser","rightAlign","leftAlign","messageSender","messageText","messageTime","timestamp","format","inputContainer","input","placeholder","onChangeText","create","flex","padding","marginVertical","borderRadius","borderColor","borderWidth","alignSelf","backgroundColor","marginBottom","textAlign","flexDirection","alignItems","borderTopColor","borderTopWidth","height"],"sources":["C:/Users/44773/Desktop/Assingment/components/SingleChat.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { ScrollView, TextInput, Button, View, Text, StyleSheet, Alert, TouchableOpacity } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport moment from 'moment';\r\n\r\nclass SingleChatScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      singleChat: null,\r\n      error: null,\r\n      newMessage: '',\r\n      messages: [\r\n        // { id: 1, sender: 'User1', message: 'Hi there!' },\r\n        // { id: 2, sender: 'User2', message: 'Hello!' },\r\n        // { id: 3, sender: 'User1', message: 'How are you?' },\r\n        // { id: 4, sender: 'User2', message: 'I\\'m good. Thanks!' },\r\n        // { id: 5, sender: 'User1', message: 'I\\'m good. Thanks!' },\r\n        // { id: 6, sender: 'User2', message: 'I\\'m good. Thanks!' },\r\n        // { id: 7, sender: 'User1', message: 'I\\'m good. Thanks!' },\r\n        // { id: 8, sender: 'User2', message: 'I\\'m good. Thanks!' },\r\n     \r\n      ]\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { route, navigation } = this.props;\r\n    const { chat_id } = route.params;\r\n    this.viewSingleChat(chat_id);\r\n    this.setState({ currentchat_id: chat_id });\r\n    navigation.setOptions({ \r\n      title: chat_id, \r\n      headerRight: () => (\r\n        <TouchableOpacity onPress={() => navigation.navigate('UpdateChat', { chat_id })}>\r\n          <Text style={{ color: 'blue', marginRight: 10, fontWeight: 'bold', textDecorationLine: 'underline', fontSize: 15 }}>\r\n            Edit Chat</Text>\r\n        </TouchableOpacity>\r\n      )\r\n    });\r\n  }\r\n  \r\n  \r\n  \r\n  handleMessageInputChange = (text) => {\r\n    this.setState({ newMessage: text });\r\n  }\r\n\r\n  sendMessage = async () => {\r\n    if (this.state.newMessage && this.state.currentchat_id) {\r\n      try {\r\n        await this.SendMessage(this.state.currentchat_id, this.state.newMessage);\r\n        this.setState({ newMessage: '' });\r\n        Alert.alert('Success', 'Message sent successfully');\r\n\r\n        // Fetch chat details again to update the messages\r\n        this.viewSingleChat(this.state.currentchat_id);\r\n      } catch (error) {\r\n        Alert.alert('Error', error.toString());\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  updateMessage = async () => {\r\n    if (this.state.newMessage && this.state.currentchat_id && this.state.currentmessage_id) {\r\n      try {\r\n        await this.UpdateMessage(this.state.currentchat_id, this.state.currentmessage_id, this.state.newMessage);\r\n        this.setState({ newMessage: '', editingMessage: false, currentmessage_id: null });\r\n        Alert.alert('Success', 'Message updated successfully');\r\n      } catch (error) {\r\n        Alert.alert('Error', error.toString());\r\n      }\r\n    }\r\n  };\r\n\r\n  async viewSingleChat(chat_id) {\r\n    try {\r\n      const response = await fetch(`http://localhost:3333/api/1.0.0/chat/${chat_id}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'X-Authorization': await AsyncStorage.getItem('whatsthat_session_token'),\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      if (response.status === 200) {\r\n        const chat = await response.json();\r\n        this.setState({ \r\n          singleChat: chat,\r\n          messages: chat.messages || [] // Update the messages state here\r\n        });\r\n        this.props.navigation.setOptions({ title: chat.name });\r\n      } else if (response.status === 401) {\r\n        console.log('Unauthorised');\r\n        await AsyncStorage.removeItem('whatsthat_session_token');\r\n        await AsyncStorage.removeItem('whatsthat_user_id');\r\n        this.props.navigation.navigate('Login');\r\n      } else if (response.status === 403) {\r\n        console.log('Forbidden');\r\n      } else if (response.status === 404) {\r\n        console.log('Not Found');\r\n      } else {\r\n        throw 'Server Error';\r\n      }\r\n    } catch (error) {\r\n      this.setState({ error: error });\r\n    }\r\n  }\r\n\r\n\r\n  async SendMessage(chat_id, message) {\r\n    try {\r\n      const response = await fetch(`http://localhost:3333/api/1.0.0/chat/${chat_id}/message`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-Authorization': await AsyncStorage.getItem('whatsthat_session_token'),\r\n        },\r\n        body: JSON.stringify({\r\n          message: message,\r\n        }),\r\n      });\r\n      if (response.status === 200) {\r\n        const chatDetails = await response.json();\r\n        this.setState({ \r\n          chatDetails: chatDetails, \r\n          messages: chatDetails.messages || []  // Update messages\r\n        });\r\n      } else if (response.status === 400) {\r\n        console.log('Bad Request');\r\n      } else if (response.status === 401) {\r\n        console.log('Unathorised');\r\n        await AsyncStorage.removeItem('whatsthat_session_token');\r\n        await AsyncStorage.removeItem('whatsthat_user_id');\r\n        this.props.navigation.navigate('Login');\r\n      } else if (response.status === 403) {\r\n        console.log('Forbidden');\r\n      } else if (response.status === 404) {\r\n        console.log('Not Found');\r\n      } else {\r\n        throw 'Server Error';\r\n      }\r\n    } catch (error) {\r\n      this.setState({ error: error });\r\n    }\r\n  }\r\n  \r\n  async UpdateMessage(chat_id, message_id, message) {\r\n    try {\r\n      const response = await fetch(`http://localhost:3333/api/1.0.0/chat/${chat_id}/message/${message_id}`, {\r\n        method: 'PATCH',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-Authorization': await AsyncStorage.getItem('whatsthat_session_token'),\r\n        },\r\n        body: JSON.stringify({\r\n          message: message,\r\n        }),\r\n      });\r\n  \r\n      if (response.status === 200) {\r\n        const chatDetails = await response.json();\r\n        this.setState({ chatDetails: chatDetails });\r\n      } else if (response.status === 400) {\r\n        console.log('Bad Request');\r\n      } else if (response.status === 401) {\r\n        console.log('Unathorised');\r\n        await AsyncStorage.removeItem('whatsthat_session_token');\r\n        await AsyncStorage.removeItem('whatsthat_user_id');\r\n        this.props.navigation.navigate('Login');\r\n      } else if (response.status === 403) {\r\n        console.log('Forbidden');\r\n      } else if (response.status === 404) {\r\n        console.log('Not Found');\r\n      } else {\r\n        throw 'Server Error';\r\n      }\r\n    } catch (error) {\r\n      this.setState({ error: error });\r\n    }\r\n  } \r\n \r\n\r\nasync DeleteMessage(chat_id, message_id) {\r\n  try {\r\n    const response = await fetch(`http://localhost:3333/api/1.0.0/chat/${chat_id}/message/${message_id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'X-Authorization': await AsyncStorage.getItem('whatsthat_session_token'),\r\n      },\r\n    });\r\n\r\n    if (response.status === 200) {\r\n      const chatDetails = await response.json();\r\n      this.setState({ chatDetails: chatDetails });\r\n    } else if (response.status === 401) {\r\n      console.log('Unathorised');\r\n      await AsyncStorage.removeItem('whatsthat_session_token');\r\n      await AsyncStorage.removeItem('whatsthat_user_id');\r\n      this.props.navigation.navigate('Login');\r\n    } else if (response.status === 403) {\r\n      console.log('Forbidden');\r\n    } else if (response.status === 404) {\r\n      console.log('Not Found');\r\n    } else {\r\n      throw 'Server Error';\r\n    }\r\n  } catch (error) {\r\n    this.setState({ error: error });\r\n  }\r\n}\r\n\r\n\r\nrender() {\r\n  const { singleChat, messages } = this.state;\r\n\r\n  if (!singleChat) {\r\n    return <Text>Loading...</Text>;\r\n  }\r\n  \r\n  const reversedMessages = [...messages].reverse();\r\n  return (\r\n    <View style={styles.container}>\r\n      <ScrollView style={styles.messagesContainer}>\r\n      {reversedMessages.map((msg, index) => (\r\n        <View key={msg.message_id} style={[\r\n          styles.messageBox,\r\n          msg.author.name === this.state.currentUser ? styles.rightAlign : styles.leftAlign\r\n        ]}>\r\n          <Text style={styles.messageSender}>{msg.author.name}</Text>\r\n          <Text style={styles.messageText}>{msg.message}</Text>\r\n          <Text style={styles.messageTime}>{moment(msg.timestamp).format('MMMM Do YYYY, h:mm a')}</Text>\r\n        </View>\r\n      ))}\r\n      </ScrollView>\r\n      <View style={styles.inputContainer}>\r\n        <TextInput \r\n          style={styles.input}\r\n          placeholder=\"Type your message here...\"\r\n          value={this.state.newMessage}\r\n          onChangeText={this.handleMessageInputChange}\r\n        />\r\n        <Button \r\n          title=\"Send\"\r\n          onPress={this.sendMessage} \r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  messagesContainer: {\r\n    flex: 1,\r\n    padding: 10,\r\n  },\r\n  messageBox: {\r\n    marginVertical: 10,\r\n    padding: 10,\r\n    borderRadius: 5,\r\n    borderColor: '#ccc',\r\n    borderWidth: 1,\r\n  },\r\n  rightAlign: {\r\n    alignSelf: 'flex-end',\r\n    backgroundColor: '#dcf8c6',\r\n  },\r\n  leftAlign: {\r\n    alignSelf: 'flex-start',\r\n    backgroundColor: '#fff',\r\n  },\r\n  messageSender: {\r\n    fontWeight: 'bold',\r\n    marginBottom: 5,\r\n  },\r\n  messageText: {\r\n    fontSize: 16,\r\n  },\r\n  messageTime: {\r\n    fontSize: 12,\r\n    color: 'gray',\r\n    textAlign: 'right'\r\n  },\r\n  inputContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    padding: 10,\r\n    borderTopColor: '#ccc',\r\n    borderTopWidth: 1,\r\n  },\r\n  input: {\r\n    flex: 1,\r\n    marginRight: 10,\r\n    height: 40,\r\n    borderColor: '#ccc',\r\n    borderWidth: 1,\r\n    borderRadius: 5,\r\n    padding: 5,\r\n  },\r\n});\r\n\r\nexport default SingleChatScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}