{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport LoginScreen from \"./components/Login\";\nimport SignupScreen from \"./components/Signup\";\nimport MainScreen from \"./components/Main\";\nimport ContactScreen from \"./components/Contacts\";\nimport ChatScreen from \"./components/Chat\";\nimport AddContactsScreen from \"./components/AddContact\";\nimport BlockScreen from \"./components/Blocked\";\nimport ChatNavigatorScreen from \"./components/ChatNavigator\";\nimport ContactNavigatorScreen from \"./components/ContactNavigator\";\nvar Stack = createNativeStackNavigator();\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar App = function (_Component) {\n  _inherits(App, _Component);\n  var _super = _createSuper(App);\n  function App() {\n    _classCallCheck(this, App);\n    return _super.apply(this, arguments);\n  }\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return _jsx(NavigationContainer, {\n        children: _jsxs(Stack.Navigator, {\n          children: [_jsx(Stack.Screen, {\n            name: \"Login\",\n            component: LoginScreen\n          }), _jsx(Stack.Screen, {\n            name: \"Signup\",\n            component: SignupScreen\n          }), _jsx(Stack.Screen, {\n            name: \"Main\",\n            component: MainScreen\n          }), _jsx(Stack.Screen, {\n            name: \"Contacts\",\n            component: ContactScreen\n          }), _jsx(Stack.Screen, {\n            name: \"Chat\",\n            component: ChatScreen\n          }), _jsx(Stack.Screen, {\n            name: \"AddContacts\",\n            component: AddContactsScreen\n          }), _jsx(Stack.Screen, {\n            name: \"Blocked\",\n            component: BlockScreen\n          }), _jsx(Stack.Screen, {\n            name: \"ChatNavigator\",\n            component: ChatNavigatorScreen\n          }), _jsx(Stack.Screen, {\n            name: \"ContactNavigator\",\n            component: ContactNavigatorScreen\n          })]\n        })\n      });\n    }\n  }]);\n  return App;\n}(Component);\nexport { App as default };","map":{"version":3,"names":["React","Component","NavigationContainer","createNativeStackNavigator","LoginScreen","SignupScreen","MainScreen","ContactScreen","ChatScreen","AddContactsScreen","BlockScreen","ChatNavigatorScreen","ContactNavigatorScreen","Stack","Text","jsx","_jsx","jsxs","_jsxs","App","_Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","render","children","Navigator","Screen","name","component","default"],"sources":["C:/Users/44773/Desktop/Assingment/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport LoginScreen from './components/Login';\nimport SignupScreen from './components/Signup';\nimport MainScreen from './components/Main';\nimport ContactScreen from './components/Contacts';\nimport ChatScreen from './components/Chat';\nimport AddContactsScreen from './components/AddContact';\nimport BlockScreen from './components/Blocked';\nimport ChatNavigatorScreen from './components/ChatNavigator';\nimport ContactNavigatorScreen from './components/ContactNavigator';\n\nconst Stack = createNativeStackNavigator();\nimport { Text } from 'react-native';\n\nexport default class App extends Component {\n\n\n render(){\n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        <Stack.Screen name=\"Login\" component={LoginScreen} />\n        <Stack.Screen name=\"Signup\" component={SignupScreen}/>\n        <Stack.Screen name=\"Main\" component={MainScreen}/>\n        <Stack.Screen name=\"Contacts\" component={ContactScreen}/>\n        <Stack.Screen name=\"Chat\" component={ChatScreen}/>\n        <Stack.Screen name=\"AddContacts\" component={AddContactsScreen} />\n        <Stack.Screen name=\"Blocked\" component={BlockScreen} />\n        <Stack.Screen name=\"ChatNavigator\" component={ChatNavigatorScreen} />\n        <Stack.Screen name=\"ContactNavigator\" component={ContactNavigatorScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  )\n }\n}\n\n\n//RUN WHATSTHAT SERVER EVERYTIME\n\n//http://localhost:3333/api/1.0.0/documentation/\n//take register input store in to postman server\n//WORK THROUGH ALL THE END POINTS\n//CREATE VALIDATION FOR THE LOGIN\n\n//Using the documentation follow the variable name exactly\n// handle all error codes and print out to the user if they receieved\n//past lecture for the session token\n\n"],"mappings":";;;;;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,OAAOC,WAAW;AAClB,OAAOC,YAAY;AACnB,OAAOC,UAAU;AACjB,OAAOC,aAAa;AACpB,OAAOC,UAAU;AACjB,OAAOC,iBAAiB;AACxB,OAAOC,WAAW;AAClB,OAAOC,mBAAmB;AAC1B,OAAOC,sBAAsB;AAE7B,IAAMC,KAAK,GAAGV,0BAA0B,EAAE;AAAC,OAAAW,IAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,IAGtBC,GAAG,aAAAC,UAAA;EAAAC,SAAA,CAAAF,GAAA,EAAAC,UAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,GAAA;EAAA,SAAAA,IAAA;IAAAK,eAAA,OAAAL,GAAA;IAAA,OAAAG,MAAA,CAAAG,KAAA,OAAAC,SAAA;EAAA;EAAAC,YAAA,CAAAR,GAAA;IAAAS,GAAA;IAAAC,KAAA,EAGvB,SAAAC,OAAA,EAAQ;MACP,OACEd,IAAA,CAACd,mBAAmB;QAAA6B,QAAA,EAClBb,KAAA,CAACL,KAAK,CAACmB,SAAS;UAAAD,QAAA,GACdf,IAAA,CAACH,KAAK,CAACoB,MAAM;YAACC,IAAI,EAAC,OAAO;YAACC,SAAS,EAAE/B;UAAY,EAAG,EACrDY,IAAA,CAACH,KAAK,CAACoB,MAAM;YAACC,IAAI,EAAC,QAAQ;YAACC,SAAS,EAAE9B;UAAa,EAAE,EACtDW,IAAA,CAACH,KAAK,CAACoB,MAAM;YAACC,IAAI,EAAC,MAAM;YAACC,SAAS,EAAE7B;UAAW,EAAE,EAClDU,IAAA,CAACH,KAAK,CAACoB,MAAM;YAACC,IAAI,EAAC,UAAU;YAACC,SAAS,EAAE5B;UAAc,EAAE,EACzDS,IAAA,CAACH,KAAK,CAACoB,MAAM;YAACC,IAAI,EAAC,MAAM;YAACC,SAAS,EAAE3B;UAAW,EAAE,EAClDQ,IAAA,CAACH,KAAK,CAACoB,MAAM;YAACC,IAAI,EAAC,aAAa;YAACC,SAAS,EAAE1B;UAAkB,EAAG,EACjEO,IAAA,CAACH,KAAK,CAACoB,MAAM;YAACC,IAAI,EAAC,SAAS;YAACC,SAAS,EAAEzB;UAAY,EAAG,EACvDM,IAAA,CAACH,KAAK,CAACoB,MAAM;YAACC,IAAI,EAAC,eAAe;YAACC,SAAS,EAAExB;UAAoB,EAAG,EACrEK,IAAA,CAACH,KAAK,CAACoB,MAAM;YAACC,IAAI,EAAC,kBAAkB;YAACC,SAAS,EAAEvB;UAAuB,EAAG;QAAA;MAC3D,EACE;IAEzB;EAAC;EAAA,OAAAO,GAAA;AAAA,EAnB+BlB,SAAS;AAAA,SAArBkB,GAAG,IAAAiB,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}