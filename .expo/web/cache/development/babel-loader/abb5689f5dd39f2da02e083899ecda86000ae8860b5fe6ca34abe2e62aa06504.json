{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ContactScreen = function (_Component) {\n  _inherits(ContactScreen, _Component);\n  var _super = _createSuper(ContactScreen);\n  function ContactScreen(props) {\n    var _this;\n    _classCallCheck(this, ContactScreen);\n    _this = _super.call(this, props);\n    _this.refreshContactsList = function () {\n      _this.fetchContacts();\n    };\n    _this.handleSearchChange = function (searchQuery) {\n      _this.setState({\n        searchQuery: searchQuery\n      });\n    };\n    _this.handleSearch = _asyncToGenerator(function* () {\n      var users = yield _this.searchUsers(_this.state.searchQuery);\n      _this.setState({\n        contacts: users\n      });\n    });\n    _this.searchUsers = function () {\n      var _ref2 = _asyncToGenerator(function* (searchQuery) {});\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    _this.state = {\n      contacts: [],\n      searchQuery: ''\n    };\n    return _this;\n  }\n  _createClass(ContactScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchContacts();\n    }\n  }, {\n    key: \"fetchContacts\",\n    value: function () {\n      var _fetchContacts = _asyncToGenerator(function* () {});\n      function fetchContacts() {\n        return _fetchContacts.apply(this, arguments);\n      }\n      return fetchContacts;\n    }()\n  }, {\n    key: \"GetContacts\",\n    value: function () {\n      var _GetContacts = _asyncToGenerator(function* () {});\n      function GetContacts() {\n        return _GetContacts.apply(this, arguments);\n      }\n      return GetContacts;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      return _jsxs(View, {\n        style: {\n          flex: 1\n        },\n        children: [_jsx(Text, {\n          children: \"Contact Screen\"\n        }), _jsx(TextInput, {\n          value: this.state.searchQuery,\n          onChangeText: this.handleSearchChange,\n          placeholder: \"Search users...\"\n        }), _jsx(Button, {\n          title: \"Search\",\n          onPress: this.handleSearch\n        }), _jsx(Button, {\n          title: \"Add Contact\",\n          onPress: function onPress() {\n            return _this2.props.navigation.navigate('AddContact', {\n              onRefreshContacts: _this2.refreshContactsList\n            });\n          }\n        }), _jsx(Button, {\n          title: \"Delete Contact\",\n          onPress: function onPress() {\n            return _this2.props.navigation.navigate('DeleteContact', {\n              onRefreshContacts: _this2.refreshContactsList\n            });\n          }\n        }), _jsx(FlatList, {\n          contentContainerStyle: {\n            flexGrow: 1\n          },\n          data: this.state.contacts,\n          keyExtractor: function keyExtractor(item) {\n            return item.user_id.toString();\n          },\n          renderItem: function renderItem(_ref3) {\n            var item = _ref3.item;\n            return _jsxs(View, {\n              children: [_jsxs(Text, {\n                children: [item.first_name, \" \", item.last_name]\n              }), _jsx(Text, {\n                children: item.email\n              }), _jsx(Text, {\n                children: item.user_id\n              })]\n            });\n          }\n        })]\n      });\n    }\n  }]);\n  return ContactScreen;\n}(Component);\nContactScreen.navigationOptions = {\n  header: null\n};\nexport default ContactScreen;","map":{"version":3,"names":["AsyncStorage","React","Component","Text","View","Button","FlatList","TextInput","jsx","_jsx","jsxs","_jsxs","ContactScreen","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","refreshContactsList","fetchContacts","handleSearchChange","searchQuery","setState","handleSearch","_asyncToGenerator","users","searchUsers","state","contacts","_ref2","_x","apply","arguments","_createClass","key","value","componentDidMount","_fetchContacts","_GetContacts","GetContacts","render","_this2","style","flex","children","onChangeText","placeholder","title","onPress","navigation","navigate","onRefreshContacts","contentContainerStyle","flexGrow","data","keyExtractor","item","user_id","toString","renderItem","_ref3","first_name","last_name","email","navigationOptions","header"],"sources":["C:/Users/44773/Desktop/Assingment/components/Contacts.js"],"sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport React, { Component } from 'react';\r\nimport { Text, View, Button, FlatList, TextInput } from 'react-native';\r\n\r\nclass ContactScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      contacts: [],\r\n      searchQuery: '',\r\n    };\r\n  }\r\n\r\n  static navigationOptions = {\r\n    header: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchContacts();\r\n  }\r\n\r\n  refreshContactsList = () => {\r\n    this.fetchContacts();\r\n  };\r\n\r\n  handleSearchChange = (searchQuery) => {\r\n    this.setState({ searchQuery });\r\n  };\r\n\r\n  handleSearch = async () => {\r\n    const users = await this.searchUsers(this.state.searchQuery);\r\n    this.setState({ contacts: users });\r\n  };\r\n\r\n  searchUsers = async (searchQuery) => {\r\n    // ... (same as before)\r\n  };\r\n\r\n  async fetchContacts() {\r\n    // ... (same as before)\r\n  }\r\n\r\n  async GetContacts() {\r\n    // ... (same as before)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        <Text>Contact Screen</Text>\r\n\r\n        <TextInput\r\n          value={this.state.searchQuery}\r\n          onChangeText={this.handleSearchChange}\r\n          placeholder=\"Search users...\"\r\n        />\r\n\r\n        <Button title=\"Search\" onPress={this.handleSearch} />\r\n\r\n        <Button title=\"Add Contact\" onPress={() => this.props.navigation.navigate('AddContact', {\r\n              onRefreshContacts: this.refreshContactsList,\r\n            })\r\n          }\r\n        />\r\n\r\n        <Button title=\"Delete Contact\" onPress={() => this.props.navigation.navigate('DeleteContact', {\r\n              onRefreshContacts: this.refreshContactsList,\r\n            })\r\n          }\r\n        />\r\n\r\n        <FlatList\r\n          contentContainerStyle={{ flexGrow: 1 }}\r\n          data={this.state.contacts}\r\n          keyExtractor={(item) => item.user_id.toString()}\r\n          renderItem={({ item }) => (\r\n            <View>\r\n              <Text>{item.first_name} {item.last_name}</Text>\r\n              <Text>{item.email}</Text>\r\n              <Text>{item.user_id}</Text>\r\n            </View>\r\n          )}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}