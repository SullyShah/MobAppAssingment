{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function (_Component) {\n  _inherits(LoginScreen, _Component);\n  var _super = _createSuper(LoginScreen);\n  function LoginScreen(props) {\n    var _this;\n    _classCallCheck(this, LoginScreen);\n    _this = _super.call(this, props);\n    _this.state = {\n      email: '',\n      password: '',\n      isLoading: true\n    };\n    return _this;\n  }\n  _createClass(LoginScreen, [{\n    key: \"isValidEmail\",\n    value: function isValidEmail(email) {\n      var check = /\\S+@\\S+\\.\\S+/;\n      return check.test(email);\n    }\n  }, {\n    key: \"isValidPassword\",\n    value: function isValidPassword(password) {\n      var check = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\n      return check.test(password);\n    }\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = _asyncToGenerator(function* () {\n        var _this2 = this;\n        if (!this.state.email || !this.state.password) {\n          this.setState({\n            error: 'Please enter both email and password.'\n          });\n          return;\n        }\n        if (!this.isValidEmail(this.state.email)) {\n          this.setState({\n            error: 'Please enter a valid email address.'\n          });\n          return;\n        }\n        if (!this.isValidPassword(this.state.password)) {\n          this.setState({\n            error: 'Password must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, and one number.'\n          });\n          return;\n        }\n        var toSend = {\n          email: this.state.email,\n          password: this.state.password\n        };\n        fetch('http://localhost:3333/api/1.0.0/login', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(toSend)\n        }).then(function (response) {\n          console.log('login requests sent');\n          if (response.status === 201) {\n            console.log(response);\n            return response.json();\n          } else if (response.status === 400) {\n            throw new Error('Invalid Email Or Password Entered');\n          } else {\n            throw new Error(\"Server Error - Status: \" + response.status);\n          }\n        }).then(function () {\n          var _ref = _asyncToGenerator(function* (rJson) {\n            console.log(rJson);\n            try {\n              yield AsyncStorage.setItem('whatsthat_user_id', rJson.id.toString());\n              yield AsyncStorage.setItem('whatsthat_session_token', rJson.token);\n              _this2.setState({\n                Submitted: false\n              });\n              _this2.props.navigation.navigate('Main');\n            } catch (_unused) {\n              throw 'Server Error';\n            }\n          });\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }()).catch(function (error) {\n          console.log(error);\n        });\n      });\n      function login() {\n        return _login.apply(this, arguments);\n      }\n      return login;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      var navigation = this.props.navigation;\n      return _jsxs(View, {\n        style: {\n          flex: 1\n        },\n        children: [_jsx(Text, {\n          style: {\n            fontSize: 20,\n            padding: 10\n          },\n          children: \"Please sign in to continue.\"\n        }), this.state.error && _jsx(Text, {\n          style: {\n            color: 'red',\n            textAlign: 'center',\n            marginBottom: 10\n          },\n          children: this.state.error\n        }), _jsx(TextInput, {\n          type: \"text\",\n          placeholder: \"Enter Email:\",\n          name: \"Email\",\n          required: true,\n          onChangeText: function onChangeText(c) {\n            return _this3.setState({\n              email: c\n            });\n          },\n          style: {\n            padding: 10,\n            borderWidth: 2,\n            borderRadius: 5,\n            margin: 10\n          }\n        }), _jsx(TextInput, {\n          secureTextEntry: true,\n          placeholder: \"Enter Password\",\n          name: \"Password\",\n          required: true,\n          onChangeText: function onChangeText(c) {\n            return _this3.setState({\n              password: c\n            });\n          },\n          style: {\n            padding: 10,\n            borderWidth: 2,\n            borderRadius: 5,\n            margin: 10\n          },\n          LockIcon: _jsx(Icon, {\n            name: \"lock\",\n            size: 30,\n            color: \"black\"\n          })\n        }), _jsx(Button, {\n          title: \"Log In\",\n          onPress: function onPress() {\n            return _this3.login();\n          }\n        }), _jsx(Button, {\n          title: \"Sign Up\",\n          onPress: function onPress() {\n            return _this3.props.navigation.navigate('Signup');\n          }\n        })]\n      });\n    }\n  }]);\n  return LoginScreen;\n}(Component);\nLoginScreen.navigationOptions = {\n  header: null\n};\nexport default LoginScreen;","map":{"version":3,"names":["React","Component","Text","View","Button","TextInput","Icon","AsyncStorage","jsx","_jsx","jsxs","_jsxs","LoginScreen","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","email","password","isLoading","_createClass","key","value","isValidEmail","check","test","isValidPassword","_login","_asyncToGenerator","_this2","setState","error","toSend","fetch","method","headers","body","JSON","stringify","then","response","console","log","status","json","Error","_ref","rJson","setItem","id","toString","token","Submitted","navigation","navigate","_unused","_x","apply","arguments","catch","login","render","_this3","style","flex","children","fontSize","padding","color","textAlign","marginBottom","type","placeholder","name","required","onChangeText","c","borderWidth","borderRadius","margin","secureTextEntry","LockIcon","size","title","onPress","navigationOptions","header"],"sources":["C:/Users/44773/Desktop/Assingment/components/Login.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Text, View, Button, TextInput } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nclass LoginScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      isLoading: true,\r\n    };\r\n  }\r\n\r\n  static navigationOptions = {\r\n    header: null,\r\n  };\r\n\r\n  isValidEmail(email) {\r\n    const check = /\\S+@\\S+\\.\\S+/;\r\n    return check.test(email);\r\n  }\r\n\r\n  isValidPassword(password) {\r\n    const check = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\r\n    return check.test(password);\r\n  }\r\n  \r\n\r\n  async login() {\r\n    if (!this.state.email || !this.state.password) {\r\n      this.setState({ error: 'Please enter both email and password.' });\r\n      return;\r\n    }\r\n\r\n    if (!this.isValidEmail(this.state.email)) {\r\n      this.setState({ error: 'Please enter a valid email address.' });\r\n      return;\r\n    }\r\n\r\n    if (!this.isValidPassword(this.state.password)) {\r\n      this.setState({\r\n        error:\r\n          'Password must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, and one number.',\r\n      });\r\n      return;\r\n    }\r\n\r\n    const toSend = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    };\r\n\r\n    fetch('http://localhost:3333/api/1.0.0/login', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(toSend),\r\n    })\r\n      // .then((response) => {\r\n      //   console.log('login requests sent');\r\n      //   if (response.status === 201) {\r\n      //     console.log(response);\r\n      //     return response.json();\r\n      //   } else if (response.status === 400) {\r\n      //     throw 'Invalid Email Or Password Entered';\r\n      //   } else {\r\n      //     throw 'Server Error';\r\n      //   }\r\n      // })\r\n\r\n      .then((response) => {\r\n        console.log('login requests sent');\r\n        if (response.status === 201) {\r\n          console.log(response);\r\n          return response.json();\r\n        } else if (response.status === 400) {\r\n          throw new Error('Invalid Email Or Password Entered');\r\n        } else {\r\n          throw new Error(`Server Error - Status: ${response.status}`);\r\n        }\r\n      })\r\n      \r\n      .then(async (rJson) => {\r\n        console.log(rJson);\r\n        try {\r\n          await AsyncStorage.setItem('whatsthat_user_id', rJson.id.toString());\r\n          await AsyncStorage.setItem('whatsthat_session_token', rJson.token);\r\n          this.setState({ Submitted: false });\r\n          this.props.navigation.navigate('Main');\r\n        } catch {\r\n          throw 'Server Error';\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n\r\n  render() {\r\n    const navigation = this.props.navigation;\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        <Text style={{ fontSize: 20, padding: 10 }}>\r\n          Please sign in to continue.\r\n        </Text>\r\n  \r\n        {this.state.error && (\r\n          <Text style={{ color: 'red', textAlign: 'center', marginBottom: 10 }}>\r\n            {this.state.error}\r\n          </Text>\r\n        )}\r\n  \r\n        <TextInput\r\n          type=\"text\"\r\n          placeholder=\"Enter Email:\"\r\n          name=\"Email\"\r\n          required\r\n          onChangeText={(c) => this.setState({ email: c })}\r\n          style={{\r\n            padding: 10,\r\n            borderWidth: 2,\r\n            borderRadius: 5,\r\n            margin: 10,\r\n          }}\r\n        />\r\n  \r\n        <TextInput\r\n          secureTextEntry={true}\r\n          placeholder=\"Enter Password\"\r\n          name=\"Password\"\r\n          required\r\n          onChangeText={(c) => this.setState({ password: c })}\r\n          style={{\r\n            padding: 10,\r\n            borderWidth: 2,\r\n            borderRadius: 5,\r\n            margin: 10,\r\n          }}\r\n          LockIcon={<Icon name=\"lock\" size={30} color=\"black\" />}\r\n        />\r\n  \r\n        <Button title=\"Log In\" onPress={() => this.login()} />\r\n  \r\n        <Button\r\n          title=\"Sign Up\"\r\n          onPress={() => this.props.navigation.navigate('Signup')}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n  \r\n\r\n  \r\n  // render(){\r\n  //   const navigation = this.props.navigation;\r\n  //     return(\r\n  //       <View \r\n  //         style={{ flex: 1}}>\r\n  //         <Text \r\n  //         style={{fontSize: 20, padding:10}}>\r\n  //         Please sign in to continue.\r\n  //         </Text>\r\n\r\n\r\n  //         <TextInput \r\n  //           type=\"text\" placeholder=\"Enter Email:\" name=\"Email\" required \r\n  //           onChangeText={(c) => this.setState({ email: c})}\r\n  //           style={{padding:10, borderWidth:2, borderRadius: 5, margin:10}}\r\n  //           // UnlockIcon={<Icon name='unlock' size={30} color='black' />}\r\n  //         />\r\n\r\n\r\n  //         <TextInput\r\n  //           secureTextEntry={true} placeholder=\"Enter Password\" name=\"Password\" required \r\n  //           onChangeText={(c) => this.setState({ password: c})}\r\n  //           style={{padding:10, borderWidth:2, borderRadius: 5, margin:10}}\r\n  //           LockIcon={<Icon name='lock' size={30} color='black' />}\r\n  //         />\r\n\r\n  //         {/* MAKE THE BUTTONS SMALLER AND ADD COLOUR */}\r\n        \r\n  //       <Button\r\n  //       title=\"Log In\"\r\n  //       onPress={() => this.login()}\r\n          \r\n  //       />\r\n\r\n  //       <Button\r\n  //       title=\"Sign Up\"\r\n  //       onPress={() => this.props.navigation.navigate('Signup')}\r\n  //       />\r\n  //     </View>\r\n\r\n  //   );\r\n  // }\r\n}\r\n\r\nexport default LoginScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}