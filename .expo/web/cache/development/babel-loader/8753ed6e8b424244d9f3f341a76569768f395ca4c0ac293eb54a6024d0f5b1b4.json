{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ContactScreen = function (_Component) {\n  _inherits(ContactScreen, _Component);\n  var _super = _createSuper(ContactScreen);\n  function ContactScreen(props) {\n    var _this;\n    _classCallCheck(this, ContactScreen);\n    _this = _super.call(this, props);\n    _this.refreshContactsList = function () {\n      _this.fetchContacts();\n    };\n    _this.handleSearchChange = function (searchQuery) {\n      _this.setState({\n        searchQuery: searchQuery\n      });\n    };\n    _this.handleSearch = _asyncToGenerator(function* () {\n      if (_this.state.searchQuery) {\n        var user = yield _this.searchUsers(_this.state.searchQuery);\n        _this.setState({\n          contacts: user ? [user] : []\n        });\n      } else {\n        _this.fetchContacts();\n      }\n    });\n    _this.searchUsers = function () {\n      var _ref2 = _asyncToGenerator(function* (searchQuery) {\n        try {\n          var response = yield fetch(\"http://localhost:3333/api/1.0.0/user/\" + encodeURIComponent(searchQuery), {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json',\n              'X-Authorization': yield AsyncStorage.getItem('whatsthat_session_token')\n            }\n          });\n          if (response.status === 200) {\n            var user = yield response.json();\n            return user;\n          } else if (response.status === 401) {\n            throw 'Unauthorised';\n          } else {\n            throw 'Server Error';\n          }\n        } catch (error) {\n          console.error(error);\n        }\n      });\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    _this.state = {\n      contacts: [],\n      searchQuery: '',\n      password: ''\n    };\n    return _this;\n  }\n  _createClass(ContactScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n      this.focusListener = this.props.navigation.addListener('focus', function () {\n        _this2.fetchContacts();\n      });\n    }\n  }, {\n    key: \"fetchContacts\",\n    value: function () {\n      var _fetchContacts = _asyncToGenerator(function* () {\n        try {\n          var response = yield this.GetContacts();\n          this.setState({\n            contacts: response\n          });\n        } catch (error) {\n          console.error(error);\n        }\n      });\n      function fetchContacts() {\n        return _fetchContacts.apply(this, arguments);\n      }\n      return fetchContacts;\n    }()\n  }, {\n    key: \"GetContacts\",\n    value: function () {\n      var _GetContacts = _asyncToGenerator(function* () {\n        return fetch('http://localhost:3333/api/1.0.0/contacts', {\n          method: 'GET',\n          headers: {\n            'X-Authorization': yield AsyncStorage.getItem('whatsthat_session_token')\n          }\n        }).then(function (response) {\n          if (response.status === 200) {\n            return response.json();\n          } else if (response.status === 401) {\n            throw 'Unauthorised';\n          } else {\n            throw 'Server Error';\n          }\n        });\n      });\n      function GetContacts() {\n        return _GetContacts.apply(this, arguments);\n      }\n      return GetContacts;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      return _jsxs(View, {\n        style: {\n          flex: 1\n        },\n        children: [_jsx(TextInput, {\n          value: this.state.searchQuery,\n          onChangeText: this.handleSearchChange,\n          placeholder: \"Type In The User's ID To Search.\",\n          style: {\n            padding: 10,\n            borderWidth: 2,\n            borderRadius: 5,\n            margin: 10\n          }\n        }), _jsx(Button, {\n          title: \"Search\",\n          onPress: this.handleSearch\n        }), _jsx(Button, {\n          title: \"Manage Contacts\",\n          onPress: function onPress() {\n            return _this3.props.navigation.navigate('ManageContacts', {\n              onRefreshContacts: _this3.refreshContactsList\n            });\n          }\n        }), _jsx(FlatList, {\n          contentContainerStyle: {\n            flexGrow: 1\n          },\n          data: this.state.contacts,\n          keyExtractor: function keyExtractor(item) {\n            return item.user_id.toString();\n          },\n          renderItem: function renderItem(_ref3) {\n            var item = _ref3.item;\n            return _jsxs(View, {\n              children: [\"style=\", {\n                padding: 10,\n                borderWidth: 2,\n                borderRadius: 5,\n                margin: 10\n              }, _jsxs(Text, {\n                children: [item.first_name, \" \", item.last_name]\n              }), _jsx(Text, {\n                children: item.email\n              }), _jsx(Text, {\n                children: item.user_id\n              }), _jsx(Text, {\n                children: item.password\n              })]\n            });\n          }\n        })]\n      });\n    }\n  }]);\n  return ContactScreen;\n}(Component);\nContactScreen.navigationOptions = {\n  header: null\n};\nexport default ContactScreen;","map":{"version":3,"names":["AsyncStorage","React","Component","Text","View","Button","FlatList","TextInput","jsx","_jsx","jsxs","_jsxs","ContactScreen","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","refreshContactsList","fetchContacts","handleSearchChange","searchQuery","setState","handleSearch","_asyncToGenerator","state","user","searchUsers","contacts","_ref2","response","fetch","encodeURIComponent","method","headers","getItem","status","json","error","console","_x","apply","arguments","password","_createClass","key","value","componentDidMount","_this2","focusListener","navigation","addListener","_fetchContacts","GetContacts","_GetContacts","then","render","_this3","style","flex","children","onChangeText","placeholder","padding","borderWidth","borderRadius","margin","title","onPress","navigate","onRefreshContacts","contentContainerStyle","flexGrow","data","keyExtractor","item","user_id","toString","renderItem","_ref3","first_name","last_name","email","navigationOptions","header"],"sources":["C:/Users/44773/Desktop/Assingment/components/Contacts.js"],"sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport React, { Component } from 'react';\r\nimport { Text, View, Button, FlatList, TextInput } from 'react-native';\r\n\r\nclass ContactScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      contacts: [],\r\n      searchQuery: '',\r\n      password: '',\r\n      \r\n    };\r\n  }\r\n\r\n  static navigationOptions = {\r\n    header: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.focusListener = this.props.navigation.addListener('focus', () => {\r\n      this.fetchContacts();\r\n    });\r\n  }\r\n  \r\n\r\n  refreshContactsList = () => {\r\n    this.fetchContacts();\r\n  };\r\n\r\n  handleSearchChange = (searchQuery) => {\r\n    this.setState({ searchQuery });\r\n  };\r\n\r\n  handleSearch = async () => {\r\n    if (this.state.searchQuery) {\r\n      const user = await this.searchUsers(this.state.searchQuery);\r\n      this.setState({ contacts: user ? [user] : [] });\r\n    } else {\r\n      this.fetchContacts();\r\n    }\r\n  };\r\n\r\n  searchUsers = async (searchQuery) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:3333/api/1.0.0/user/${encodeURIComponent(searchQuery)}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-Authorization': await AsyncStorage.getItem('whatsthat_session_token'),\r\n        },\r\n      });\r\n    \r\n      if (response.status === 200) {\r\n        const user = await response.json();\r\n        return user;\r\n      } else if (response.status === 401) {\r\n        throw 'Unauthorised';\r\n      } else {\r\n        throw 'Server Error';\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  async fetchContacts() {\r\n    try {\r\n      const response = await this.GetContacts();\r\n      this.setState({ contacts: response });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  async GetContacts() {\r\n    return fetch('http://localhost:3333/api/1.0.0/contacts', {\r\n      method: 'GET',\r\n      headers: {\r\n        'X-Authorization': await AsyncStorage.getItem('whatsthat_session_token'),\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          return response.json();\r\n        } else if (response.status === 401) {\r\n          throw 'Unauthorised';\r\n        } else {\r\n          throw 'Server Error';\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n\r\n        <TextInput\r\n          value={this.state.searchQuery}\r\n          onChangeText={this.handleSearchChange}\r\n          placeholder=\"Type In The User's ID To Search.\"\r\n          style={{\r\n            padding: 10,\r\n            borderWidth: 2,\r\n            borderRadius: 5,\r\n            margin: 10,\r\n          }}\r\n        />\r\n\r\n        <Button title=\"Search\" onPress={this.handleSearch} />\r\n        \r\n        <Button title=\"Manage Contacts\" onPress={() => this.props.navigation.navigate('ManageContacts', {\r\n  onRefreshContacts: this.refreshContactsList,\r\n})\r\n}/>\r\n\r\n\r\n          \r\n          \r\n\r\n\r\n        <FlatList\r\n          contentContainerStyle={{ flexGrow: 1 }}\r\n          data={this.state.contacts}\r\n          keyExtractor={(item) => item.user_id.toString()}\r\n          renderItem={({ item }) => (\r\n            <View>\r\n              style={{\r\n            padding: 10,\r\n            borderWidth: 2,\r\n            borderRadius: 5,\r\n            margin: 10, }}\r\n          \r\n              <Text>{item.first_name} {item.last_name}</Text>\r\n              <Text>{item.email}</Text>\r\n              <Text>{item.user_id}</Text>\r\n              <Text>{item.password}</Text>\r\n\r\n            \r\n\r\n              \r\n            </View>\r\n          )}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}