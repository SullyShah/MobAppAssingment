{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SendMessageScreen = function (_Component) {\n  _inherits(SendMessageScreen, _Component);\n  var _super = _createSuper(SendMessageScreen);\n  function SendMessageScreen(props) {\n    var _this;\n    _classCallCheck(this, SendMessageScreen);\n    _this = _super.call(this, props);\n    _this.handleMessageChange = function (text) {\n      _this.setState({\n        message: text\n      });\n    };\n    _this.handleSendMessage = function () {\n      _this.SendMessage(_this.state.chatId, _this.state.message);\n      _this.setState({\n        message: ''\n      });\n    };\n    _this.state = {\n      message: '',\n      chat_id: null,\n      error: null\n    };\n    return _this;\n  }\n  _createClass(SendMessageScreen, [{\n    key: \"SendMessage\",\n    value: function () {\n      var _SendMessage = _asyncToGenerator(function* (chatId, message) {\n        try {\n          var response = yield fetch(\"http://localhost:3333/api/1.0.0/chat/\" + chat_id + \"/message\", {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'X-Authorization': yield AsyncStorage.getItem('whatsthat_session_token')\n            },\n            body: JSON.stringify({\n              message: message\n            })\n          });\n          if (response.status === 200) {\n            console.log('Message sent');\n          } else if (response.status === 400) {\n            console.log('Bad Request');\n          } else if (response.status === 401) {\n            console.log('Unauthorised');\n            yield AsyncStorage.removeItem('whatsthat_session_token');\n            yield AsyncStorage.removeItem('whatsthat_user_id');\n            this.props.navigation.navigate('Login');\n          } else if (response.status === 403) {\n            console.log('Forbidden');\n          } else if (response.status === 404) {\n            console.log('Not Found');\n          } else {\n            throw 'Server Error';\n          }\n        } catch (error) {\n          this.setState({\n            error: error\n          });\n        }\n      });\n      function SendMessage(_x, _x2) {\n        return _SendMessage.apply(this, arguments);\n      }\n      return SendMessage;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var message = this.state.message;\n      return _jsxs(View, {\n        children: [_jsx(TextInput, {\n          value: message,\n          onChangeText: this.handleMessageChange,\n          placeholder: \"Type your message here...\"\n        }), _jsx(Button, {\n          title: \"Send Message\",\n          onPress: this.handleSendMessage\n        })]\n      });\n    }\n  }]);\n  return SendMessageScreen;\n}(Component);\nexport default SendMessageScreen;","map":{"version":3,"names":["React","Component","Text","View","TextInput","Button","AsyncStorage","jsx","_jsx","jsxs","_jsxs","SendMessageScreen","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","handleMessageChange","text","setState","message","handleSendMessage","SendMessage","state","chatId","chat_id","error","_createClass","key","value","_SendMessage","_asyncToGenerator","response","fetch","method","headers","getItem","body","JSON","stringify","status","console","log","removeItem","navigation","navigate","_x","_x2","apply","arguments","render","children","onChangeText","placeholder","title","onPress"],"sources":["C:/Users/44773/Desktop/Assingment/components/SendMessage.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Text, View, TextInput, Button, AsyncStorage } from 'react-native';\r\n\r\nclass SendMessageScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      message: '',\r\n      chat_id: null, // Add your chat id here or fetch it from your server\r\n      error: null,\r\n    };\r\n  }\r\n\r\n  async SendMessage(chatId, message) {\r\n    try {\r\n      const response = await fetch(`http://localhost:3333/api/1.0.0/chat/${chat_id}/message`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-Authorization': await AsyncStorage.getItem('whatsthat_session_token'),\r\n        },\r\n        body: JSON.stringify({\r\n          message: message,\r\n        }),\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        console.log('Message sent');\r\n      } else if (response.status === 400) {\r\n        console.log('Bad Request');\r\n      } else if (response.status === 401) {\r\n        console.log('Unauthorised');\r\n        await AsyncStorage.removeItem('whatsthat_session_token');\r\n        await AsyncStorage.removeItem('whatsthat_user_id');\r\n        this.props.navigation.navigate('Login');\r\n      } else if (response.status === 403) {\r\n        console.log('Forbidden');\r\n      } else if (response.status === 404) {\r\n        console.log('Not Found');\r\n      } else {\r\n        throw 'Server Error';\r\n      }\r\n    } catch (error) {\r\n      this.setState({ error: error });\r\n    }\r\n  }\r\n\r\n  handleMessageChange = (text) => {\r\n    this.setState({ message: text });\r\n  };\r\n\r\n  handleSendMessage = () => {\r\n    this.SendMessage(this.state.chatId, this.state.message);\r\n    this.setState({ message: '' }); // Clear the message input\r\n  };\r\n\r\n  render() {\r\n    const { message } = this.state;\r\n\r\n    return (\r\n      <View>\r\n        <TextInput\r\n          value={message}\r\n          onChangeText={this.handleMessageChange}\r\n          placeholder=\"Type your message here...\"\r\n        />\r\n        <Button\r\n          title=\"Send Message\"\r\n          onPress={this.handleSendMessage}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SendMessageScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}