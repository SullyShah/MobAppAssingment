{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar NewChatScreen = function (_Component) {\n  _inherits(NewChatScreen, _Component);\n  var _super = _createSuper(NewChatScreen);\n  function NewChatScreen(props) {\n    var _this;\n    _classCallCheck(this, NewChatScreen);\n    _this = _super.call(this, props);\n    _this.ChatName = function (text) {\n      _this.setState({\n        newChatName: text\n      });\n    };\n    _this.showModal = function (title, message) {\n      _this.setState({\n        modalVisible: true,\n        modalTitle: title,\n        modalMessage: message\n      });\n    };\n    _this.hideModal = function () {\n      _this.setState({\n        modalVisible: false\n      });\n    };\n    _this.startConversation = _asyncToGenerator(function* () {\n      try {\n        var response = yield fetch('http://localhost:3333/api/1.0.0/chat', {\n          method: 'POST',\n          headers: {\n            'X-Authorization': yield AsyncStorage.getItem('whatsthat_session_token'),\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            name: _this.state.newChatName\n          })\n        });\n        if (response.status === 201) {\n          var chatDetails = yield response.json();\n          console.log(\"Chat Details: \", chatDetails);\n          _this.props.navigation.navigate('Chat', {\n            chat_id: chatDetails.id,\n            chatDetails: chatDetails\n          });\n          _this.showModal('Success', 'Chat created');\n          return chatDetails;\n        } else if (response.status === 400) {\n          throw 'Bad Request';\n        } else if (response.status === 401) {\n          throw 'Unauthorised';\n        } else {\n          throw 'Server Error';\n        }\n      } catch (error) {\n        console.log(\"Error in startConversation: \", error);\n        _this.showModal('Error', error.toString());\n      }\n    });\n    _this.createNewChat = _asyncToGenerator(function* () {\n      try {\n        console.log(\"Attempting to start chat...\");\n        yield _this.startConversation();\n      } catch (error) {\n        console.log(\"Failed to start chat: \", error);\n        _this.showModal('Error', error.toString());\n      }\n    });\n    _this.state = {\n      newChatName: '',\n      modalVisible: false,\n      modalMessage: ''\n    };\n    return _this;\n  }\n  _createClass(NewChatScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n        newChatName = _this$state.newChatName,\n        modalVisible = _this$state.modalVisible,\n        modalTitle = _this$state.modalTitle,\n        modalMessage = _this$state.modalMessage;\n      return _jsxs(View, {\n        children: [_jsx(TextInput, {\n          placeholder: \"Enter Chat Name\",\n          value: newChatName,\n          onChangeText: this.ChatName\n        }), _jsx(Button, {\n          title: \"Create Chat\",\n          onPress: this.createNewChat\n        }), _jsx(Modal, {\n          visible: modalVisible,\n          onRequestClose: this.hideModal,\n          transparent: true,\n          children: _jsx(View, {\n            style: styles.modalContainer,\n            children: _jsxs(View, {\n              style: styles.modalContent,\n              children: [_jsx(Text, {\n                style: styles.modalTitle,\n                children: modalTitle\n              }), _jsx(Text, {\n                style: styles.modalMessage,\n                children: modalMessage\n              }), _jsx(Button, {\n                title: \"Close\",\n                onPress: this.hideModal\n              })]\n            })\n          })\n        })]\n      });\n    }\n  }]);\n  return NewChatScreen;\n}(Component);\nvar styles = StyleSheet.create({\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)'\n  },\n  modalContent: {\n    backgroundColor: '#fff',\n    padding: 20,\n    borderRadius: 10,\n    alignItems: 'center'\n  },\n  modalTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  modalMessage: {\n    fontSize: 18,\n    marginBottom: 10\n  }\n});\nexport default NewChatScreen;","map":{"version":3,"names":["React","Component","TextInput","Button","Alert","View","Modal","Text","StyleSheet","AsyncStorage","jsx","_jsx","jsxs","_jsxs","NewChatScreen","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","ChatName","text","setState","newChatName","showModal","title","message","modalVisible","modalTitle","modalMessage","hideModal","startConversation","_asyncToGenerator","response","fetch","method","headers","getItem","body","JSON","stringify","name","state","status","chatDetails","json","console","log","navigation","navigate","chat_id","id","error","toString","createNewChat","_createClass","key","value","render","_this$state","children","placeholder","onChangeText","onPress","visible","onRequestClose","transparent","style","styles","modalContainer","modalContent","create","flex","justifyContent","alignItems","backgroundColor","padding","borderRadius","fontSize","fontWeight","marginBottom"],"sources":["C:/Users/44773/Desktop/Assingment/components/NewChat.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { TextInput, Button, Alert, View, Modal, Text, StyleSheet  } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\n\r\nclass NewChatScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      newChatName: '',\r\n      modalVisible: false,\r\n      modalMessage: '',\r\n    };\r\n  }\r\n\r\n  ChatName = (text) => {\r\n    this.setState({ newChatName: text });\r\n  }  \r\n\r\n  showModal = (title, message) => {\r\n    this.setState({\r\n      modalVisible: true,\r\n      modalTitle: title,\r\n      modalMessage: message,\r\n    });\r\n  };\r\n\r\n  hideModal = () => {\r\n    this.setState({ modalVisible: false });\r\n  };\r\n\r\n\r\n  startConversation = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:3333/api/1.0.0/chat', {\r\n        method: 'POST',\r\n        headers: {\r\n          'X-Authorization': await AsyncStorage.getItem('whatsthat_session_token'),\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({name: this.state.newChatName}),\r\n      });\r\n      if (response.status === 201) {\r\n        const chatDetails = await response.json();\r\n        console.log(\"Chat Details: \", chatDetails);\r\n        this.props.navigation.navigate('Chat', { \r\n          chat_id: chatDetails.id, \r\n          chatDetails: chatDetails  \r\n        });\r\n        this.showModal('Success', 'Chat created');\r\n        return chatDetails;  \r\n      } else if (response.status === 400) {\r\n        throw 'Bad Request';\r\n      } else if (response.status === 401) {\r\n        throw 'Unauthorised';\r\n      } else {\r\n        throw 'Server Error';\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in startConversation: \", error);\r\n      this.showModal('Error', error.toString());\r\n    }\r\n  }\r\n\r\n  createNewChat = async () => {\r\n    try {\r\n      console.log(\"Attempting to start chat...\");\r\n      await this.startConversation();\r\n    } catch (error) {\r\n      console.log(\"Failed to start chat: \", error);\r\n      this.showModal('Error', error.toString());\r\n    }\r\n  };\r\n  \r\n  \r\n  render() {\r\n    const { newChatName, modalVisible, modalTitle, modalMessage } = this.state;\r\n\r\n    return (\r\n      <View>\r\n        <TextInput\r\n          placeholder=\"Enter Chat Name\"\r\n          value={newChatName}\r\n          onChangeText={this.ChatName}\r\n        />\r\n        <Button title=\"Create Chat\" onPress={this.createNewChat} />\r\n        <Modal visible={modalVisible} onRequestClose={this.hideModal} transparent={true}>\r\n  <View style={styles.modalContainer}>\r\n    <View style={styles.modalContent}>\r\n      <Text style={styles.modalTitle}>{modalTitle}</Text>\r\n      <Text style={styles.modalMessage}>{modalMessage}</Text>\r\n      <Button title=\"Close\" onPress={this.hideModal} />\r\n    </View>\r\n  </View>\r\n</Modal>\r\n\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  modalContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n  },\r\n  modalContent: {\r\n    backgroundColor: '#fff',\r\n    padding: 20,\r\n    borderRadius: 10,\r\n    alignItems: 'center',\r\n  },\r\n  modalTitle: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 10,\r\n  },\r\n  modalMessage: {\r\n    fontSize: 18,\r\n    marginBottom: 10,\r\n  },\r\n});\r\n\r\n\r\nexport default NewChatScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}