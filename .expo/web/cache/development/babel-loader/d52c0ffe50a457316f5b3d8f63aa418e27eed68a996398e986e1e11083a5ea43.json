{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AddContactsScreen = function (_Component) {\n  _inherits(AddContactsScreen, _Component);\n  var _super = _createSuper(AddContactsScreen);\n  function AddContactsScreen(props) {\n    var _this;\n    _classCallCheck(this, AddContactsScreen);\n    _this = _super.call(this, props);\n    _this.state = {\n      user_id: ''\n    };\n    return _this;\n  }\n  _createClass(AddContactsScreen, [{\n    key: \"AddUser\",\n    value: function () {\n      var _AddUser = _asyncToGenerator(function* () {\n        try {\n          var response = yield fetch('http://localhost:3333/api/1.0.0/', {\n            method: 'POST',\n            headers: {\n              'Authorization': yield AsyncStorage.getItem('whatsthat_user_id'),\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              user_id: this.state.user_id\n            })\n          });\n          if (response.status === 200) {\n            var contact = yield response.json();\n            this.props.navigation.navigate('Contact', {\n              contact: contact\n            });\n          } else if (response.status === 400) {\n            throw 'You Can\\'t add yourself as a contact';\n          } else if (response.status === 404) {\n            throw 'Unauthorised';\n          } else {\n            throw 'Server Error';\n          }\n        } catch (error) {\n          console.error(error);\n        }\n      });\n      function AddUser() {\n        return _AddUser.apply(this, arguments);\n      }\n      return AddUser;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      return _jsxs(View, {\n        children: [_jsx(Text, {\n          children: \"This is the Add Contacts screen\"\n        }), _jsx(TextInput, {\n          placeholder: \"Enter user_id\",\n          onChangeText: function onChangeText(user_id) {\n            return _this2.setState({\n              user_id: user_id\n            });\n          },\n          value: this.state.user_id\n        }), _jsx(Button, {\n          title: \"Add Contact\",\n          onPress: function onPress() {\n            return _this2.AddUser();\n          }\n        })]\n      });\n    }\n  }]);\n  return AddContactsScreen;\n}(Component);\nexport default AddContactsScreen;","map":{"version":3,"names":["React","Component","Text","View","TextInput","Button","AsyncStorage","jsx","_jsx","jsxs","_jsxs","AddContactsScreen","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","user_id","_createClass","key","value","_AddUser","_asyncToGenerator","response","fetch","method","headers","getItem","body","JSON","stringify","status","contact","json","navigation","navigate","error","console","AddUser","apply","arguments","render","_this2","children","placeholder","onChangeText","setState","title","onPress"],"sources":["C:/Users/44773/Desktop/Assingment/components/AddContact.js"],"sourcesContent":["// AddContactsScreen.js\r\n\r\nimport React, { Component } from 'react';\r\nimport { Text, View, TextInput, Button } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nclass AddContactsScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user_id: '',\r\n    };\r\n  }\r\n\r\n  async AddUser() {\r\n    try {\r\n      const response = await fetch('http://localhost:3333/api/1.0.0/', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': await AsyncStorage.getItem('whatsthat_user_id'),\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          user_id: this.state.user_id,\r\n        }),\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        const contact = await response.json();\r\n        this.props.navigation.navigate('Contact', { contact });\r\n      } else if (response.status === 400) {\r\n        throw 'You Can\\'t add yourself as a contact';\r\n      } else if (response.status === 404) {\r\n        throw 'Unauthorised';\r\n      } else {\r\n        throw 'Server Error';\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View>\r\n        <Text>This is the Add Contacts screen</Text>\r\n        <TextInput\r\n          placeholder=\"Enter user_id\"\r\n          onChangeText={(user_id) => this.setState({ user_id })}\r\n          value={this.state.user_id}\r\n        />\r\n        <Button title=\"Add Contact\" onPress={() => this.AddUser()} />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContactsScreen;\r\n"],"mappings":";;;;;;;;AAEA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,MAAA;AAEzC,OAAOC,YAAY,MAAM,2CAA2C;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,IAE/DC,iBAAiB,aAAAC,UAAA;EAAAC,SAAA,CAAAF,iBAAA,EAAAC,UAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,iBAAA;EACrB,SAAAA,kBAAYK,KAAK,EAAE;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAP,iBAAA;IACjBM,KAAA,GAAAH,MAAA,CAAAK,IAAA,OAAMH,KAAK;IACXC,KAAA,CAAKG,KAAK,GAAG;MACXC,OAAO,EAAE;IACX,CAAC;IAAC,OAAAJ,KAAA;EACJ;EAACK,YAAA,CAAAX,iBAAA;IAAAY,GAAA;IAAAC,KAAA;MAAA,IAAAC,QAAA,GAAAC,iBAAA,CAED,aAAgB;QACd,IAAI;UACF,IAAMC,QAAQ,SAASC,KAAK,CAAC,kCAAkC,EAAE;YAC/DC,MAAM,EAAE,MAAM;YACdC,OAAO,EAAE;cACP,eAAe,QAAQxB,YAAY,CAACyB,OAAO,CAAC,mBAAmB,CAAC;cAChE,cAAc,EAAE;YAClB,CAAC;YACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;cACnBb,OAAO,EAAE,IAAI,CAACD,KAAK,CAACC;YACtB,CAAC;UACH,CAAC,CAAC;UAEF,IAAIM,QAAQ,CAACQ,MAAM,KAAK,GAAG,EAAE;YAC3B,IAAMC,OAAO,SAAST,QAAQ,CAACU,IAAI,EAAE;YACrC,IAAI,CAACrB,KAAK,CAACsB,UAAU,CAACC,QAAQ,CAAC,SAAS,EAAE;cAAEH,OAAO,EAAPA;YAAQ,CAAC,CAAC;UACxD,CAAC,MAAM,IAAIT,QAAQ,CAACQ,MAAM,KAAK,GAAG,EAAE;YAClC,MAAM,sCAAsC;UAC9C,CAAC,MAAM,IAAIR,QAAQ,CAACQ,MAAM,KAAK,GAAG,EAAE;YAClC,MAAM,cAAc;UACtB,CAAC,MAAM;YACL,MAAM,cAAc;UACtB;QACF,CAAC,CAAC,OAAOK,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACtB;MACF,CAAC;MAAA,SAAAE,QAAA;QAAA,OAAAjB,QAAA,CAAAkB,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAF,OAAA;IAAA;EAAA;IAAAnB,GAAA;IAAAC,KAAA,EAED,SAAAqB,OAAA,EAAS;MAAA,IAAAC,MAAA;MACP,OACEpC,KAAA,CAACP,IAAI;QAAA4C,QAAA,GACHvC,IAAA,CAACN,IAAI;UAAA6C,QAAA,EAAC;QAA+B,EAAO,EAC5CvC,IAAA,CAACJ,SAAS;UACR4C,WAAW,EAAC,eAAe;UAC3BC,YAAY,EAAE,SAAAA,aAAC5B,OAAO;YAAA,OAAKyB,MAAI,CAACI,QAAQ,CAAC;cAAE7B,OAAO,EAAPA;YAAQ,CAAC,CAAC;UAAA,CAAC;UACtDG,KAAK,EAAE,IAAI,CAACJ,KAAK,CAACC;QAAQ,EAC1B,EACFb,IAAA,CAACH,MAAM;UAAC8C,KAAK,EAAC,aAAa;UAACC,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAMN,MAAI,CAACJ,OAAO,EAAE;UAAA;QAAC,EAAG;MAAA,EACxD;IAEX;EAAC;EAAA,OAAA/B,iBAAA;AAAA,EAhD6BV,SAAS;AAmDzC,eAAeU,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}