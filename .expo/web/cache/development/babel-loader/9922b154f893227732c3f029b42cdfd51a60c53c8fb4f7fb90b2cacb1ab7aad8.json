{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SignupScreen = function (_Component) {\n  _inherits(SignupScreen, _Component);\n  var _super = _createSuper(SignupScreen);\n  function SignupScreen(props) {\n    var _this;\n    _classCallCheck(this, SignupScreen);\n    _this = _super.call(this, props);\n    _this.validatePassword = function () {\n      var password = _this.state.password;\n      var passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/;\n      if (!passwordRegex.test(password)) {\n        _this.setState({\n          passwordError: 'Password must contain at least 8 characters, one uppercase letter, one lowercase letter, and one number.'\n        });\n        return false;\n      } else {\n        _this.setState({\n          passwordError: null\n        });\n        return true;\n      }\n    };\n    _this.addUserData = function () {\n      var isValidPassword = _this.validatePassword();\n      if (isValidPassword) {\n        return fetch(\"http://localhost:3333/list\", {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            \"user_id\": _this.state.user_id,\n            \"first_name\": _this.state.first_name,\n            \"last_name\": _this.state.last_name,\n            \"email\": _this.state.email,\n            \"password\": _this.state.password\n          })\n        }).then(function (response) {\n          if (response.status === 201) {\n            return response.json();\n          } else if (response.status === 400) {\n            throw \"Bad Request\";\n          } else {\n            throw \"Server Error\";\n          }\n        }).then(function (rJson) {\n          console.log(rJson);\n          _this.setState({\n            \"error\": \"User Added Successfully\"\n          });\n          _this.setState({\n            \"Submitted\": false\n          });\n          _this.props.navigation.navigate(\"Login\");\n        }).catch(function (error) {\n          _this.setState({\n            \"error\": error\n          });\n          _this.setState({\n            \"Submitted\": false\n          });\n        });\n      }\n    };\n    _this.state = {\n      user_id: '',\n      first_name: '',\n      last_name: '',\n      email: '',\n      password: '',\n      isLoading: true\n    };\n    return _this;\n  }\n  _createClass(SignupScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var navigation = this.props.navigation;\n      return _jsxs(View, {\n        children: [_jsx(Text, {\n          children: \" To Register enter your details below\"\n        }), _jsx(Text, {\n          for: \"first_name\",\n          children: _jsx(\"b\", {})\n        }), _jsx(TextInput, {\n          type: \"text\",\n          placeholder: \"First Name:\",\n          name: \"Fname\",\n          required: true\n        }), _jsx(Text, {\n          for: \"last_name\",\n          children: _jsx(\"b\", {})\n        }), _jsx(TextInput, {\n          type: \"text\",\n          placeholder: \"Last Name:\",\n          name: \"Lname\",\n          required: true\n        }), _jsx(Text, {\n          for: \"email\",\n          children: _jsx(\"b\", {})\n        }), _jsx(TextInput, {\n          type: \"text\",\n          placeholder: \"Enter Your Email:\",\n          name: \"Email\",\n          required: true\n        }), _jsx(Text, {\n          for: \"Password\",\n          children: _jsx(\"b\", {})\n        }), _jsx(TextInput, {\n          type: \"text\",\n          placeholder: \"Enter A Password:\",\n          name: \"Password\",\n          required: true\n        }), _jsx(Text, {\n          for: \"Password\",\n          children: _jsx(\"b\", {})\n        }), _jsx(TextInput, {\n          type: \"text\",\n          placeholder: \"Enter Your Password Again:\",\n          name: \"Password\",\n          required: true\n        }), _jsx(Button, {\n          title: \"Register\",\n          onPress: function onPress() {\n            return _this2.addUserData();\n          }\n        }), _jsx(Button, {\n          title: \"Back\",\n          onPress: function onPress() {\n            return _this2.props.navigation.goBack();\n          }\n        })]\n      });\n    }\n  }]);\n  return SignupScreen;\n}(Component);\nSignupScreen.navigationOptions = {\n  header: null\n};\nexport default SignupScreen;","map":{"version":3,"names":["React","Component","Text","View","Button","TextInput","jsx","_jsx","jsxs","_jsxs","SignupScreen","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","validatePassword","password","state","passwordRegex","test","setState","passwordError","addUserData","isValidPassword","fetch","method","headers","body","JSON","stringify","user_id","first_name","last_name","email","then","response","status","json","rJson","console","log","navigation","navigate","catch","error","isLoading","_createClass","key","value","componentDidMount","getData","render","_this2","children","for","type","placeholder","name","required","title","onPress","goBack","navigationOptions","header"],"sources":["C:/Users/44773/Desktop/Assingment/components/Signup.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Text, View, Button, TextInput } from 'react-native';\r\n\r\n\r\nclass SignupScreen extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user_id: '',\r\n      first_name: '',\r\n      last_name: '',\r\n      email: '',\r\n      password: '',\r\n      isLoading: true,\r\n    };\r\n\r\n  }\r\n\r\n  static navigationOptions = {\r\n    header: null\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getData();\r\n  }\r\n\r\n  validatePassword = () => {\r\n    const { password } = this.state;\r\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/;\r\n    if (!passwordRegex.test(password)) {\r\n      this.setState({ passwordError: 'Password must contain at least 8 characters, one uppercase letter, one lowercase letter, and one number.' });\r\n      return false;\r\n    } else {\r\n      this.setState({ passwordError: null });\r\n      return true;\r\n    }\r\n  }\r\n\r\n  addUserData = () => {\r\n    const isValidPassword = this.validatePassword();\r\n  \r\n    if (isValidPassword) {\r\n      return fetch(\"http://localhost:3333/list\",\r\n        {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({\r\n            \"user_id\": this.state.user_id,\r\n            \"first_name\": this.state.first_name,\r\n            \"last_name\": this.state.last_name,\r\n            \"email\": this.state.email,\r\n            \"password\": this.state.password\r\n          })\r\n        })\r\n        .then((response) => {\r\n          if (response.status === 201) {\r\n            return response.json();\r\n          } else if (response.status === 400) {\r\n            throw \"Bad Request\"\r\n          } else {\r\n            throw \"Server Error\"\r\n          }\r\n        })\r\n        .then((rJson) => {\r\n          console.log(rJson)\r\n          this.setState({\"error\": \"User Added Successfully\"})\r\n          this.setState({\"Submitted\": false});\r\n          this.props.navigation.navigate(\"Login\")\r\n        })\r\n        .catch((error) => {\r\n          this.setState({\"error\": error})\r\n          this.setState({\"Submitted\": false});\r\n        });\r\n    }\r\n  }\r\n\r\n  render(){\r\n\r\n    const navigation = this.props.navigation;\r\n    return(\r\n        <View>\r\n          <Text> To Register enter your details below</Text>\r\n\r\n\r\n        <Text for=\"first_name\"><b></b></Text>\r\n        <TextInput type=\"text\" placeholder=\"First Name:\" name=\"Fname\" required />\r\n\r\n\r\n        <Text for=\"last_name\"><b></b></Text>\r\n        <TextInput type=\"text\" placeholder=\"Last Name:\" name=\"Lname\" required />\r\n\r\n        <Text for=\"email\"><b></b></Text>\r\n        <TextInput type=\"text\" placeholder=\"Enter Your Email:\" name=\"Email\" required />\r\n\r\n        <Text for=\"Password\"><b></b></Text>\r\n        <TextInput type=\"text\" placeholder=\"Enter A Password:\" name=\"Password\" required />\r\n\r\n        <Text for=\"Password\"><b></b></Text>\r\n        <TextInput type=\"text\" placeholder=\"Enter Your Password Again:\" name=\"Password\" required />\r\n\r\n        <Button\r\n                title=\"Register\"\r\n                onPress={() => this.addUserData()} />\r\n\r\n          <Button \r\n            title='Back'\r\n            onPress={() => this.props.navigation.goBack()} />\r\n\r\n        \r\n        </View>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignupScreen;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}