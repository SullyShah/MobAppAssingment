{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nvar ChatScreen = function (_Component) {\n  _inherits(ChatScreen, _Component);\n  var _super = _createSuper(ChatScreen);\n  function ChatScreen(props) {\n    var _this;\n    _classCallCheck(this, ChatScreen);\n    _this = _super.call(this, props);\n    _this.state = {\n      chats: [],\n      chatDetails: null,\n      messages: [],\n      error: null,\n      submitted: false,\n      newChatUserId: '',\n      newMessage: ''\n    };\n    return _this;\n  }\n  _createClass(ChatScreen, [{\n    key: \"AddUserToChat\",\n    value: function () {\n      var _AddUserToChat = _asyncToGenerator(function* (chatId, userId) {\n        try {\n          var response = yield fetch('http://localhost:3333/api/1.0.0/chats/${chatId}/users/${userId}', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'X-Authorisation': yield AsyncStorage.getItem('whatsthat_session_token')\n            }\n          });\n          if (response.status === 200) {\n            var chatDetails = yield response.json();\n            this.setState({\n              chatDetails: chatDetails\n            });\n          } else if (response.status === 400) {\n            console.log('Bad Request');\n          } else if (response.status === 401) {\n            console.log('Unathorised');\n            yield AsyncStorage.removeItem('whatsthat_session_token');\n            yield AsyncStorage.removeItem('whatsthat_user_id');\n            this.props.navigation.navigate('Login');\n          } else if (response.status === 403) {\n            console.log('Forbidden');\n          } else if (response.status === 404) {\n            console.log('Not Found');\n          } else {\n            throw 'Server Error';\n          }\n        } catch (error) {\n          this.setState({\n            error: error\n          });\n        }\n      });\n      function AddUserToChat(_x, _x2) {\n        return _AddUserToChat.apply(this, arguments);\n      }\n      return AddUserToChat;\n    }()\n  }]);\n  return ChatScreen;\n}(Component);\nexport default AddToChatScreen;","map":{"version":3,"names":["React","Component","Text","View","TextInput","Button","FlatList","AsyncStorage","ChatScreen","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","chats","chatDetails","messages","error","submitted","newChatUserId","newMessage","_createClass","key","value","_AddUserToChat","_asyncToGenerator","chatId","userId","response","fetch","method","headers","getItem","status","json","setState","console","log","removeItem","navigation","navigate","AddUserToChat","_x","_x2","apply","arguments","AddToChatScreen"],"sources":["C:/Users/44773/Desktop/Assingment/components/AddToChat.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Text, View, TextInput, Button, FlatList, AsyncStorage } from 'react-native';\r\n\r\nclass ChatScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      chats: [],\r\n      chatDetails: null,\r\n      messages: [],\r\n      error: null,\r\n      submitted: false,\r\n      newChatUserId: '',\r\n      newMessage: '',\r\n    };\r\n  }\r\n\r\n  async AddUserToChat(chatId, userId) {\r\n    try {\r\n      const response = await fetch('http://localhost:3333/api/1.0.0/chats/${chatId}/users/${userId}', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-Authorisation': await AsyncStorage.getItem('whatsthat_session_token'),\r\n        },\r\n      });\r\n      \r\n      if (response.status === 200) {\r\n          const chatDetails = await response.json();\r\n          this.setState({ chatDetails: chatDetails });\r\n      } else if (response.status === 400) {\r\n          console.log('Bad Request');\r\n      } else if (response.status === 401) {\r\n          console.log('Unathorised');\r\n          await AsyncStorage.removeItem('whatsthat_session_token');\r\n          await AsyncStorage.removeItem('whatsthat_user_id');\r\n          this.props.navigation.navigate('Login');\r\n      } else if (response.status === 403) {\r\n          console.log('Forbidden');\r\n      } else if (response.status === 404) {\r\n          console.log('Not Found');\r\n      } else {\r\n          throw 'Server Error';\r\n      }\r\n    } catch (error) {\r\n      this.setState({ error: error });\r\n    }\r\n  }\r\n  \r\n\r\n}\r\n\r\nexport default AddToChatScreen;"],"mappings":";;;;;;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,QAAA;AAAA,SACSC,YAAY;AAAA,IAExDC,UAAU,aAAAC,UAAA;EAAAC,SAAA,CAAAF,UAAA,EAAAC,UAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,UAAA;EACd,SAAAA,WAAYK,KAAK,EAAE;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAP,UAAA;IACjBM,KAAA,GAAAH,MAAA,CAAAK,IAAA,OAAMH,KAAK;IACXC,KAAA,CAAKG,KAAK,GAAG;MACXC,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE,IAAI;MACjBC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,IAAI;MACXC,SAAS,EAAE,KAAK;MAChBC,aAAa,EAAE,EAAE;MACjBC,UAAU,EAAE;IACd,CAAC;IAAC,OAAAV,KAAA;EACJ;EAACW,YAAA,CAAAjB,UAAA;IAAAkB,GAAA;IAAAC,KAAA;MAAA,IAAAC,cAAA,GAAAC,iBAAA,CAED,WAAoBC,MAAM,EAAEC,MAAM,EAAE;QAClC,IAAI;UACF,IAAMC,QAAQ,SAASC,KAAK,CAAC,iEAAiE,EAAE;YAC9FC,MAAM,EAAE,MAAM;YACdC,OAAO,EAAE;cACP,cAAc,EAAE,kBAAkB;cAClC,iBAAiB,QAAQ5B,YAAY,CAAC6B,OAAO,CAAC,yBAAyB;YACzE;UACF,CAAC,CAAC;UAEF,IAAIJ,QAAQ,CAACK,MAAM,KAAK,GAAG,EAAE;YACzB,IAAMlB,WAAW,SAASa,QAAQ,CAACM,IAAI,EAAE;YACzC,IAAI,CAACC,QAAQ,CAAC;cAAEpB,WAAW,EAAEA;YAAY,CAAC,CAAC;UAC/C,CAAC,MAAM,IAAIa,QAAQ,CAACK,MAAM,KAAK,GAAG,EAAE;YAChCG,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;UAC9B,CAAC,MAAM,IAAIT,QAAQ,CAACK,MAAM,KAAK,GAAG,EAAE;YAChCG,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;YAC1B,MAAMlC,YAAY,CAACmC,UAAU,CAAC,yBAAyB,CAAC;YACxD,MAAMnC,YAAY,CAACmC,UAAU,CAAC,mBAAmB,CAAC;YAClD,IAAI,CAAC7B,KAAK,CAAC8B,UAAU,CAACC,QAAQ,CAAC,OAAO,CAAC;UAC3C,CAAC,MAAM,IAAIZ,QAAQ,CAACK,MAAM,KAAK,GAAG,EAAE;YAChCG,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;UAC5B,CAAC,MAAM,IAAIT,QAAQ,CAACK,MAAM,KAAK,GAAG,EAAE;YAChCG,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;UAC5B,CAAC,MAAM;YACH,MAAM,cAAc;UACxB;QACF,CAAC,CAAC,OAAOpB,KAAK,EAAE;UACd,IAAI,CAACkB,QAAQ,CAAC;YAAElB,KAAK,EAAEA;UAAM,CAAC,CAAC;QACjC;MACF,CAAC;MAAA,SAAAwB,cAAAC,EAAA,EAAAC,GAAA;QAAA,OAAAnB,cAAA,CAAAoB,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAJ,aAAA;IAAA;EAAA;EAAA,OAAArC,UAAA;AAAA,EA5CsBP,SAAS;AAiDlC,eAAeiD,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}