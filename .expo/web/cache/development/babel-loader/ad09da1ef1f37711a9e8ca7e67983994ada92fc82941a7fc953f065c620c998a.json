{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar NewChatScreen = function (_Component) {\n  _inherits(NewChatScreen, _Component);\n  var _super = _createSuper(NewChatScreen);\n  function NewChatScreen(props) {\n    var _this;\n    _classCallCheck(this, NewChatScreen);\n    _this = _super.call(this, props);\n    _this.handleChatNameChange = function (text) {\n      _this.setState({\n        chatName: text\n      });\n    };\n    _this.handleSearchChange = function (searchQuery) {\n      _this.setState({\n        searchQuery: searchQuery\n      });\n    };\n    _this.refreshContactsList = function () {\n      _this.fetchContacts();\n    };\n    _this.handleSearch = _asyncToGenerator(function* () {\n      if (_this.state.searchQuery) {\n        var user = yield _this.searchUsers(_this.state.searchQuery);\n        _this.setState({\n          contacts: user ? [user] : []\n        });\n      } else {\n        _this.fetchContacts();\n      }\n    });\n    _this.searchUsers = function () {\n      var _ref2 = _asyncToGenerator(function* (searchQuery) {\n        try {\n          var response = yield fetch(\"http://localhost:3333/api/1.0.0/user/\" + encodeURIComponent(searchQuery), {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json',\n              'X-Authorization': yield AsyncStorage.getItem('whatsthat_session_token')\n            }\n          });\n          if (response.status === 200) {\n            var user = yield response.json();\n            return user;\n          } else if (response.status === 401) {\n            throw 'Unauthorised';\n          } else {\n            throw 'Server Error';\n          }\n        } catch (error) {\n          console.error(error);\n        }\n      });\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    _this.fetchContacts = _asyncToGenerator(function* () {\n      try {\n        var response = yield _this.getContacts();\n        _this.setState({\n          contacts: response\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    });\n    _this.getContacts = _asyncToGenerator(function* () {\n      try {\n        var token = yield AsyncStorage.getItem('whatsthat_session_token');\n        var response = yield fetch('http://localhost:3333/api/1.0.0/contacts', {\n          method: 'GET',\n          headers: {\n            'X-Authorization': yield AsyncStorage.getItem('whatsthat_session_token')\n          }\n        });\n        if (response.status === 200) {\n          return response.json();\n        } else if (response.status === 401) {\n          throw 'Unauthorised';\n        } else {\n          throw 'Server Error';\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    });\n    _this.addToChat = function (contact) {\n      _this.setState(function (prevState) {\n        return {\n          chatParticipants: [].concat(_toConsumableArray(prevState.chatParticipants), [contact])\n        };\n      });\n    };\n    _this.createNewChat = _asyncToGenerator(function* () {\n      var _this$state = _this.state,\n        chatName = _this$state.chatName,\n        chatParticipants = _this$state.chatParticipants;\n      if (chatName && chatParticipants.length > 0) {\n        try {\n          yield createChatOnServer(chatName, chatParticipants);\n          Alert.alert('Success', 'New chat created successfully');\n        } catch (error) {\n          Alert.alert('Error', error.toString());\n        }\n      } else {\n        Alert.alert('Error', 'Please input chat name and add at least one participant');\n      }\n    });\n    _this.state = {\n      chatName: '',\n      chatParticipants: [],\n      searchQuery: '',\n      searchResults: []\n    };\n    return _this;\n  }\n  _createClass(NewChatScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n      this.focusListener = this.props.navigation.addListener('focus', function () {\n        _this2.fetchContacts();\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      var _this$state2 = this.state,\n        chatName = _this$state2.chatName,\n        searchQuery = _this$state2.searchQuery,\n        searchResults = _this$state2.searchResults,\n        chatParticipants = _this$state2.chatParticipants;\n      return _jsxs(View, {\n        children: [_jsx(TextInput, {\n          placeholder: \"Chat name\",\n          value: chatName,\n          onChangeText: this.handleChatNameChange\n        }), _jsx(TextInput, {\n          placeholder: \"Search contacts\",\n          value: searchQuery,\n          onChangeText: this.handleSearchChange\n        }), _jsx(FlatList, {\n          data: searchResults,\n          renderItem: function renderItem(_ref6) {\n            var item = _ref6.item;\n            return _jsxs(View, {\n              children: [_jsxs(Text, {\n                children: [item.name, \" (\", item.userId, \")\"]\n              }), _jsx(Button, {\n                title: \"Add to chat\",\n                onPress: function onPress() {\n                  return _this3.addToChat(item);\n                }\n              })]\n            });\n          },\n          keyExtractor: function keyExtractor(item) {\n            return item.userId;\n          }\n        }), _jsx(Text, {\n          children: \"Participants:\"\n        }), _jsx(FlatList, {\n          data: chatParticipants,\n          renderItem: function renderItem(_ref7) {\n            var item = _ref7.item;\n            return _jsx(Text, {\n              children: item.name\n            });\n          },\n          keyExtractor: function keyExtractor(item) {\n            return item.userId;\n          }\n        }), _jsx(Button, {\n          title: \"Create Chat\",\n          onPress: this.createNewChat\n        })]\n      });\n    }\n  }]);\n  return NewChatScreen;\n}(Component);\nexport default NewChatScreen;","map":{"version":3,"names":["React","Component","Text","View","TextInput","Button","FlatList","TouchableOpacity","AsyncStorage","jsx","_jsx","jsxs","_jsxs","NewChatScreen","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","handleChatNameChange","text","setState","chatName","handleSearchChange","searchQuery","refreshContactsList","fetchContacts","handleSearch","_asyncToGenerator","state","user","searchUsers","contacts","_ref2","response","fetch","encodeURIComponent","method","headers","getItem","status","json","error","console","_x","apply","arguments","getContacts","token","addToChat","contact","prevState","chatParticipants","concat","_toConsumableArray","createNewChat","_this$state","length","createChatOnServer","Alert","alert","toString","searchResults","_createClass","key","value","componentDidMount","_this2","focusListener","navigation","addListener","render","_this3","_this$state2","children","placeholder","onChangeText","data","renderItem","_ref6","item","name","userId","title","onPress","keyExtractor","_ref7"],"sources":["C:/Users/44773/Desktop/Assingment/components/NewChat.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Text, View, TextInput, Button, FlatList, TouchableOpacity } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nclass NewChatScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      chatName: '',\r\n      chatParticipants: [],\r\n      searchQuery: '',\r\n      searchResults: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.focusListener = this.props.navigation.addListener('focus', () => {\r\n      this.fetchContacts();\r\n    });\r\n  }\r\n\r\n  handleChatNameChange = (text) => {\r\n    this.setState({ chatName: text });\r\n  }\r\n\r\n  handleSearchChange = (searchQuery) => {\r\n    this.setState({ searchQuery });\r\n  };\r\n  \r\n  refreshContactsList = () => {\r\n    this.fetchContacts();\r\n  };\r\n\r\n\r\n  handleSearch = async () => {\r\n    if (this.state.searchQuery) {\r\n      const user = await this.searchUsers(this.state.searchQuery);\r\n      this.setState({ contacts: user ? [user] : [] });\r\n    } else {\r\n      this.fetchContacts();\r\n    }\r\n  };\r\n  searchUsers = async (searchQuery) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:3333/api/1.0.0/user/${encodeURIComponent(searchQuery)}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-Authorization': await AsyncStorage.getItem('whatsthat_session_token'),\r\n        },\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        const user = await response.json();\r\n        return user;\r\n      } else if (response.status === 401) {\r\n        throw 'Unauthorised';\r\n      } else {\r\n        throw 'Server Error';\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  fetchContacts = async () => {\r\n    try {\r\n      const response = await this.getContacts();\r\n      this.setState({ contacts: response });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  getContacts = async () => {\r\n    try {\r\n      const token = await AsyncStorage.getItem('whatsthat_session_token');\r\n      const response = await fetch('http://localhost:3333/api/1.0.0/contacts', {\r\n        method: 'GET',\r\n        headers: {\r\n          'X-Authorization': await AsyncStorage.getItem('whatsthat_session_token'),\r\n        },\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        return response.json();\r\n      } else if (response.status === 401) {\r\n        throw 'Unauthorised';\r\n      } else {\r\n        throw 'Server Error';\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n\r\n  addToChat = (contact) => {\r\n    this.setState(prevState => ({ chatParticipants: [...prevState.chatParticipants, contact] }));\r\n  }\r\n\r\n  createNewChat = async () => {\r\n    const { chatName, chatParticipants } = this.state;\r\n\r\n    if (chatName && chatParticipants.length > 0) {\r\n      try {\r\n        // Here, add code to create the chat on the server\r\n        // This is a placeholder and should be replaced with actual server request\r\n        await createChatOnServer(chatName, chatParticipants);\r\n        Alert.alert('Success', 'New chat created successfully');\r\n      } catch (error) {\r\n        Alert.alert('Error', error.toString());\r\n      }\r\n    } else {\r\n      Alert.alert('Error', 'Please input chat name and add at least one participant');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { chatName, searchQuery, searchResults, chatParticipants } = this.state;\r\n\r\n    return (\r\n      <View>\r\n        <TextInput\r\n          placeholder=\"Chat name\"\r\n          value={chatName}\r\n          onChangeText={this.handleChatNameChange}\r\n        />\r\n\r\n        <TextInput\r\n          placeholder=\"Search contacts\"\r\n          value={searchQuery}\r\n          onChangeText={this.handleSearchChange}\r\n        />\r\n\r\n        <FlatList\r\n          data={searchResults}\r\n          renderItem={({ item }) => (\r\n            <View>\r\n              <Text>{item.name} ({item.userId})</Text>\r\n              <Button title=\"Add to chat\" onPress={() => this.addToChat(item)} />\r\n            </View>\r\n          )}\r\n          keyExtractor={(item) => item.userId}\r\n        />\r\n\r\n        <Text>Participants:</Text>\r\n        <FlatList\r\n          data={chatParticipants}\r\n          renderItem={({ item }) => <Text>{item.name}</Text>}\r\n          keyExtractor={(item) => item.userId}\r\n        />\r\n\r\n        <Button title=\"Create Chat\" onPress={this.createNewChat} />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewChatScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}