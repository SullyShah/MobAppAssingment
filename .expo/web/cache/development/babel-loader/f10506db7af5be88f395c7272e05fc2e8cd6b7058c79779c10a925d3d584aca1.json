{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nvar UpdateChatScreen = function (_Component) {\n  _inherits(UpdateChatScreen, _Component);\n  var _super = _createSuper(UpdateChatScreen);\n  function UpdateChatScreen(props) {\n    var _this;\n    _classCallCheck(this, UpdateChatScreen);\n    _this = _super.call(this, props);\n    _this.state = {\n      chats: [],\n      chatDetails: null,\n      messages: [],\n      error: null,\n      submitted: false,\n      newChatUserId: '',\n      newMessage: ''\n    };\n    return _this;\n  }\n  _createClass(UpdateChatScreen, [{\n    key: \"UpdateChatInformation\",\n    value: function () {\n      var _UpdateChatInformation = _asyncToGenerator(function* (chat_id, chatData) {\n        try {\n          var response = yield fetch('http://localhost:3333/api/1.0.0/chats/${chatId}', {\n            method: 'PATCH',\n            headers: {\n              'Content-Type': 'application/json',\n              'X-Authorization': yield AsyncStorage.getItem('whatsthat_session_token')\n            },\n            body: JSON.stringify(chatData)\n          });\n          if (response.status === 200) {\n            var chatDetails = yield response.json();\n            this.setState({\n              chatDetails: chatDetails\n            });\n          } else if (response.status === 400) {\n            console.log('Bad Request');\n          } else if (response.status === 401) {\n            console.log('Unathorised');\n            yield AsyncStorage.removeItem('whatsthat_session_token');\n            yield AsyncStorage.removeItem('whatsthat_user_id');\n            this.props.navigation.navigate('Login');\n          } else if (response.status === 403) {\n            console.log('Forbidden');\n          } else if (response.status === 404) {\n            console.log('Not Found');\n          } else {\n            throw 'Something Went Wrong';\n          }\n        } catch (error) {\n          this.setState({\n            error: error\n          });\n        }\n      });\n      function UpdateChatInformation(_x, _x2) {\n        return _UpdateChatInformation.apply(this, arguments);\n      }\n      return UpdateChatInformation;\n    }()\n  }]);\n  return UpdateChatScreen;\n}(Component);\nexport default UpdateChatScreen;","map":{"version":3,"names":["React","Component","Text","View","TextInput","Button","FlatList","AsyncStorage","UpdateChatScreen","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","chats","chatDetails","messages","error","submitted","newChatUserId","newMessage","_createClass","key","value","_UpdateChatInformation","_asyncToGenerator","chat_id","chatData","response","fetch","method","headers","getItem","body","JSON","stringify","status","json","setState","console","log","removeItem","navigation","navigate","UpdateChatInformation","_x","_x2","apply","arguments"],"sources":["C:/Users/44773/Desktop/Assingment/components/UpdateChat.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Text, View, TextInput, Button, FlatList, AsyncStorage } from 'react-native';\r\n\r\nclass UpdateChatScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      chats: [],\r\n      chatDetails: null,\r\n      messages: [],\r\n      error: null,\r\n      submitted: false,\r\n      newChatUserId: '',\r\n      newMessage: '',\r\n    };\r\n  }\r\n\r\n\r\n\r\nasync UpdateChatInformation(chat_id, chatData) {\r\n    try {\r\n      const response = await fetch('http://localhost:3333/api/1.0.0/chats/${chatId}', {\r\n        method: 'PATCH',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-Authorization': await AsyncStorage.getItem('whatsthat_session_token'),\r\n        },\r\n        body: JSON.stringify(chatData),\r\n      });\r\n  \r\n      if (response.status === 200) {\r\n        const chatDetails = await response.json();\r\n        this.setState({ chatDetails: chatDetails });\r\n    } else if (response.status === 400) {\r\n        console.log('Bad Request');\r\n      } else if (response.status === 401) {\r\n        console.log('Unathorised');\r\n        await AsyncStorage.removeItem('whatsthat_session_token');\r\n        await AsyncStorage.removeItem('whatsthat_user_id');\r\n        this.props.navigation.navigate('Login');\r\n      } else if (response.status === 403) {\r\n        console.log('Forbidden');\r\n      } else if (response.status === 404) {\r\n        console.log('Not Found');\r\n      } else {\r\n        throw 'Something Went Wrong';\r\n      }\r\n    } catch (error) {\r\n      this.setState({ error: error });\r\n    }\r\n  }\r\n}\r\n\r\nexport default UpdateChatScreen;"],"mappings":";;;;;;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,QAAA;AAAA,SACSC,YAAY;AAAA,IAExDC,gBAAgB,aAAAC,UAAA;EAAAC,SAAA,CAAAF,gBAAA,EAAAC,UAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,gBAAA;EACpB,SAAAA,iBAAYK,KAAK,EAAE;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAP,gBAAA;IACjBM,KAAA,GAAAH,MAAA,CAAAK,IAAA,OAAMH,KAAK;IACXC,KAAA,CAAKG,KAAK,GAAG;MACXC,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE,IAAI;MACjBC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,IAAI;MACXC,SAAS,EAAE,KAAK;MAChBC,aAAa,EAAE,EAAE;MACjBC,UAAU,EAAE;IACd,CAAC;IAAC,OAAAV,KAAA;EACJ;EAACW,YAAA,CAAAjB,gBAAA;IAAAkB,GAAA;IAAAC,KAAA;MAAA,IAAAC,sBAAA,GAAAC,iBAAA,CAIH,WAA4BC,OAAO,EAAEC,QAAQ,EAAE;QAC3C,IAAI;UACF,IAAMC,QAAQ,SAASC,KAAK,CAAC,iDAAiD,EAAE;YAC9EC,MAAM,EAAE,OAAO;YACfC,OAAO,EAAE;cACP,cAAc,EAAE,kBAAkB;cAClC,iBAAiB,QAAQ5B,YAAY,CAAC6B,OAAO,CAAC,yBAAyB;YACzE,CAAC;YACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,QAAQ;UAC/B,CAAC,CAAC;UAEF,IAAIC,QAAQ,CAACQ,MAAM,KAAK,GAAG,EAAE;YAC3B,IAAMrB,WAAW,SAASa,QAAQ,CAACS,IAAI,EAAE;YACzC,IAAI,CAACC,QAAQ,CAAC;cAAEvB,WAAW,EAAEA;YAAY,CAAC,CAAC;UAC/C,CAAC,MAAM,IAAIa,QAAQ,CAACQ,MAAM,KAAK,GAAG,EAAE;YAChCG,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;UAC5B,CAAC,MAAM,IAAIZ,QAAQ,CAACQ,MAAM,KAAK,GAAG,EAAE;YAClCG,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;YAC1B,MAAMrC,YAAY,CAACsC,UAAU,CAAC,yBAAyB,CAAC;YACxD,MAAMtC,YAAY,CAACsC,UAAU,CAAC,mBAAmB,CAAC;YAClD,IAAI,CAAChC,KAAK,CAACiC,UAAU,CAACC,QAAQ,CAAC,OAAO,CAAC;UACzC,CAAC,MAAM,IAAIf,QAAQ,CAACQ,MAAM,KAAK,GAAG,EAAE;YAClCG,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;UAC1B,CAAC,MAAM,IAAIZ,QAAQ,CAACQ,MAAM,KAAK,GAAG,EAAE;YAClCG,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;UAC1B,CAAC,MAAM;YACL,MAAM,sBAAsB;UAC9B;QACF,CAAC,CAAC,OAAOvB,KAAK,EAAE;UACd,IAAI,CAACqB,QAAQ,CAAC;YAAErB,KAAK,EAAEA;UAAM,CAAC,CAAC;QACjC;MACF,CAAC;MAAA,SAAA2B,sBAAAC,EAAA,EAAAC,GAAA;QAAA,OAAAtB,sBAAA,CAAAuB,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAJ,qBAAA;IAAA;EAAA;EAAA,OAAAxC,gBAAA;AAAA,EA/C4BP,SAAS;AAkDxC,eAAeO,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}