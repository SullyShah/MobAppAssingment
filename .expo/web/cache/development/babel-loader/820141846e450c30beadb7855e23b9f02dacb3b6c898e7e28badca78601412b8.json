{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AddToChatScreen = function (_Component) {\n  _inherits(AddToChatScreen, _Component);\n  var _super = _createSuper(AddToChatScreen);\n  function AddToChatScreen(props) {\n    var _this;\n    _classCallCheck(this, AddToChatScreen);\n    _this = _super.call(this, props);\n    _this.fetchContacts = _asyncToGenerator(function* () {\n      try {\n        var response = yield _this.getContacts();\n        _this.setState({\n          contacts: response\n        });\n        _this.filterContacts();\n      } catch (error) {\n        console.error(error);\n      }\n    });\n    _this.getContacts = _asyncToGenerator(function* () {\n      var response = yield fetch('http://localhost:3333/api/1.0.0/contacts', {\n        method: 'GET',\n        headers: {\n          'X-Authorization': yield AsyncStorage.getItem('whatsthat_session_token')\n        }\n      });\n      if (response.status !== 200) {\n        throw new Error('Failed to fetch contacts');\n      }\n      var contacts = yield response.json();\n      return contacts;\n    });\n    _this.filterContacts = function () {\n      var _this$state = _this.state,\n        searchQuery = _this$state.searchQuery,\n        contacts = _this$state.contacts;\n      var filteredContacts = contacts.filter(function (contact) {\n        return String(contact.user_id).toLowerCase().includes(searchQuery.toLowerCase()) || String(contact.first_name).toLowerCase().includes(searchQuery.toLowerCase()) || String(contact.last_name).toLowerCase().includes(searchQuery.toLowerCase());\n      });\n      _this.setState({\n        filteredContacts: filteredContacts\n      });\n    };\n    _this.SpecificContactSearch = function (searchQuery) {\n      _this.setState({\n        searchQuery: searchQuery\n      }, _this.filterContacts);\n    };\n    _this.AddToChat = function (user_id) {\n      var chat_id = _this.state.chat_id;\n      if (user_id && chat_id) {\n        _this.AddUserToChat(chat_id, user_id);\n      }\n    };\n    _this.AddUserToChat = function () {\n      var _ref3 = _asyncToGenerator(function* (chat_id, user_id) {\n        try {\n          var response = yield fetch(\"http://localhost:3333/api/1.0.0/chat/\" + chat_id + \"/user/\" + user_id, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'X-Authorization': yield AsyncStorage.getItem('whatsthat_session_token')\n            }\n          });\n          if (response.status === 200) {\n            var contentType = response.headers.get(\"content-type\");\n            if (contentType && contentType.includes(\"application/json\")) {\n              var chatDetails = yield response.json();\n              _this.setState({\n                chatDetails: chatDetails\n              });\n            }\n            console.log(\"User with ID \" + user_id + \" added to chat with ID \" + chat_id);\n          } else if (response.status === 400) {\n            console.log('Bad Request');\n          } else if (response.status === 401) {\n            console.log('Unauthorised');\n            yield AsyncStorage.removeItem('whatsthat_session_token');\n            yield AsyncStorage.removeItem('whatsthat_user_id');\n            _this.props.navigation.navigate('Login');\n          } else if (response.status === 403) {\n            console.log('Forbidden');\n          } else if (response.status === 404) {\n            console.log('Not Found');\n          } else {\n            throw new Error('Server Error');\n          }\n        } catch (error) {\n          console.log('Failed to add user to chat:', error);\n          Alert.alert('Error', error.toString());\n        }\n      });\n      return function (_x, _x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    _this.state = {\n      contacts: [],\n      filteredContacts: [],\n      searchQuery: '',\n      chat_id: _this.props.route.params.chat_id,\n      user_id: '',\n      chatDetails: _this.props.route.params.chatDetails\n    };\n    return _this;\n  }\n  _createClass(AddToChatScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n      console.log('Chat ID:', this.state.chat_id);\n      if (this.state.chatDetails) {\n        console.log(\"Chat Details ID: \", this.state.chatDetails.id);\n      } else {\n        console.log(\"Chat Details is undefined\");\n      }\n      this.focusListener = this.props.navigation.addListener('focus', function () {\n        _this2.fetchContacts();\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.focusListener != null && this.focusListener.remove) {\n        this.focusListener.remove();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      var _this$state2 = this.state,\n        filteredContacts = _this$state2.filteredContacts,\n        searchQuery = _this$state2.searchQuery;\n      return _jsxs(View, {\n        children: [_jsx(TextInput, {\n          placeholder: \"Search For Contacts\",\n          value: searchQuery,\n          onChangeText: this.SpecificContactSearch\n        }), _jsx(Button, {\n          title: \"Search Contacts\",\n          onPress: this.filterContacts\n        }), _jsx(FlatList, {\n          data: filteredContacts,\n          keyExtractor: function keyExtractor(item) {\n            return item.user_id.toString();\n          },\n          renderItem: function renderItem(_ref4) {\n            var item = _ref4.item;\n            return _jsxs(View, {\n              children: [_jsx(Text, {\n                children: item.first_name + \" \" + item.last_name\n              }), _jsx(Button, {\n                title: \"Add to Chat\",\n                onPress: function onPress() {\n                  ;\n                  _this3.AddToChat(item.user_id);\n                }\n              })]\n            });\n          }\n        })]\n      });\n    }\n  }]);\n  return AddToChatScreen;\n}(Component);\nexport default AddToChatScreen;","map":{"version":3,"names":["React","Component","TextInput","Button","Alert","View","Text","FlatList","StyleSheet","AsyncStorage","jsx","_jsx","jsxs","_jsxs","AddToChatScreen","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","fetchContacts","_asyncToGenerator","response","getContacts","setState","contacts","filterContacts","error","console","fetch","method","headers","getItem","status","Error","json","_this$state","state","searchQuery","filteredContacts","filter","contact","String","user_id","toLowerCase","includes","first_name","last_name","SpecificContactSearch","AddToChat","chat_id","AddUserToChat","_ref3","contentType","get","chatDetails","log","removeItem","navigation","navigate","alert","toString","_x","_x2","apply","arguments","route","params","_createClass","key","value","componentDidMount","_this2","id","focusListener","addListener","componentWillUnmount","remove","render","_this3","_this$state2","children","placeholder","onChangeText","title","onPress","data","keyExtractor","item","renderItem","_ref4"],"sources":["C:/Users/44773/Desktop/Assingment/components/AddToChat.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { TextInput, Button, Alert, View, Text, FlatList, StyleSheet } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nclass AddToChatScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      contacts: [],\r\n      filteredContacts: [],\r\n      searchQuery: '',\r\n      chat_id: this.props.route.params.chat_id,\r\n      user_id: '',\r\n      chatDetails: this.props.route.params.chatDetails,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    console.log('Chat ID:', this.state.chat_id); // Log chat_id\r\n\r\n    if(this.state.chatDetails) {\r\n      console.log(\"Chat Details ID: \", this.state.chatDetails.id);\r\n    } else {\r\n      console.log(\"Chat Details is undefined\");\r\n    }\r\n\r\n    this.focusListener = this.props.navigation.addListener('focus', () => {\r\n      this.fetchContacts();\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.focusListener != null && this.focusListener.remove) {\r\n      this.focusListener.remove();\r\n    }\r\n  }\r\n\r\n  fetchContacts = async () => {\r\n    try {\r\n      const response = await this.getContacts();\r\n      this.setState({ contacts: response });\r\n      this.filterContacts();\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  getContacts = async () => {\r\n    const response = await fetch('http://localhost:3333/api/1.0.0/contacts', {\r\n      method: 'GET',\r\n      headers: {\r\n        'X-Authorization': await AsyncStorage.getItem('whatsthat_session_token'),\r\n      },\r\n    });\r\n    if (response.status !== 200) {\r\n      throw new Error('Failed to fetch contacts');\r\n    }\r\n    const contacts = await response.json();\r\n    return contacts;\r\n  };\r\n\r\n  filterContacts = () => {\r\n    const { searchQuery, contacts } = this.state;\r\n    const filteredContacts = contacts.filter(\r\n      (contact) =>\r\n        String(contact.user_id).toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n        String(contact.first_name).toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n        String(contact.last_name).toLowerCase().includes(searchQuery.toLowerCase())\r\n    );\r\n    this.setState({ filteredContacts });\r\n  };\r\n\r\n  SpecificContactSearch = (searchQuery) => {\r\n    this.setState({ searchQuery }, this.filterContacts);\r\n  };\r\n\r\n  AddToChat = (user_id) => {\r\n    const { chat_id } = this.state;\r\n\r\n    if (user_id && chat_id) {\r\n      this.AddUserToChat(chat_id, user_id);\r\n    }\r\n  };\r\n\r\n  // AddUserToChat = async (chat_id, user_id) => {\r\n  //   try {\r\n  //     const response = await fetch(`http://localhost:3333/api/1.0.0/chat/${chat_id}/user/${user_id}`, {\r\n  //       method: 'POST',\r\n  //       headers: {\r\n  //         'Content-Type': 'application/json',\r\n  //         'X-Authorization': await AsyncStorage.getItem('whatsthat_session_token'),\r\n  //       },\r\n  //     });\r\n\r\n  //     if (response.status === 200) {\r\n  //       const chatDetails = await response.json();\r\n  //       this.setState({ chatDetails });\r\n  //       console.log(`User with ID ${user_id} added to chat with ID ${chat_id}`);\r\n  //     } else if (response.status === 400) {\r\n  //       console.log('Bad Request');\r\n  //     } else if (response.status === 401) {\r\n  //       console.log('Unauthorised');\r\n  //       await AsyncStorage.removeItem('whatsthat_session_token');\r\n  //       await AsyncStorage.removeItem('whatsthat_user_id');\r\n  //       this.props.navigation.navigate('Login');\r\n  //     } else if (response.status === 403) {\r\n  //       console.log('Forbidden');\r\n  //     } else if (response.status === 404) {\r\n  //       console.log('Not Found');\r\n  //     } else {\r\n  //       throw new Error('Server Error');\r\n  //     }\r\n  //   } catch (error) {\r\n  //     console.log('Failed to add user to chat:', error);\r\n  //     Alert.alert('Error', error.toString());\r\n  //   }\r\n  // };\r\n\r\n  AddUserToChat = async (chat_id, user_id) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:3333/api/1.0.0/chat/${chat_id}/user/${user_id}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-Authorization': await AsyncStorage.getItem('whatsthat_session_token'),\r\n        },\r\n      });\r\n  \r\n      if (response.status === 200) {\r\n        // Check if the response is ok and content is JSON before processing it as such\r\n        const contentType = response.headers.get(\"content-type\");\r\n        if(contentType && contentType.includes(\"application/json\")) {\r\n          const chatDetails = await response.json();\r\n          this.setState({ chatDetails });\r\n        }\r\n        console.log(`User with ID ${user_id} added to chat with ID ${chat_id}`);\r\n      } else if (response.status === 400) {\r\n        console.log('Bad Request');\r\n      } else if (response.status === 401) {\r\n        console.log('Unauthorised');\r\n        await AsyncStorage.removeItem('whatsthat_session_token');\r\n        await AsyncStorage.removeItem('whatsthat_user_id');\r\n        this.props.navigation.navigate('Login');\r\n      } else if (response.status === 403) {\r\n        console.log('Forbidden');\r\n      } else if (response.status === 404) {\r\n        console.log('Not Found');\r\n      } else {\r\n        throw new Error('Server Error');\r\n      }\r\n    } catch (error) {\r\n      console.log('Failed to add user to chat:', error);\r\n      Alert.alert('Error', error.toString());\r\n    }\r\n  };\r\n  \r\n\r\n\r\n\r\n  render() {\r\n    const { filteredContacts, searchQuery } = this.state;\r\n    return (\r\n      <View>\r\n        <TextInput\r\n          placeholder=\"Search For Contacts\"\r\n          value={searchQuery}\r\n          onChangeText={this.SpecificContactSearch}\r\n        />\r\n\r\n        <Button title=\"Search Contacts\" onPress={this.filterContacts} />\r\n\r\n        <FlatList\r\n          data={filteredContacts}\r\n          keyExtractor={(item) => item.user_id.toString()} // this is updated\r\n          renderItem={({ item }) => (\r\n            <View>\r\n              <Text>{`${item.first_name} ${item.last_name}`}</Text>\r\n              <Button title=\"Add to Chat\" onPress={() => {;this.AddToChat(item.user_id);}} />\r\n            </View>\r\n          )}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddToChatScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}