{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport React, { Component } from 'react';\nimport Chat from \"./Chat\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nvar ChatScreen = function (_Component) {\n  _inherits(ChatScreen, _Component);\n  var _super = _createSuper(ChatScreen);\n  function ChatScreen(props) {\n    var _this;\n    _classCallCheck(this, ChatScreen);\n    _this = _super.call(this, props);\n    _this.state = {\n      chats: [],\n      chatDetails: null,\n      messages: [],\n      error: null,\n      submitted: false\n    };\n    return _this;\n  }\n  _createClass(ChatScreen, [{\n    key: \"viewChats\",\n    value: function () {\n      var _viewChats = _asyncToGenerator(function* () {\n        try {\n          var response = yield fetch('http://localhost:19006/api/1.0.0/chats', {\n            method: 'GET',\n            headers: {\n              'X-Authorisation': yield AsyncStorage.getItem('whatsthat_session_token'),\n              'Content-Type': 'application/json'\n            }\n          });\n          if (response.status === 200) {\n            var chats = yield response.json();\n            this.setState({\n              chats: chats\n            });\n          } else if (response.status === 401) {\n            console.log('Unathorised');\n            yield AsyncStorage.removeItem('whatsthat_session_token');\n            yield AsyncStorage.removeItem('whatsthat_user_id');\n            this.props.navigation.navigate('Login');\n          } else {\n            throw 'Server Error';\n          }\n        } catch (error) {\n          this.setState({\n            error: error\n          });\n        }\n      });\n      function viewChats() {\n        return _viewChats.apply(this, arguments);\n      }\n      return viewChats;\n    }()\n  }, {\n    key: \"startConversation\",\n    value: function () {\n      var _startConversation = _asyncToGenerator(function* (userIds) {\n        try {\n          var response = yield fetch('http://localhost:19006/api/1.0.0/chats', {\n            method: 'POST',\n            headers: {\n              'X-Authorisation': yield AsyncStorage.getItem('whatsthat_session_token'),\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              users: userIds\n            })\n          });\n          if (response.status === 201) {\n            var chatDetails = yield response.json();\n            this.setState({\n              chatDetails: chatDetails\n            });\n            this.props.navigation.navigate('ChatDetails');\n          } else if (response.status === 400) {\n            throw 'Bad Request';\n          } else if (response.status === 401) {\n            throw 'Unathorised';\n          } else {\n            throw 'Server Error';\n          }\n        } catch (error) {\n          this.setState({\n            error: error\n          });\n        }\n      });\n      function startConversation(_x) {\n        return _startConversation.apply(this, arguments);\n      }\n      return startConversation;\n    }()\n  }, {\n    key: \"viewChatDetails\",\n    value: function () {\n      var _viewChatDetails = _asyncToGenerator(function* (chatId) {\n        try {\n          var response = yield fetch('http://localhost:19006/api/1.0.0/chats/${chatId}', {\n            method: 'GET',\n            headers: {\n              'X-Authorisation': yield AsyncStorage.getItem('whatsthat_session_token'),\n              'Content-Type': 'application/json'\n            }\n          });\n          if (response.status === 200) {\n            var chatDetails = yield response.json();\n            this.setState({\n              chatDetails: chatDetails\n            });\n          } else if (response.status === 401) {\n            console.log('Unathorised');\n            yield AsyncStorage.removeItem('whatsthat_session_token');\n            yield AsyncStorage.removeItem('whatsthat_user_id');\n            this.props.navigation.navigate('Login');\n          } else if (response.status === 403) {\n            console.log('Forbidden');\n          } else if (response.status === 404) {\n            console.log('Not Found');\n          } else {\n            throw 'Something Went Wrong';\n          }\n        } catch (error) {\n          this.setState({\n            error: error\n          });\n        }\n      });\n      function viewChatDetails(_x2) {\n        return _viewChatDetails.apply(this, arguments);\n      }\n      return viewChatDetails;\n    }()\n  }, {\n    key: \"UpdateChatInformation\",\n    value: function () {\n      var _UpdateChatInformation = _asyncToGenerator(function* (chatId, chatData) {\n        try {\n          var response = yield fetch('http://localhost:19006/api/1.0.0/chats/${chatId}', {\n            method: 'PATCH',\n            headers: {\n              'Content-Type': 'application/json',\n              'X-Authorisation': yield AsyncStorage.getItem('whatsthat_session_token')\n            },\n            body: JSON.stringify(chatData)\n          });\n          if (response.status === 200) {\n            var chatDetails = yield response.json();\n            this.setState({\n              chatDetails: chatDetails\n            });\n          } else if (response.status === 400) {\n            console.log('Bad Request');\n          } else if (response.status === 401) {\n            console.log('Unathorised');\n            yield AsyncStorage.removeItem('whatsthat_session_token');\n            yield AsyncStorage.removeItem('whatsthat_user_id');\n            this.props.navigation.navigate('Login');\n          } else if (response.status === 403) {\n            console.log('Forbidden');\n          } else if (response.status === 404) {\n            console.log('Not Found');\n          } else {\n            throw 'Something Went Wrong';\n          }\n        } catch (error) {\n          this.setState({\n            error: error\n          });\n        }\n      });\n      function UpdateChatInformation(_x3, _x4) {\n        return _UpdateChatInformation.apply(this, arguments);\n      }\n      return UpdateChatInformation;\n    }()\n  }, {\n    key: \"AddUserToChat\",\n    value: function () {\n      var _AddUserToChat = _asyncToGenerator(function* (chatId, userId) {\n        try {\n          var response = yield fetch('http://localhost:19006/api/1.0.0/chats/${chatId}/users/${userId}', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'X-Authorisation': yield AsyncStorage.getItem('whatsthat_session_token')\n            }\n          });\n          if (response.status === 200) {\n            var chatDetails = yield response.json();\n            this.setState({\n              chatDetails: chatDetails\n            });\n          } else if (response.status === 400) {\n            console.log('Bad Request');\n          } else if (response.status === 401) {\n            console.log('Unathorised');\n            yield AsyncStorage.removeItem('whatsthat_session_token');\n            yield AsyncStorage.removeItem('whatsthat_user_id');\n            this.props.navigation.navigate('Login');\n          } else if (response.status === 403) {\n            console.log('Forbidden');\n          } else if (response.status === 404) {\n            console.log('Not Found');\n          } else {\n            throw 'Server Error';\n          }\n        } catch (error) {\n          this.setState({\n            error: error\n          });\n        }\n      });\n      function AddUserToChat(_x5, _x6) {\n        return _AddUserToChat.apply(this, arguments);\n      }\n      return AddUserToChat;\n    }()\n  }, {\n    key: \"RemoveUserFromChat\",\n    value: function () {\n      var _RemoveUserFromChat = _asyncToGenerator(function* (chatId, userId) {\n        try {\n          var response = yield fetch('http://localhost:19006/api/1.0.0/chats/${chatId}/users/${userId}', {\n            method: 'DELETE',\n            headers: {\n              'Content-Type': 'application/json',\n              'X-Authorisation': yield AsyncStorage.getItem('whatsthat_session_token')\n            }\n          });\n          if (response.status === 200) {\n            var chatDetails = yield response.json();\n            this.setState({\n              chatDetails: chatDetails\n            });\n          } else if (response.status === 401) {\n            console.log('Unathorised');\n            yield AsyncStorage.removeItem('whatsthat_session_token');\n            yield AsyncStorage.removeItem('whatsthat_user_id');\n            this.props.navigation.navigate('Login');\n          } else if (response.status === 403) {\n            console.log('Forbidden');\n          } else if (response.status === 404) {\n            console.log('Not Found');\n          } else {\n            throw 'Server Error';\n          }\n        } catch (error) {\n          this.setState({\n            error: error\n          });\n        }\n      });\n      function RemoveUserFromChat(_x7, _x8) {\n        return _RemoveUserFromChat.apply(this, arguments);\n      }\n      return RemoveUserFromChat;\n    }()\n  }, {\n    key: \"SendMessage\",\n    value: function () {\n      var _SendMessage = _asyncToGenerator(function* (chatId, message) {\n        try {\n          var response = yield fetch('http://localhost:19006/api/1.0.0/chats/${chatId}/messages', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'X-Authorisation': yield AsyncStorage.getItem('whatsthat_session_token')\n            },\n            body: JSON.stringify({\n              message: message\n            })\n          });\n          if (response.status === 200) {\n            var chatDetails = yield response.json();\n            this.setState({\n              chatDetails: chatDetails\n            });\n          } else if (response.status === 400) {\n            console.log('Bad Request');\n          } else if (response.status === 401) {\n            console.log('Unathorised');\n            yield AsyncStorage.removeItem('whatsthat_session_token');\n            yield AsyncStorage.removeItem('whatsthat_user_id');\n            this.props.navigation.navigate('Login');\n          } else if (response.status === 403) {\n            console.log('Forbidden');\n          } else if (response.status === 404) {\n            console.log('Not Found');\n          } else {\n            throw 'Server Error';\n          }\n        } catch (error) {\n          this.setState({\n            error: error\n          });\n        }\n      });\n      function SendMessage(_x9, _x10) {\n        return _SendMessage.apply(this, arguments);\n      }\n      return SendMessage;\n    }()\n  }, {\n    key: \"UpdateMessage\",\n    value: function () {\n      var _UpdateMessage = _asyncToGenerator(function* (chatId, messageId, message) {\n        try {\n          var response = yield fetch('http://localhost:19006/api/1.0.0/chats/${chatId}/messages/${messageId}', {\n            method: 'PATCH',\n            headers: {\n              'Content-Type': 'application/json',\n              'X-Authorisation': yield AsyncStorage.getItem('whatsthat_session_token')\n            },\n            body: JSON.stringify({\n              message: message\n            })\n          });\n          if (response.status === 200) {\n            var chatDetails = yield response.json();\n            this.setState({\n              chatDetails: chatDetails\n            });\n          } else if (response.status === 400) {\n            console.log('Bad Request');\n          } else if (response.status === 401) {\n            console.log('Unathorised');\n            yield AsyncStorage.removeItem('whatsthat_session_token');\n            yield AsyncStorage.removeItem('whatsthat_user_id');\n            this.props.navigation.navigate('Login');\n          } else if (response.status === 403) {\n            console.log('Forbidden');\n          } else if (response.status === 404) {\n            console.log('Not Found');\n          } else {\n            throw 'Server Error';\n          }\n        } catch (error) {\n          this.setState({\n            error: error\n          });\n        }\n      });\n      function UpdateMessage(_x11, _x12, _x13) {\n        return _UpdateMessage.apply(this, arguments);\n      }\n      return UpdateMessage;\n    }()\n  }, {\n    key: \"DeleteMessage\",\n    value: function () {\n      var _DeleteMessage = _asyncToGenerator(function* (chatId, messageId) {\n        try {\n          var response = yield fetch('http://localhost:19006/api/1.0.0/chats/${chatId}/messages/${messageId}', {\n            method: 'DELETE',\n            headers: {\n              'Content-Type': 'application/json',\n              'X-Authorisation': yield AsyncStorage.getItem('whatsthat_session_token')\n            }\n          });\n          if (response.status === 200) {\n            var chatDetails = yield response.json();\n            this.setState({\n              chatDetails: chatDetails\n            });\n          } else if (response.status === 401) {\n            console.log('Unathorised');\n            yield AsyncStorage.removeItem('whatsthat_session_token');\n            yield AsyncStorage.removeItem('whatsthat_user_id');\n            this.props.navigation.navigate('Login');\n          } else if (response.status === 403) {\n            console.log('Forbidden');\n          } else if (response.status === 404) {\n            console.log('Not Found');\n          } else {\n            throw 'Server Error';\n          }\n        } catch (error) {\n          this.setState({\n            error: error\n          });\n        }\n      });\n      function DeleteMessage(_x14, _x15) {\n        return _DeleteMessage.apply(this, arguments);\n      }\n      return DeleteMessage;\n    }()\n  }]);\n  return ChatScreen;\n}(Component);\nexport default ChatScreen;","map":{"version":3,"names":["AsyncStorage","React","Component","Chat","Text","View","Button","ChatScreen","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","chats","chatDetails","messages","error","submitted","_createClass","key","value","_viewChats","_asyncToGenerator","response","fetch","method","headers","getItem","status","json","setState","console","log","removeItem","navigation","navigate","viewChats","apply","arguments","_startConversation","userIds","body","JSON","stringify","users","startConversation","_x","_viewChatDetails","chatId","viewChatDetails","_x2","_UpdateChatInformation","chatData","UpdateChatInformation","_x3","_x4","_AddUserToChat","userId","AddUserToChat","_x5","_x6","_RemoveUserFromChat","RemoveUserFromChat","_x7","_x8","_SendMessage","message","SendMessage","_x9","_x10","_UpdateMessage","messageId","UpdateMessage","_x11","_x12","_x13","_DeleteMessage","DeleteMessage","_x14","_x15"],"sources":["C:/Users/44773/Desktop/Assingment/components/Chat.js"],"sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport React, { Component } from 'react';\r\nimport Chat from './Chat'\r\nimport { Text, View, Button } from 'react-native';\r\n\r\nclass ChatScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      chats: [],\r\n      chatDetails: null,\r\n      messages: [],\r\n      error: null,\r\n      submitted: false,\r\n    };\r\n  }\r\n\r\n\r\n  async viewChats() {\r\n    try {\r\n      const response = await fetch('http://localhost:19006/api/1.0.0/chats', {\r\n        method: 'GET',\r\n        headers: {\r\n          'X-Authorisation': await AsyncStorage.getItem('whatsthat_session_token'),\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        const chats = await response.json();\r\n        this.setState({ chats: chats });\r\n      } else if (response.status === 401) {\r\n        console.log('Unathorised');\r\n        await AsyncStorage.removeItem('whatsthat_session_token');\r\n        await AsyncStorage.removeItem('whatsthat_user_id');\r\n        this.props.navigation.navigate('Login');\r\n      } else {\r\n        throw 'Server Error';\r\n      }\r\n    } catch (error) {\r\n      this.setState({ error: error });\r\n    }\r\n  }\r\n\r\n  \r\n  async startConversation(userIds) {\r\n    try {\r\n      const response = await fetch('http://localhost:19006/api/1.0.0/chats', {\r\n        method: 'POST',\r\n        headers: {\r\n          'X-Authorisation': await AsyncStorage.getItem('whatsthat_session_token'),\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ users: userIds }),\r\n      });\r\n\r\n      if (response.status === 201) {\r\n        const chatDetails = await response.json();\r\n        this.setState({ chatDetails: chatDetails });\r\n        this.props.navigation.navigate('ChatDetails');\r\n      } else if (response.status === 400) {\r\n        throw 'Bad Request';\r\n    } else if (response.status === 401) {\r\n        throw 'Unathorised';\r\n      } else {\r\n        throw 'Server Error';\r\n      }\r\n    } catch (error) {\r\n      this.setState({ error: error });\r\n    }\r\n  }\r\n\r\n  async viewChatDetails(chatId) {\r\n    try {\r\n      const response = await fetch('http://localhost:19006/api/1.0.0/chats/${chatId}', {\r\n        method: 'GET',\r\n        headers: {\r\n          'X-Authorisation': await AsyncStorage.getItem('whatsthat_session_token'),\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        const chatDetails = await response.json();\r\n        this.setState({ chatDetails: chatDetails });\r\n      } else if (response.status === 401) {\r\n        console.log('Unathorised');\r\n        await AsyncStorage.removeItem('whatsthat_session_token');\r\n        await AsyncStorage.removeItem('whatsthat_user_id');\r\n        this.props.navigation.navigate('Login');\r\n    } else if (response.status === 403) {\r\n        console.log('Forbidden');\r\n    } else if (response.status === 404) {\r\n        console.log('Not Found');\r\n      } else {\r\n        throw 'Something Went Wrong';\r\n      }\r\n    } catch (error) {\r\n      this.setState({ error: error });\r\n    }\r\n  }\r\n\r\n\r\n  async UpdateChatInformation(chatId, chatData) {\r\n    try {\r\n      const response = await fetch('http://localhost:19006/api/1.0.0/chats/${chatId}', {\r\n        method: 'PATCH',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-Authorisation': await AsyncStorage.getItem('whatsthat_session_token'),\r\n        },\r\n        body: JSON.stringify(chatData),\r\n      });\r\n  \r\n      if (response.status === 200) {\r\n        const chatDetails = await response.json();\r\n        this.setState({ chatDetails: chatDetails });\r\n    } else if (response.status === 400) {\r\n        console.log('Bad Request');\r\n      } else if (response.status === 401) {\r\n        console.log('Unathorised');\r\n        await AsyncStorage.removeItem('whatsthat_session_token');\r\n        await AsyncStorage.removeItem('whatsthat_user_id');\r\n        this.props.navigation.navigate('Login');\r\n      } else if (response.status === 403) {\r\n        console.log('Forbidden');\r\n      } else if (response.status === 404) {\r\n        console.log('Not Found');\r\n      } else {\r\n        throw 'Something Went Wrong';\r\n      }\r\n    } catch (error) {\r\n      this.setState({ error: error });\r\n    }\r\n  }\r\n  \r\n  \r\nasync AddUserToChat(chatId, userId) {\r\n  try {\r\n    const response = await fetch('http://localhost:19006/api/1.0.0/chats/${chatId}/users/${userId}', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'X-Authorisation': await AsyncStorage.getItem('whatsthat_session_token'),\r\n      },\r\n    });\r\n    \r\n    if (response.status === 200) {\r\n        const chatDetails = await response.json();\r\n        this.setState({ chatDetails: chatDetails });\r\n    } else if (response.status === 400) {\r\n        console.log('Bad Request');\r\n    } else if (response.status === 401) {\r\n        console.log('Unathorised');\r\n        await AsyncStorage.removeItem('whatsthat_session_token');\r\n        await AsyncStorage.removeItem('whatsthat_user_id');\r\n        this.props.navigation.navigate('Login');\r\n    } else if (response.status === 403) {\r\n        console.log('Forbidden');\r\n    } else if (response.status === 404) {\r\n        console.log('Not Found');\r\n    } else {\r\n        throw 'Server Error';\r\n    }\r\n  } catch (error) {\r\n    this.setState({ error: error });\r\n  }\r\n}\r\n\r\nasync RemoveUserFromChat(chatId, userId) {\r\n  try {\r\n    const response = await fetch('http://localhost:19006/api/1.0.0/chats/${chatId}/users/${userId}', {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'X-Authorisation': await AsyncStorage.getItem('whatsthat_session_token'),\r\n      },\r\n    });\r\n\r\n    if (response.status === 200) {\r\n        const chatDetails = await response.json();\r\n        this.setState({ chatDetails: chatDetails });\r\n    } else if (response.status === 401) {\r\n        console.log('Unathorised');\r\n        await AsyncStorage.removeItem('whatsthat_session_token');\r\n        await AsyncStorage.removeItem('whatsthat_user_id');\r\n        this.props.navigation.navigate('Login');\r\n    } else if (response.status === 403) {\r\n        console.log('Forbidden');\r\n    } else if (response.status === 404) {\r\n        console.log('Not Found');\r\n    } else {\r\n        throw 'Server Error';\r\n    }\r\n  } catch (error) {\r\n    this.setState({ error: error });\r\n  }\r\n}\r\n\r\n\r\n    \r\n\r\nasync SendMessage(chatId, message) {\r\n  try {\r\n    const response = await fetch('http://localhost:19006/api/1.0.0/chats/${chatId}/messages', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'X-Authorisation': await AsyncStorage.getItem('whatsthat_session_token'),\r\n      },\r\n      body: JSON.stringify({\r\n        message: message,\r\n      }),\r\n    });\r\n\r\n    if (response.status === 200) {\r\n      const chatDetails = await response.json();\r\n      this.setState({ chatDetails: chatDetails });\r\n    } else if (response.status === 400) {\r\n      console.log('Bad Request');\r\n    } else if (response.status === 401) {\r\n      console.log('Unathorised');\r\n      await AsyncStorage.removeItem('whatsthat_session_token');\r\n      await AsyncStorage.removeItem('whatsthat_user_id');\r\n      this.props.navigation.navigate('Login');\r\n    } else if (response.status === 403) {\r\n      console.log('Forbidden');\r\n    } else if (response.status === 404) {\r\n      console.log('Not Found');\r\n    } else {\r\n      throw 'Server Error';\r\n    }\r\n  } catch (error) {\r\n    this.setState({ error: error });\r\n  }\r\n}\r\n\r\nasync UpdateMessage(chatId, messageId, message) {\r\n  try {\r\n    const response = await fetch('http://localhost:19006/api/1.0.0/chats/${chatId}/messages/${messageId}', {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'X-Authorisation': await AsyncStorage.getItem('whatsthat_session_token'),\r\n      },\r\n      body: JSON.stringify({\r\n        message: message,\r\n      }),\r\n    });\r\n\r\n    if (response.status === 200) {\r\n      const chatDetails = await response.json();\r\n      this.setState({ chatDetails: chatDetails });\r\n    } else if (response.status === 400) {\r\n      console.log('Bad Request');\r\n    } else if (response.status === 401) {\r\n      console.log('Unathorised');\r\n      await AsyncStorage.removeItem('whatsthat_session_token');\r\n      await AsyncStorage.removeItem('whatsthat_user_id');\r\n      this.props.navigation.navigate('Login');\r\n    } else if (response.status === 403) {\r\n      console.log('Forbidden');\r\n    } else if (response.status === 404) {\r\n      console.log('Not Found');\r\n    } else {\r\n      throw 'Server Error';\r\n    }\r\n  } catch (error) {\r\n    this.setState({ error: error });\r\n  }\r\n}\r\n\r\nasync DeleteMessage(chatId, messageId) {\r\n  try {\r\n    const response = await fetch('http://localhost:19006/api/1.0.0/chats/${chatId}/messages/${messageId}', {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'X-Authorisation': await AsyncStorage.getItem('whatsthat_session_token'),\r\n      },\r\n    });\r\n\r\n    if (response.status === 200) {\r\n      const chatDetails = await response.json();\r\n      this.setState({ chatDetails: chatDetails });\r\n    } else if (response.status === 401) {\r\n      console.log('Unathorised');\r\n      await AsyncStorage.removeItem('whatsthat_session_token');\r\n      await AsyncStorage.removeItem('whatsthat_user_id');\r\n      this.props.navigation.navigate('Login');\r\n    } else if (response.status === 403) {\r\n      console.log('Forbidden');\r\n    } else if (response.status === 404) {\r\n      console.log('Not Found');\r\n    } else {\r\n      throw 'Server Error';\r\n    }\r\n  } catch (error) {\r\n    this.setState({ error: error });\r\n  }\r\n}\r\n\r\n\r\n}\r\n\r\nexport default ChatScreen;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}