{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ManageContactScreen = function (_Component) {\n  _inherits(ManageContactScreen, _Component);\n  var _super = _createSuper(ManageContactScreen);\n  function ManageContactScreen() {\n    _classCallCheck(this, ManageContactScreen);\n    return _super.apply(this, arguments);\n  }\n  _createClass(ManageContactScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n      return _jsxs(View, {\n        children: [_jsx(Button, {\n          title: \"Add Contact\",\n          onPress: function onPress() {\n            return _this.props.navigation.navigate('AddContact', {\n              onRefreshContacts: _this.refreshContactsList\n            });\n          }\n        }), _jsx(Button, {\n          title: \"Delete Contact\",\n          onPress: function onPress() {\n            return _this.props.navigation.navigate('DeleteContact', {\n              onRefreshContacts: _this.refreshContactsList\n            });\n          }\n        }), _jsx(Button, {\n          title: \"Block A Contact\",\n          onPress: function onPress() {\n            return _this.props.navigation.navigate('Block');\n          }\n        }), _jsx(Button, {\n          title: \"Unblock A Contact\",\n          onPress: function onPress() {\n            return _this.props.navigation.navigate('Block');\n          }\n        })]\n      });\n    }\n  }]);\n  return ManageContactScreen;\n}(Component);\nexport default ManageContactScreen;","map":{"version":3,"names":["React","Component","Text","View","Button","Alert","AsyncStorage","jsx","_jsx","jsxs","_jsxs","ManageContactScreen","_Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","render","_this","children","title","onPress","props","navigation","navigate","onRefreshContacts","refreshContactsList"],"sources":["C:/Users/44773/Desktop/Assingment/components/ManageContacts.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Text, View, Button, Alert } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nclass ManageContactScreen extends Component {\r\n  render() {\r\n    return (\r\n      <View>\r\n        <Button\r\n          title=\"Add Contact\"\r\n          onPress={() =>\r\n            this.props.navigation.navigate('AddContact', {\r\n              onRefreshContacts: this.refreshContactsList,\r\n            })\r\n          }\r\n        />\r\n\r\n        <Button\r\n          title=\"Delete Contact\"\r\n          onPress={() =>\r\n            this.props.navigation.navigate('DeleteContact', {\r\n              onRefreshContacts: this.refreshContactsList,\r\n            })\r\n          }\r\n        />\r\n\r\n      <Button\r\n        title=\"Block A Contact\"\r\n        onPress={() => this.props.navigation.navigate('Block')}\r\n      />\r\n\r\n<Button\r\n        title=\"Unblock A Contact\"\r\n        onPress={() => this.props.navigation.navigate('Block')}\r\n      />\r\n      </View>\r\n\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default ManageContactScreen;\r\n"],"mappings":";;;;;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,KAAA;AAEzC,OAAOC,YAAY,MAAM,2CAA2C;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,IAE/DC,mBAAmB,aAAAC,UAAA;EAAAC,SAAA,CAAAF,mBAAA,EAAAC,UAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,mBAAA;EAAA,SAAAA,oBAAA;IAAAK,eAAA,OAAAL,mBAAA;IAAA,OAAAG,MAAA,CAAAG,KAAA,OAAAC,SAAA;EAAA;EAAAC,YAAA,CAAAR,mBAAA;IAAAS,GAAA;IAAAC,KAAA,EACvB,SAAAC,OAAA,EAAS;MAAA,IAAAC,KAAA;MACP,OACEb,KAAA,CAACP,IAAI;QAAAqB,QAAA,GACHhB,IAAA,CAACJ,MAAM;UACLqB,KAAK,EAAC,aAAa;UACnBC,OAAO,EAAE,SAAAA,QAAA;YAAA,OACPH,KAAI,CAACI,KAAK,CAACC,UAAU,CAACC,QAAQ,CAAC,YAAY,EAAE;cAC3CC,iBAAiB,EAAEP,KAAI,CAACQ;YAC1B,CAAC,CAAC;UAAA;QACH,EACD,EAEFvB,IAAA,CAACJ,MAAM;UACLqB,KAAK,EAAC,gBAAgB;UACtBC,OAAO,EAAE,SAAAA,QAAA;YAAA,OACPH,KAAI,CAACI,KAAK,CAACC,UAAU,CAACC,QAAQ,CAAC,eAAe,EAAE;cAC9CC,iBAAiB,EAAEP,KAAI,CAACQ;YAC1B,CAAC,CAAC;UAAA;QACH,EACD,EAEJvB,IAAA,CAACJ,MAAM;UACLqB,KAAK,EAAC,iBAAiB;UACvBC,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAMH,KAAI,CAACI,KAAK,CAACC,UAAU,CAACC,QAAQ,CAAC,OAAO,CAAC;UAAA;QAAC,EACvD,EAERrB,IAAA,CAACJ,MAAM;UACCqB,KAAK,EAAC,mBAAmB;UACzBC,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAMH,KAAI,CAACI,KAAK,CAACC,UAAU,CAACC,QAAQ,CAAC,OAAO,CAAC;UAAA;QAAC,EACvD;MAAA,EACK;IAIX;EAAC;EAAA,OAAAlB,mBAAA;AAAA,EAnC+BV,SAAS;AAsC3C,eAAeU,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}