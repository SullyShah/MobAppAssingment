{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar NewChatScreen = function (_Component) {\n  _inherits(NewChatScreen, _Component);\n  var _super = _createSuper(NewChatScreen);\n  function NewChatScreen(props) {\n    var _this;\n    _classCallCheck(this, NewChatScreen);\n    _this = _super.call(this, props);\n    _this.handleChatNameChange = function (text) {\n      _this.setState({\n        chatName: text\n      });\n    };\n    _this.handleSearchChange = function (text) {\n      _this.setState({\n        searchQuery: text\n      }, _this.searchContacts);\n    };\n    _this.searchContacts = _asyncToGenerator(function* () {\n      var searchResults = yield fetchContacts(_this.state.searchQuery);\n      _this.setState({\n        searchResults: searchResults\n      });\n    });\n    _this.addToChat = function (contact) {\n      _this.setState(function (prevState) {\n        return {\n          chatParticipants: [].concat(_toConsumableArray(prevState.chatParticipants), [contact])\n        };\n      });\n    };\n    _this.createNewChat = _asyncToGenerator(function* () {\n      var _this$state = _this.state,\n        chatName = _this$state.chatName,\n        chatParticipants = _this$state.chatParticipants;\n      if (chatName && chatParticipants.length > 0) {\n        try {\n          yield createChatOnServer(chatName, chatParticipants);\n          Alert.alert('Success', 'New chat created successfully');\n        } catch (error) {\n          Alert.alert('Error', error.toString());\n        }\n      } else {\n        Alert.alert('Error', 'Please input chat name and add at least one participant');\n      }\n    });\n    _this.state = {\n      chatName: '',\n      chatParticipants: [],\n      searchQuery: '',\n      searchResults: []\n    };\n    return _this;\n  }\n  _createClass(NewChatScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var _this$state2 = this.state,\n        chatName = _this$state2.chatName,\n        searchQuery = _this$state2.searchQuery,\n        searchResults = _this$state2.searchResults,\n        chatParticipants = _this$state2.chatParticipants;\n      return _jsxs(View, {\n        children: [_jsx(TextInput, {\n          placeholder: \"Chat name\",\n          value: chatName,\n          onChangeText: this.handleChatNameChange\n        }), _jsx(TextInput, {\n          placeholder: \"Search contacts\",\n          value: searchQuery,\n          onChangeText: this.handleSearchChange\n        }), _jsx(FlatList, {\n          data: searchResults,\n          renderItem: function renderItem(_ref3) {\n            var item = _ref3.item;\n            return _jsxs(View, {\n              children: [_jsxs(Text, {\n                children: [item.name, \" (\", item.userId, \")\"]\n              }), _jsx(Button, {\n                title: \"Add to chat\",\n                onPress: function onPress() {\n                  return _this2.addToChat(item);\n                }\n              })]\n            });\n          },\n          keyExtractor: function keyExtractor(item) {\n            return item.userId;\n          }\n        }), _jsx(Text, {\n          children: \"Participants:\"\n        }), _jsx(FlatList, {\n          data: chatParticipants,\n          renderItem: function renderItem(_ref4) {\n            var item = _ref4.item;\n            return _jsx(Text, {\n              children: item.name\n            });\n          },\n          keyExtractor: function keyExtractor(item) {\n            return item.userId;\n          }\n        }), _jsx(Button, {\n          title: \"Create Chat\",\n          onPress: this.createNewChat\n        })]\n      });\n    }\n  }]);\n  return NewChatScreen;\n}(Component);\nexport default NewChatScreen;","map":{"version":3,"names":["React","Component","Text","View","TextInput","Button","FlatList","TouchableOpacity","AsyncStorage","jsx","_jsx","jsxs","_jsxs","NewChatScreen","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","handleChatNameChange","text","setState","chatName","handleSearchChange","searchQuery","searchContacts","_asyncToGenerator","searchResults","fetchContacts","state","addToChat","contact","prevState","chatParticipants","concat","_toConsumableArray","createNewChat","_this$state","length","createChatOnServer","Alert","alert","error","toString","_createClass","key","value","render","_this2","_this$state2","children","placeholder","onChangeText","data","renderItem","_ref3","item","name","userId","title","onPress","keyExtractor","_ref4"],"sources":["C:/Users/44773/Desktop/Assingment/components/NewChat.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Text, View, TextInput, Button, FlatList, TouchableOpacity } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nclass NewChatScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      chatName: '',\r\n      chatParticipants: [],\r\n      searchQuery: '',\r\n      searchResults: [],\r\n    };\r\n  }\r\n\r\n  handleChatNameChange = (text) => {\r\n    this.setState({ chatName: text });\r\n  }\r\n\r\n  handleSearchChange = (text) => {\r\n    this.setState({ searchQuery: text }, this.searchContacts);\r\n  }\r\n\r\n  searchContacts = async () => {\r\n    // Fetch contacts matching the search query from the server\r\n    // This is a placeholder and should be replaced with actual server request\r\n    const searchResults = await fetchContacts(this.state.searchQuery);\r\n    this.setState({ searchResults });\r\n  }\r\n\r\n  addToChat = (contact) => {\r\n    this.setState(prevState => ({ chatParticipants: [...prevState.chatParticipants, contact] }));\r\n  }\r\n\r\n  createNewChat = async () => {\r\n    const { chatName, chatParticipants } = this.state;\r\n\r\n    if (chatName && chatParticipants.length > 0) {\r\n      try {\r\n        // Here, add code to create the chat on the server\r\n        // This is a placeholder and should be replaced with actual server request\r\n        await createChatOnServer(chatName, chatParticipants);\r\n        Alert.alert('Success', 'New chat created successfully');\r\n      } catch (error) {\r\n        Alert.alert('Error', error.toString());\r\n      }\r\n    } else {\r\n      Alert.alert('Error', 'Please input chat name and add at least one participant');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { chatName, searchQuery, searchResults, chatParticipants } = this.state;\r\n\r\n    return (\r\n      <View>\r\n        <TextInput\r\n          placeholder=\"Chat name\"\r\n          value={chatName}\r\n          onChangeText={this.handleChatNameChange}\r\n        />\r\n\r\n        <TextInput\r\n          placeholder=\"Search contacts\"\r\n          value={searchQuery}\r\n          onChangeText={this.handleSearchChange}\r\n        />\r\n\r\n        <FlatList\r\n          data={searchResults}\r\n          renderItem={({ item }) => (\r\n            <View>\r\n              <Text>{item.name} ({item.userId})</Text>\r\n              <Button title=\"Add to chat\" onPress={() => this.addToChat(item)} />\r\n            </View>\r\n          )}\r\n          keyExtractor={(item) => item.userId}\r\n        />\r\n\r\n        <Text>Participants:</Text>\r\n        <FlatList\r\n          data={chatParticipants}\r\n          renderItem={({ item }) => <Text>{item.name}</Text>}\r\n          keyExtractor={(item) => item.userId}\r\n        />\r\n\r\n        <Button title=\"Create Chat\" onPress={this.createNewChat} />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewChatScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}