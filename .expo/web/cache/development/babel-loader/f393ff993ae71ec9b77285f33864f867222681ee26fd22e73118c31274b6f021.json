{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport { item } from \"react-native-web/dist/index\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ChatScreen = function (_Component) {\n  _inherits(ChatScreen, _Component);\n  var _super = _createSuper(ChatScreen);\n  function ChatScreen(props) {\n    var _this;\n    _classCallCheck(this, ChatScreen);\n    _this = _super.call(this, props);\n    _this.state = {\n      chats: [],\n      error: null\n    };\n    return _this;\n  }\n  _createClass(ChatScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n      this.focusListener = this.props.navigation.addListener('focus', function () {\n        _this2.viewChats();\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.focusListener != null && this.focusListener.remove) {\n        this.focusListener.remove();\n      }\n    }\n  }, {\n    key: \"viewChats\",\n    value: function () {\n      var _viewChats = _asyncToGenerator(function* () {\n        try {\n          var response = yield fetch('http://localhost:3333/api/1.0.0/chat', {\n            method: 'GET',\n            headers: {\n              'X-Authorization': yield AsyncStorage.getItem('whatsthat_session_token'),\n              'Content-Type': 'application/json'\n            }\n          });\n          if (response.status === 200) {\n            var chats = yield response.json();\n            this.setState({\n              chats: chats\n            });\n            console.log(this.state.chats);\n          } else if (response.status === 401) {\n            console.log('Unauthorised');\n            yield AsyncStorage.removeItem('whatsthat_session_token');\n            yield AsyncStorage.removeItem('whatsthat_user_id');\n            this.props.navigation.navigate('Login');\n          } else {\n            throw 'Server Error';\n          }\n        } catch (error) {\n          this.setState({\n            error: error\n          });\n        }\n      });\n      function viewChats() {\n        return _viewChats.apply(this, arguments);\n      }\n      return viewChats;\n    }()\n  }, {\n    key: \"viewSingleChat\",\n    value: function () {\n      var _viewSingleChat = _asyncToGenerator(function* (chat_id) {\n        try {\n          var response = yield fetch(\"http://localhost:3333/api/1.0.0/chat/\" + chat_id, {\n            method: 'GET',\n            headers: {\n              'X-Authorization': yield AsyncStorage.getItem('whatsthat_session_token'),\n              'Content-Type': 'application/json'\n            }\n          });\n          if (response.status === 200) {\n            var chat = yield response.json();\n            this.setState({\n              chat: chat\n            });\n          } else if (response.status === 401) {\n            console.log('Unauthorised');\n            yield AsyncStorage.removeItem('whatsthat_session_token');\n            yield AsyncStorage.removeItem('whatsthat_user_id');\n            this.props.navigation.navigate('Login');\n          } else if (response.status === 403) {\n            console.log('Forbidden');\n          } else if (response.status === 404) {\n            console.log('Not Found');\n          } else {\n            throw 'Server Error';\n          }\n        } catch (error) {\n          this.setState({\n            error: error\n          });\n        }\n      });\n      function viewSingleChat(_x) {\n        return _viewSingleChat.apply(this, arguments);\n      }\n      return viewSingleChat;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      var _this$state = this.state,\n        chats = _this$state.chats,\n        singleChat = _this$state.singleChat;\n      return _jsxs(View, {\n        children: [_jsx(TouchableOpacity, {\n          style: {\n            alignSelf: 'center',\n            margin: 10,\n            padding: 10,\n            backgroundColor: '#007AFF'\n          },\n          onPress: function onPress() {\n            return _this3.props.navigation.navigate('NewChat');\n          },\n          children: _jsx(Text, {\n            style: {\n              color: '#fff'\n            },\n            children: \"Create New Chat\"\n          })\n        }), _jsx(TextInput, {\n          placeholder: \"Enter chat ID\",\n          value: this.state.chatSearchId,\n          onChangeText: function onChangeText(text) {\n            return _this3.setState({\n              chatSearchId: text\n            });\n          }\n        }), _jsx(Button, {\n          title: \"Search\",\n          onPress: function onPress() {\n            return _this3.viewSingleChat(_this3.state.chatSearchId);\n          }\n        }), singleChat && _jsxs(View, {\n          children: [_jsxs(Text, {\n            children: [\"Chat ID: \", singleChat.chat_id]\n          }), _jsxs(Text, {\n            children: [\"Chat Name: \", singleChat.name]\n          }), _jsxs(Text, {\n            children: [\"Creator: \", singleChat.creator.first_name, \" \", singleChat.creator.last_name]\n          })]\n        }), _jsx(FlatList, {\n          data: chats,\n          renderItem: function renderItem(_ref) {\n            var item = _ref.item;\n            return _jsxs(View, {\n              children: [_jsxs(Text, {\n                children: [\"Chat ID: \", item.chat_id]\n              }), _jsxs(Text, {\n                children: [\"Chat Name: \", item.name]\n              }), _jsxs(Text, {\n                children: [\"Creator: \", item.creator.first_name, \" \", item.creator.last_name]\n              }), _jsxs(Text, {\n                children: [\"Last Message: \", item.last_message.message]\n              })]\n            });\n          },\n          keyExtractor: function keyExtractor(item) {\n            return item.chat_id.toString();\n          }\n        })]\n      });\n    }\n  }]);\n  return ChatScreen;\n}(Component);\nexport default ChatScreen;","map":{"version":3,"names":["React","Component","Text","View","TextInput","Button","FlatList","AsyncStorage","item","TouchableOpacity","jsx","_jsx","jsxs","_jsxs","ChatScreen","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","chats","error","_createClass","key","value","componentDidMount","_this2","focusListener","navigation","addListener","viewChats","componentWillUnmount","remove","_viewChats","_asyncToGenerator","response","fetch","method","headers","getItem","status","json","setState","console","log","removeItem","navigate","apply","arguments","_viewSingleChat","chat_id","chat","viewSingleChat","_x","render","_this3","_this$state","singleChat","children","style","alignSelf","margin","padding","backgroundColor","onPress","color","placeholder","chatSearchId","onChangeText","text","title","name","creator","first_name","last_name","data","renderItem","_ref","last_message","message","keyExtractor","toString"],"sources":["C:/Users/44773/Desktop/Assingment/components/Chat.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Text, View, TextInput, Button, FlatList, AsyncStorage, item, TouchableOpacity } from 'react-native';\r\n\r\nclass ChatScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      chats: [],\r\n      error: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.focusListener = this.props.navigation.addListener('focus', () => {\r\n      this.viewChats();\r\n    });\r\n  }\r\n  \r\n  componentWillUnmount() {\r\n    if (this.focusListener != null && this.focusListener.remove) {\r\n      this.focusListener.remove();\r\n    }\r\n  }\r\n  \r\n  async viewChats() {\r\n    try {\r\n      const response = await fetch('http://localhost:3333/api/1.0.0/chat', {\r\n        method: 'GET',\r\n        headers: {\r\n          'X-Authorization': await AsyncStorage.getItem('whatsthat_session_token'),\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      if (response.status === 200) {\r\n        const chats = await response.json();\r\n        this.setState({ chats: chats });\r\n        console.log(this.state.chats);\r\n      } else if (response.status === 401) {\r\n        console.log('Unauthorised');\r\n        await AsyncStorage.removeItem('whatsthat_session_token');\r\n        await AsyncStorage.removeItem('whatsthat_user_id');\r\n        this.props.navigation.navigate('Login');\r\n      } else {\r\n        throw 'Server Error';\r\n      }\r\n    } catch (error) {\r\n      this.setState({ error: error });\r\n    }\r\n  }\r\n\r\n  async viewSingleChat(chat_id) {\r\n    try {\r\n      const response = await fetch(`http://localhost:3333/api/1.0.0/chat/${chat_id}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'X-Authorization': await AsyncStorage.getItem('whatsthat_session_token'),\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n  \r\n      if (response.status === 200) {\r\n        const chat = await response.json();\r\n        this.setState({ chat: chat });\r\n      } else if (response.status === 401) {\r\n        console.log('Unauthorised');\r\n        await AsyncStorage.removeItem('whatsthat_session_token');\r\n        await AsyncStorage.removeItem('whatsthat_user_id');\r\n        this.props.navigation.navigate('Login');\r\n      } else if (response.status === 403) {\r\n        console.log('Forbidden');\r\n      } else if (response.status === 404) {\r\n        console.log('Not Found');\r\n      } else {\r\n        throw 'Server Error';\r\n      }\r\n    } catch (error) {\r\n      this.setState({ error: error });\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    const { chats, singleChat } = this.state;\r\n    \r\n    return (\r\n      <View>\r\n        <TouchableOpacity \r\n          style={{ alignSelf: 'center', margin: 10, padding: 10, backgroundColor: '#007AFF' }} \r\n          onPress={() => this.props.navigation.navigate('NewChat')}\r\n        >\r\n          <Text style={{ color: '#fff' }}>Create New Chat</Text>\r\n        </TouchableOpacity>\r\n\r\n        <TextInput\r\n          placeholder=\"Enter chat ID\"\r\n          value={this.state.chatSearchId}\r\n          onChangeText={(text) => this.setState({ chatSearchId: text })}\r\n        />\r\n        <Button \r\n          title=\"Search\" \r\n          onPress={() => this.viewSingleChat(this.state.chatSearchId)}\r\n        />\r\n\r\n        {singleChat && (\r\n          <View>\r\n            <Text>Chat ID: {singleChat.chat_id}</Text>\r\n            <Text>Chat Name: {singleChat.name}</Text>\r\n            <Text>Creator: {singleChat.creator.first_name} {singleChat.creator.last_name}</Text>\r\n          </View>\r\n        )}\r\n\r\n        <FlatList\r\n          data={chats}\r\n          renderItem={({ item }) => (\r\n            <View>\r\n              <Text>Chat ID: {item.chat_id}</Text>\r\n              <Text>Chat Name: {item.name}</Text>\r\n              <Text>Creator: {item.creator.first_name} {item.creator.last_name}</Text>\r\n              <Text>Last Message: {item.last_message.message}</Text>\r\n            </View>\r\n          )}\r\n          keyExtractor={(item) => item.chat_id.toString()}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default ChatScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}