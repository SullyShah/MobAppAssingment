{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AddContactsScreen = function (_Component) {\n  _inherits(AddContactsScreen, _Component);\n  var _super = _createSuper(AddContactsScreen);\n  function AddContactsScreen(props) {\n    var _this;\n    _classCallCheck(this, AddContactsScreen);\n    _this = _super.call(this, props);\n    _this.AddUser = function () {\n      var _ref = _asyncToGenerator(function* (user_id) {\n        try {\n          var response = yield fetch(\"http://localhost:3333/api/1.0.0/user/\" + user_id + \"/contact\", {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'X-Authorization': yield AsyncStorage.getItem('whatsthat_session_token')\n            },\n            body: JSON.stringify({\n              user_id: _this.state.user_id\n            })\n          });\n          var responseText = yield response.text();\n          if (response.status === 200) {\n            if (responseText === \"Already a contact\") {\n              alert(\"This user is already a contact.\");\n              return;\n            } else if (response.status === 201) {\n              throw 'User Added Succesfully';\n              _this.props.route.params.onRefreshContacts();\n              _this.props.navigation.goBack();\n            }\n          } else if (response.status === 400) {\n            throw 'You Cant add yourself as a contact';\n          } else if (response.status === 401) {\n            throw 'Unauthorised';\n          } else if (response.status === 404) {\n            throw 'Not Found';\n          } else {\n            throw 'Server Error';\n          }\n        } catch (error) {\n          console.error(error);\n        }\n      });\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    _this.state = {\n      email: '',\n      user_id: ''\n    };\n    return _this;\n  }\n  _createClass(AddContactsScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      return _jsxs(View, {\n        children: [_jsx(Text, {\n          children: \"This is the Add Contacts screen\"\n        }), _jsx(TextInput, {\n          placeholder: \"Enter The User ID Of The Person You Want To Add\",\n          onChangeText: function onChangeText(user_id) {\n            return _this2.setState({\n              user_id: user_id\n            });\n          },\n          value: this.state.user_id,\n          style: {\n            padding: 10,\n            borderWidth: 2,\n            borderRadius: 5,\n            margin: 10\n          }\n        }), _jsx(Button, {\n          title: \"Add Contact\",\n          onPress: function onPress() {\n            return _this2.AddUser(_this2.state.user_id);\n          }\n        })]\n      });\n    }\n  }]);\n  return AddContactsScreen;\n}(Component);\nexport default AddContactsScreen;","map":{"version":3,"names":["React","Component","Text","View","TextInput","Button","AsyncStorage","jsx","_jsx","jsxs","_jsxs","AddContactsScreen","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","AddUser","_ref","_asyncToGenerator","user_id","response","fetch","method","headers","getItem","body","JSON","stringify","state","responseText","text","status","alert","route","params","onRefreshContacts","navigation","goBack","error","console","_x","apply","arguments","email","_createClass","key","value","render","_this2","children","placeholder","onChangeText","setState","style","padding","borderWidth","borderRadius","margin","title","onPress"],"sources":["C:/Users/44773/Desktop/Assingment/components/AddContact.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Text, View, TextInput, Button } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nclass AddContactsScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      user_id: '',\r\n    };\r\n  }\r\n\r\n  AddUser = async (user_id) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:3333/api/1.0.0/user/${user_id}/contact`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-Authorization': await AsyncStorage.getItem('whatsthat_session_token'),\r\n        },\r\n        body: JSON.stringify({\r\n          user_id: this.state.user_id,\r\n        }),\r\n      });\r\n  \r\n      const responseText = await response.text();\r\n  \r\n      if (response.status === 200) {\r\n        if (responseText === \"Already a contact\") {\r\n          alert(\"This user is already a contact.\");\r\n          return;\r\n      } else if (response.status === 201) {\r\n        throw 'User Added Succesfully';\r\n        this.props.route.params.onRefreshContacts();\r\n        this.props.navigation.goBack();\r\n      }\r\n      } else if (response.status === 400) {\r\n        throw 'You Cant add yourself as a contact';\r\n      } else if (response.status === 401) {\r\n        throw 'Unauthorised';\r\n      } else if (response.status === 404) {\r\n        throw 'Not Found';\r\n      } else {\r\n        throw 'Server Error';\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  \r\n\r\n\r\n          // let contact;\r\n        // try {\r\n        //   contact = JSON.parse(responseText);\r\n        // } catch (error) {\r\n        //   console.error('Error parsing JSON:', error);\r\n        //   throw 'Unexpected server response';\r\n        // }\r\n        // this.props.navigation.navigate('Contact', { contact });\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <View>\r\n        <Text>This is the Add Contacts screen</Text>\r\n        <TextInput\r\n          placeholder=\"Enter The User ID Of The Person You Want To Add\"\r\n          onChangeText={(user_id) => this.setState({ user_id })}\r\n          value={this.state.user_id}\r\n          style={{\r\n            padding: 10,\r\n            borderWidth: 2,\r\n            borderRadius: 5,\r\n            margin: 10,\r\n          }}\r\n        />\r\n\r\n        <Button title=\"Add Contact\" onPress={() => this.AddUser(this.state.user_id)} />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContactsScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}