{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ChatScreen = function (_Component) {\n  _inherits(ChatScreen, _Component);\n  var _super = _createSuper(ChatScreen);\n  function ChatScreen(props) {\n    var _this;\n    _classCallCheck(this, ChatScreen);\n    _this = _super.call(this, props);\n    _this.state = {\n      chats: [],\n      error: null,\n      chatSearchId: '',\n      singleChat: null,\n      ChatName: ''\n    };\n    return _this;\n  }\n  _createClass(ChatScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n      this.focusListener = this.props.navigation.addListener('focus', function () {\n        _this2.viewChats();\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.focusListener != null && this.focusListener.remove) {\n        this.focusListener.remove();\n      }\n    }\n  }, {\n    key: \"viewChats\",\n    value: function () {\n      var _viewChats = _asyncToGenerator(function* () {\n        try {\n          var response = yield fetch('http://localhost:3333/api/1.0.0/chat', {\n            method: 'GET',\n            headers: {\n              'X-Authorization': yield AsyncStorage.getItem('whatsthat_session_token'),\n              'Content-Type': 'application/json'\n            }\n          });\n          if (response.status === 200) {\n            var chats = yield response.json();\n            this.setState({\n              chats: chats\n            });\n          } else if (response.status === 401) {\n            console.log('Unauthorised');\n            yield AsyncStorage.removeItem('whatsthat_session_token');\n            yield AsyncStorage.removeItem('whatsthat_user_id');\n            this.props.navigation.navigate('Login');\n          } else {\n            throw 'Server Error';\n          }\n        } catch (error) {\n          this.setState({\n            error: error\n          });\n        }\n      });\n      function viewChats() {\n        return _viewChats.apply(this, arguments);\n      }\n      return viewChats;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      var _this$state = this.state,\n        chats = _this$state.chats,\n        singleChat = _this$state.singleChat;\n      return _jsxs(View, {\n        style: styles.container,\n        children: [_jsxs(View, {\n          style: styles.header,\n          children: [_jsx(Text, {\n            style: styles.headerText,\n            children: \"Chat\"\n          }), _jsx(TouchableOpacity, {\n            style: styles.headerButton,\n            onPress: function onPress() {\n              return _this3.props.navigation.navigate('NewChat');\n            },\n            children: _jsx(Text, {\n              style: styles.createChatLinkText,\n              children: \"Create New Chat\"\n            })\n          })]\n        }), _jsx(FlatList, {\n          data: chats,\n          renderItem: function renderItem(_ref) {\n            var item = _ref.item;\n            return _jsxs(TouchableOpacity, {\n              style: styles.chatContainer,\n              onPress: function onPress() {\n                return _this3.props.navigation.navigate('SingleChat', {\n                  chat_id: item.chat_id\n                });\n              },\n              children: [_jsx(Text, {\n                style: styles.chatName,\n                children: item.name\n              }), _jsxs(Text, {\n                children: [\"Last Message: \", item.last_message.message]\n              })]\n            });\n          },\n          keyExtractor: function keyExtractor(item) {\n            return item.chat_id.toString();\n          }\n        })]\n      });\n    }\n  }]);\n  return ChatScreen;\n}(Component);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 10,\n    backgroundColor: '#fff'\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    backgroundColor: '#4682B4',\n    padding: 10,\n    borderRadius: 8,\n    marginVertical: 10\n  },\n  headerText: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#fff'\n  },\n  headerButton: {\n    backgroundColor: '#6A5ACD',\n    padding: 10,\n    borderRadius: 5\n  },\n  createChatLinkText: {\n    color: '#fff',\n    fontWeight: 'bold'\n  },\n  chatContainer: {\n    borderColor: '#ccc',\n    borderWidth: 1,\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  },\n  singleChatContainer: {\n    borderColor: '#ccc',\n    borderWidth: 1,\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  },\n  chatName: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 5\n  }\n});\nexport default ChatScreen;","map":{"version":3,"names":["React","Component","Text","View","TextInput","Button","FlatList","TouchableOpacity","StyleSheet","AsyncStorage","jsx","_jsx","jsxs","_jsxs","ChatScreen","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","chats","error","chatSearchId","singleChat","ChatName","_createClass","key","value","componentDidMount","_this2","focusListener","navigation","addListener","viewChats","componentWillUnmount","remove","_viewChats","_asyncToGenerator","response","fetch","method","headers","getItem","status","json","setState","console","log","removeItem","navigate","apply","arguments","render","_this3","_this$state","style","styles","container","children","header","headerText","headerButton","onPress","createChatLinkText","data","renderItem","_ref","item","chatContainer","chat_id","chatName","name","last_message","message","keyExtractor","toString","create","flex","paddingHorizontal","backgroundColor","flexDirection","justifyContent","alignItems","padding","borderRadius","marginVertical","fontSize","fontWeight","color","borderColor","borderWidth","marginBottom","singleChatContainer"],"sources":["C:/Users/44773/Desktop/Assingment/components/Chat.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Text, View, TextInput, Button, FlatList, TouchableOpacity, StyleSheet } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nclass ChatScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      chats: [],\r\n      error: null,\r\n      chatSearchId: '',\r\n      singleChat: null,\r\n      ChatName:'',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.focusListener = this.props.navigation.addListener('focus', () => {\r\n      this.viewChats();\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.focusListener != null && this.focusListener.remove) {\r\n      this.focusListener.remove();\r\n    }\r\n  }\r\n  async viewChats() {\r\n    try {\r\n      const response = await fetch('http://localhost:3333/api/1.0.0/chat', {\r\n        method: 'GET',\r\n        headers: {\r\n          'X-Authorization': await AsyncStorage.getItem('whatsthat_session_token'),\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      if (response.status === 200) {\r\n        const chats = await response.json();\r\n        this.setState({ chats: chats });\r\n      } else if (response.status === 401) {\r\n        console.log('Unauthorised');\r\n        await AsyncStorage.removeItem('whatsthat_session_token');\r\n        await AsyncStorage.removeItem('whatsthat_user_id');\r\n        this.props.navigation.navigate('Login');\r\n      } else {\r\n        throw 'Server Error';\r\n      }\r\n    } catch (error) {\r\n      this.setState({ error: error });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { chats, singleChat } = this.state;\r\n\r\n    return (\r\n      <View style={styles.container}>\r\n        <View style={styles.header}>\r\n          <Text style={styles.headerText}>Chat</Text>\r\n          <TouchableOpacity style={styles.headerButton} onPress={() => this.props.navigation.navigate('NewChat')}>\r\n            <Text style={styles.createChatLinkText}>Create New Chat</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        <FlatList\r\n          data={chats}\r\n          renderItem={({ item }) => (\r\n            <TouchableOpacity \r\n              style={styles.chatContainer}\r\n              onPress={() => this.props.navigation.navigate('SingleChat', { chat_id: item.chat_id })}>\r\n              <Text style={styles.chatName}>{item.name}</Text>\r\n              <Text>Last Message: {item.last_message.message}</Text>\r\n            </TouchableOpacity>\r\n          )}\r\n          keyExtractor={(item) => item.chat_id.toString()}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingHorizontal: 10,\r\n    backgroundColor: '#fff',\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    backgroundColor: '#4682B4', // change this to your desired color\r\n    padding: 10,\r\n    borderRadius: 8,\r\n    marginVertical: 10,\r\n  },\r\n  headerText: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    color: '#fff',\r\n  },\r\n  headerButton: {\r\n    backgroundColor: '#6A5ACD', // change this to your desired color\r\n    padding: 10,\r\n    borderRadius: 5,\r\n  },\r\n  createChatLinkText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n  },\r\n\r\n  chatContainer: {\r\n    borderColor: '#ccc',\r\n    borderWidth: 1,\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginBottom: 10,\r\n  },\r\n  singleChatContainer: {\r\n    borderColor: '#ccc',\r\n    borderWidth: 1,\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginBottom: 10,\r\n  },\r\n  chatName: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginBottom: 5,\r\n  },\r\n});\r\n\r\nexport default ChatScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}